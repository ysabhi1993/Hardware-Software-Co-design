//*****************************************************************************
//*****************************************************************************
//  FILENAME: TickTimer.h
//   Version: 2.6, Updated on 2013/5/19 at 10:44:39
//  Generated by PSoC Designer 5.4.2946
//
//  DESCRIPTION: Timer16 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2013. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef TickTimer_INCLUDE
#define TickTimer_INCLUDE

#include <m8c.h>

#pragma fastcall16 TickTimer_EnableInt
#pragma fastcall16 TickTimer_DisableInt
#pragma fastcall16 TickTimer_Start
#pragma fastcall16 TickTimer_Stop
#pragma fastcall16 TickTimer_wReadTimer                // Read  DR0
#pragma fastcall16 TickTimer_wReadTimerSaveCV          // Read  DR0      
#pragma fastcall16 TickTimer_WritePeriod               // Write DR1
#pragma fastcall16 TickTimer_wReadCompareValue         // Read  DR2
#pragma fastcall16 TickTimer_WriteCompareValue         // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 wTickTimer_ReadCounter              // Read  DR0 "Obsolete"
#pragma fastcall16 wTickTimer_CaptureCounter           // Read  DR0 "Obsolete"
#pragma fastcall16 wTickTimer_ReadTimer                // Read  DR0 (Deprecated)
#pragma fastcall16 wTickTimer_ReadTimerSaveCV          // Read  DR0 (Deprecated)
#pragma fastcall16 wTickTimer_ReadCompareValue         // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the TickTimer API.
//-------------------------------------------------

extern void TickTimer_EnableInt(void);                           // Proxy 1
extern void TickTimer_DisableInt(void);                          // Proxy 1
extern void TickTimer_Start(void);                               // Proxy 1
extern void TickTimer_Stop(void);                                // Proxy 1
extern WORD TickTimer_wReadTimer(void);                          // Proxy 1
extern WORD TickTimer_wReadTimerSaveCV(void);                    // Proxy 2
extern void TickTimer_WritePeriod(WORD wPeriod);                 // Proxy 1
extern WORD TickTimer_wReadCompareValue(void);                   // Proxy 1
extern void TickTimer_WriteCompareValue(WORD wCompareValue);     // Proxy 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern WORD wTickTimer_ReadCompareValue(void);       // Deprecated
extern WORD wTickTimer_ReadTimerSaveCV(void);        // Deprecated
extern WORD wTickTimer_ReadCounter(void);            // Obsolete
extern WORD wTickTimer_ReadTimer(void);              // Deprecated
extern WORD wTickTimer_CaptureCounter(void);         // Obsolete


//--------------------------------------------------
// Constants for TickTimer API's.
//--------------------------------------------------

#define TickTimer_CONTROL_REG_START_BIT        ( 0x01 )
#define TickTimer_INT_REG_ADDR                 ( 0x0e1 )
#define TickTimer_INT_MASK                     ( 0x02 )


//--------------------------------------------------
// Constants for TickTimer user defined values
//--------------------------------------------------

#define TickTimer_PERIOD                       ( 0xffff )
#define TickTimer_COMPARE_VALUE                ( 0x0 )


//-------------------------------------------------
// Register Addresses for TickTimer
//-------------------------------------------------

#pragma ioport  TickTimer_COUNTER_LSB_REG:  0x020          //Count register LSB
BYTE            TickTimer_COUNTER_LSB_REG;
#pragma ioport  TickTimer_COUNTER_MSB_REG:  0x024          //Count register MSB
BYTE            TickTimer_COUNTER_MSB_REG;
#pragma ioport  TickTimer_PERIOD_LSB_REG:   0x021          //Period register LSB
BYTE            TickTimer_PERIOD_LSB_REG;
#pragma ioport  TickTimer_PERIOD_MSB_REG:   0x025          //Period register MSB
BYTE            TickTimer_PERIOD_MSB_REG;
#pragma ioport  TickTimer_COMPARE_LSB_REG:  0x022          //Compare register LSB
BYTE            TickTimer_COMPARE_LSB_REG;
#pragma ioport  TickTimer_COMPARE_MSB_REG:  0x026          //Compare register MSB
BYTE            TickTimer_COMPARE_MSB_REG;
#pragma ioport  TickTimer_CONTROL_LSB_REG:  0x023          //Control register LSB
BYTE            TickTimer_CONTROL_LSB_REG;
#pragma ioport  TickTimer_CONTROL_MSB_REG:  0x027          //Control register MSB
BYTE            TickTimer_CONTROL_MSB_REG;
#pragma ioport  TickTimer_FUNC_LSB_REG: 0x120              //Function register LSB
BYTE            TickTimer_FUNC_LSB_REG;
#pragma ioport  TickTimer_FUNC_MSB_REG: 0x124              //Function register MSB
BYTE            TickTimer_FUNC_MSB_REG;
#pragma ioport  TickTimer_INPUT_LSB_REG:    0x121          //Input register LSB
BYTE            TickTimer_INPUT_LSB_REG;
#pragma ioport  TickTimer_INPUT_MSB_REG:    0x125          //Input register MSB
BYTE            TickTimer_INPUT_MSB_REG;
#pragma ioport  TickTimer_OUTPUT_LSB_REG:   0x122          //Output register LSB
BYTE            TickTimer_OUTPUT_LSB_REG;
#pragma ioport  TickTimer_OUTPUT_MSB_REG:   0x126          //Output register MSB
BYTE            TickTimer_OUTPUT_MSB_REG;
#pragma ioport  TickTimer_INT_REG:       0x0e1             //Interrupt Mask Register
BYTE            TickTimer_INT_REG;


//-------------------------------------------------
// TickTimer Macro 'Functions'
//-------------------------------------------------

#define TickTimer_Start_M \
   ( TickTimer_CONTROL_LSB_REG |=  TickTimer_CONTROL_REG_START_BIT )

#define TickTimer_Stop_M  \
   ( TickTimer_CONTROL_LSB_REG &= ~TickTimer_CONTROL_REG_START_BIT )

#define TickTimer_EnableInt_M   \
   M8C_EnableIntMask(  TickTimer_INT_REG, TickTimer_INT_MASK )

#define TickTimer_DisableInt_M  \
   M8C_DisableIntMask( TickTimer_INT_REG, TickTimer_INT_MASK )

#endif
// end of file TickTimer.h
