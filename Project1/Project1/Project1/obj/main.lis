 0000           ;-----------------------------------------------------------------------------
 0000           ; Assembly main line
 0000           ;inititalize index page
 0000           ;-----------------------------------------------------------------------------
 0000           
 00C0           FLAG_PGMODE_MASK:  equ 0C0h     ; Paging control for > 256 bytes of RAM
 0000           FLAG_PGMODE_0:     equ 00h       ; Direct to Page 0,      indexed to Page 0
 0040           FLAG_PGMODE_1:     equ 40h       ; Direct to Page 0,      indexed to STK_PP page
 0080           FLAG_PGMODE_2:     equ 80h       ; Direct to CUR_PP page, indexed to IDX_PP page
 00C0           FLAG_PGMODE_3:     equ 0C0h       ; Direct to CUR_PP page, indexed to STK_PP page
 0000           FLAG_PGMODE_00b:   equ 00h       ; Same as PGMODE_0
 0040           FLAG_PGMODE_01b:   equ 40h       ; Same as PGMODE_1
 0080           FLAG_PGMODE_10b:   equ 80h       ; Same as PGMODE_2
 00C0           FLAG_PGMODE_11b:   equ 0C0h       ; Same as PGMODE_3
 0010           FLAG_XIO_MASK:     equ 10h     ; I/O Bank select for register space
 0008           FLAG_SUPER:        equ 08h     ; Supervisor Mode
 0004           FLAG_CARRY:        equ 04h     ; Carry Condition Flag
 0002           FLAG_ZERO:         equ 02h     ; Zero  Condition Flag
 0001           FLAG_GLOBAL_IE:    equ 01h     ; Glogal Interrupt Enable
 0000           
 0000           
 0000           ;;=============================================================================
 0000           ;;      Register Space, Bank 0
 0000           ;;=============================================================================
 0000           
 0000           ;------------------------------------------------
 0000           ;  Port Registers
 0000           ;  Note: Also see this address range in Bank 1.
 0000           ;------------------------------------------------
 0000           ; Port 0
 0000           PRT0DR:       equ 00h          ; Port 0 Data Register                     (RW)
 0001           PRT0IE:       equ 01h          ; Port 0 Interrupt Enable Register         (RW)
 0002           PRT0GS:       equ 02h          ; Port 0 Global Select Register            (RW)
 0003           PRT0DM2:      equ 03h          ; Port 0 Drive Mode 2                      (RW)
 0000           ; Port 1
 0004           PRT1DR:       equ 04h          ; Port 1 Data Register                     (RW)
 0005           PRT1IE:       equ 05h          ; Port 1 Interrupt Enable Register         (RW)
 0006           PRT1GS:       equ 06h          ; Port 1 Global Select Register            (RW)
 0007           PRT1DM2:      equ 07h          ; Port 1 Drive Mode 2                      (RW)
 0000           ; Port 2
 0008           PRT2DR:       equ 08h          ; Port 2 Data Register                     (RW)
 0009           PRT2IE:       equ 09h          ; Port 2 Interrupt Enable Register         (RW)
 000A           PRT2GS:       equ 0Ah          ; Port 2 Global Select Register            (RW)
 000B           PRT2DM2:      equ 0Bh          ; Port 2 Drive Mode 2                      (RW)
 0000           ; Port 3
 000C           PRT3DR:       equ 0Ch          ; Port 3 Data Register                     (RW)
 000D           PRT3IE:       equ 0Dh          ; Port 3 Interrupt Enable Register         (RW)
 000E           PRT3GS:       equ 0Eh          ; Port 3 Global Select Register            (RW)
 000F           PRT3DM2:      equ 0Fh          ; Port 3 Drive Mode 2                      (RW)
 0000           ; Port 4
 0010           PRT4DR:       equ 10h          ; Port 4 Data Register                     (RW)
 0011           PRT4IE:       equ 11h          ; Port 4 Interrupt Enable Register         (RW)
 0012           PRT4GS:       equ 12h          ; Port 4 Global Select Register            (RW)
 0013           PRT4DM2:      equ 13h          ; Port 4 Drive Mode 2                      (RW)
 0000           ; Port 5
 0014           PRT5DR:       equ 14h          ; Port 5 Data Register                     (RW)
 0015           PRT5IE:       equ 15h          ; Port 5 Interrupt Enable Register         (RW)
 0016           PRT5GS:       equ 16h          ; Port 5 Global Select Register            (RW)
 0017           PRT5DM2:      equ 17h          ; Port 5 Drive Mode 2                      (RW)
 0000           ; Port 6
 0018           PRT6DR:       equ 18h          ; Port 6 Data Register                     (RW)
 0019           PRT6IE:       equ 19h          ; Port 6 Interrupt Enable Register         (RW)
 001A           PRT6GS:       equ 1Ah          ; Port 6 Global Select Register            (RW)
 001B           PRT6DM2:      equ 1Bh          ; Port 6 Drive Mode 2                      (RW)
 0000           ; Port 7
 001C           PRT7DR:       equ 1Ch          ; Port 7 Data Register                     (RW)
 001D           PRT7IE:       equ 1Dh          ; Port 7 Interrupt Enable Register         (RW)
 001E           PRT7GS:       equ 1Eh          ; Port 7 Global Select Register            (RW)
 001F           PRT7DM2:      equ 1Fh          ; Port 7 Drive Mode 2                      (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Digital PSoC(tm) block Registers
 0000           ;  Note: Also see this address range in Bank 1.
 0000           ;------------------------------------------------
 0000           ; Digital PSoC block 00, Basic Type B
 0020           DBB00DR0:     equ 20h          ; data register 0                          (#)
 0021           DBB00DR1:     equ 21h          ; data register 1                          (W)
 0022           DBB00DR2:     equ 22h          ; data register 2                          (RW)
 0023           DBB00CR0:     equ 23h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 01, Basic Type B
 0024           DBB01DR0:     equ 24h          ; data register 0                          (#)
 0025           DBB01DR1:     equ 25h          ; data register 1                          (W)
 0026           DBB01DR2:     equ 26h          ; data register 2                          (RW)
 0027           DBB01CR0:     equ 27h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 02, Communications Type B
 0028           DCB02DR0:     equ 28h          ; data register 0                          (#)
 0029           DCB02DR1:     equ 29h          ; data register 1                          (W)
 002A           DCB02DR2:     equ 2Ah          ; data register 2                          (RW)
 002B           DCB02CR0:     equ 2Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 03, Communications Type B
 002C           DCB03DR0:     equ 2Ch          ; data register 0                          (#)
 002D           DCB03DR1:     equ 2Dh          ; data register 1                          (W)
 002E           DCB03DR2:     equ 2Eh          ; data register 2                          (RW)
 002F           DCB03CR0:     equ 2Fh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 10, Basic Type B
 0030           DBB10DR0:     equ 30h          ; data register 0                          (#)
 0031           DBB10DR1:     equ 31h          ; data register 1                          (W)
 0032           DBB10DR2:     equ 32h          ; data register 2                          (RW)
 0033           DBB10CR0:     equ 33h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 11, Basic Type B
 0034           DBB11DR0:     equ 34h          ; data register 0                          (#)
 0035           DBB11DR1:     equ 35h          ; data register 1                          (W)
 0036           DBB11DR2:     equ 36h          ; data register 2                          (RW)
 0037           DBB11CR0:     equ 37h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 12, Communications Type B
 0038           DCB12DR0:     equ 38h          ; data register 0                          (#)
 0039           DCB12DR1:     equ 39h          ; data register 1                          (W)
 003A           DCB12DR2:     equ 3Ah          ; data register 2                          (RW)
 003B           DCB12CR0:     equ 3Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 13, Communications Type B
 003C           DCB13DR0:     equ 3Ch          ; data register 0                          (#)
 003D           DCB13DR1:     equ 3Dh          ; data register 1                          (W)
 003E           DCB13DR2:     equ 3Eh          ; data register 2                          (RW)
 003F           DCB13CR0:     equ 3Fh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 20, Basic Type B
 0040           DBB20DR0:     equ 40h          ; data register 0                          (#)
 0041           DBB20DR1:     equ 41h          ; data register 1                          (W)
 0042           DBB20DR2:     equ 42h          ; data register 2                          (RW)
 0043           DBB20CR0:     equ 43h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 21, Basic Type B
 0044           DBB21DR0:     equ 44h          ; data register 0                          (#)
 0045           DBB21DR1:     equ 45h          ; data register 1                          (W)
 0046           DBB21DR2:     equ 46h          ; data register 2                          (RW)
 0047           DBB21CR0:     equ 47h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 22, Communications Type B
 0048           DCB22DR0:     equ 48h          ; data register 0                          (#)
 0049           DCB22DR1:     equ 49h          ; data register 1                          (W)
 004A           DCB22DR2:     equ 4Ah          ; data register 2                          (RW)
 004B           DCB22CR0:     equ 4Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 23, Communications Type B
 004C           DCB23DR0:     equ 4Ch          ; data register 0                          (#)
 004D           DCB23DR1:     equ 4Dh          ; data register 1                          (W)
 004E           DCB23DR2:     equ 4Eh          ; data register 2                          (RW)
 004F           DCB23CR0:     equ 4Fh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 30, Basic Type B
 0050           DBB30DR0:     equ 50h          ; data register 0                          (#)
 0051           DBB30DR1:     equ 51h          ; data register 1                          (W)
 0052           DBB30DR2:     equ 52h          ; data register 2                          (RW)
 0053           DBB30CR0:     equ 53h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 31, Basic Type B
 0054           DBB31DR0:     equ 54h          ; data register 0                          (#)
 0055           DBB31DR1:     equ 55h          ; data register 1                          (W)
 0056           DBB31DR2:     equ 56h          ; data register 2                          (RW)
 0057           DBB31CR0:     equ 57h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 32, Communications Type B
 0058           DCB32DR0:     equ 58h          ; data register 0                          (#)
 0059           DCB32DR1:     equ 59h          ; data register 1                          (W)
 005A           DCB32DR2:     equ 5Ah          ; data register 2                          (RW)
 005B           DCB32CR0:     equ 5Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 33, Communications Type B
 005C           DCB33DR0:     equ 5Ch          ; data register 0                          (#)
 005D           DCB33DR1:     equ 5Dh          ; data register 1                          (W)
 005E           DCB33DR2:     equ 5Eh          ; data register 2                          (RW)
 005F           DCB33CR0:     equ 5Fh          ; control & status register 0              (#)
 0000           
 0000           ;-------------------------------------
 0000           ;  Analog Resource Control Registers
 0000           ;-------------------------------------
 0060           AMX_IN:       equ 60h          ; Analog Input Multiplexor Control         (RW)
 00C0           AMX_IN_ACI3:          equ 0C0h    ; MASK: column 3 input mux
 0030           AMX_IN_ACI2:          equ 30h    ; MASK: column 2 input mux
 000C           AMX_IN_ACI1:          equ 0Ch    ; MASK: column 1 input mux
 0003           AMX_IN_ACI0:          equ 03h    ; MASK: column 0 input mux
 0000           
 0063           ARF_CR:       equ 63h          ; Analog Reference Control Register        (RW)
 0040           ARF_CR_HBE:           equ 40h    ; MASK: Bias level control
 0038           ARF_CR_REF:           equ 38h    ; MASK: Analog Reference controls
 0007           ARF_CR_REFPWR:        equ 07h    ; MASK: Analog Reference power
 0004           ARF_CR_APWR:          equ 04h    ; MASK: use deprecated; see datasheet
 0003           ARF_CR_SCPWR:         equ 03h    ; MASK: Switched Cap block power
 0000           
 0064           CMP_CR0:      equ 64h          ; Analog Comparator Bus 0 Register         (#)
 0080           CMP_CR0_COMP3:        equ 80h    ; MASK: Column 3 comparator state        (R)
 0040           CMP_CR0_COMP2:        equ 40h    ; MASK: Column 2 comparator state        (R)
 0020           CMP_CR0_COMP1:        equ 20h    ; MASK: Column 1 comparator state        (R)
 0010           CMP_CR0_COMP0:        equ 10h    ; MASK: Column 0 comparator state        (R)
 0008           CMP_CR0_AINT3:        equ 08h    ; MASK: Column 3 interrupt source        (RW)
 0004           CMP_CR0_AINT2:        equ 04h    ; MASK: Column 2 interrupt source        (RW)
 0002           CMP_CR0_AINT1:        equ 02h    ; MASK: Column 1 interrupt source        (RW)
 0001           CMP_CR0_AINT0:        equ 01h    ; MASK: Column 0 interrupt source        (RW)
 0000           
 0065           ASY_CR:       equ 65h          ; Analog Synchronizaton Control            (#)
 0070           ASY_CR_SARCOUNT:      equ 70h    ; MASK: SAR support: resolution count    (W)
 0008           ASY_CR_SARSIGN:       equ 08h    ; MASK: SAR support: sign                (RW)
 0006           ASY_CR_SARCOL:        equ 06h    ; MASK: SAR support: column spec         (RW)
 0001           ASY_CR_SYNCEN:        equ 01h    ; MASK: Stall bit                        (RW)
 0000           
 0066           CMP_CR1:      equ 66h          ; Analog Comparator Bus 1 Register         (RW)
 0080           CMP_CR1_ASYNCH3:      equ 80h    ; MASK: Column 3 comparator bus synch
 0040           CMP_CR1_ASYNCH2:      equ 40h    ; MASK: Column 2 comparator bus synch
 0020           CMP_CR1_ASYNCH1:      equ 20h    ; MASK: Column 1 comparator bus synch
 0010           CMP_CR1_ASYNCH0:      equ 10h    ; MASK: Column 0 comparator bus synch
 0000           
 0000           ;---------------------------------------------------
 0000           ;  Analog PSoC block Registers
 0000           ;
 0000           ;  Note: the following registers are mapped into
 0000           ;  both register bank 0 AND register bank 1.
 0000           ;---------------------------------------------------
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 0
 0070           ACB00CR3:     equ 70h          ; Control register 3                       (RW)
 0071           ACB00CR0:     equ 71h          ; Control register 0                       (RW)
 0072           ACB00CR1:     equ 72h          ; Control register 1                       (RW)
 0073           ACB00CR2:     equ 73h          ; Control register 2                       (RW)
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 1
 0074           ACB01CR3:     equ 74h          ; Control register 3                       (RW)
 0075           ACB01CR0:     equ 75h          ; Control register 0                       (RW)
 0076           ACB01CR1:     equ 76h          ; Control register 1                       (RW)
 0077           ACB01CR2:     equ 77h          ; Control register 2                       (RW)
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 2
 0078           ACB02CR3:     equ 78h          ; Control register 3                       (RW)
 0079           ACB02CR0:     equ 79h          ; Control register 0                       (RW)
 007A           ACB02CR1:     equ 7Ah          ; Control register 1                       (RW)
 007B           ACB02CR2:     equ 7Bh          ; Control register 2                       (RW)
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 3
 007C           ACB03CR3:     equ 7Ch          ; Control register 3                       (RW)
 007D           ACB03CR0:     equ 7Dh          ; Control register 0                       (RW)
 007E           ACB03CR1:     equ 7Eh          ; Control register 1                       (RW)
 007F           ACB03CR2:     equ 7Fh          ; Control register 2                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 1 Col 0
 0080           ASC10CR0:     equ 80h          ; Control register 0                       (RW)
 0081           ASC10CR1:     equ 81h          ; Control register 1                       (RW)
 0082           ASC10CR2:     equ 82h          ; Control register 2                       (RW)
 0083           ASC10CR3:     equ 83h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 1 Col 1
 0084           ASD11CR0:     equ 84h          ; Control register 0                       (RW)
 0085           ASD11CR1:     equ 85h          ; Control register 1                       (RW)
 0086           ASD11CR2:     equ 86h          ; Control register 2                       (RW)
 0087           ASD11CR3:     equ 87h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 1 Col 2
 0088           ASC12CR0:     equ 88h          ; Control register 0                       (RW)
 0089           ASC12CR1:     equ 89h          ; Control register 1                       (RW)
 008A           ASC12CR2:     equ 8Ah          ; Control register 2                       (RW)
 008B           ASC12CR3:     equ 8Bh          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 1 Col 3
 008C           ASD13CR0:     equ 8Ch          ; Control register 0                       (RW)
 008D           ASD13CR1:     equ 8Dh          ; Control register 1                       (RW)
 008E           ASD13CR2:     equ 8Eh          ; Control register 2                       (RW)
 008F           ASD13CR3:     equ 8Fh          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 2 Col 0
 0090           ASD20CR0:     equ 90h          ; Control register 0                       (RW)
 0091           ASD20CR1:     equ 91h          ; Control register 1                       (RW)
 0092           ASD20CR2:     equ 92h          ; Control register 2                       (RW)
 0093           ASD20CR3:     equ 93h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 2 Col 1
 0094           ASC21CR0:     equ 94h          ; Control register 0                       (RW)
 0095           ASC21CR1:     equ 95h          ; Control register 1                       (RW)
 0096           ASC21CR2:     equ 96h          ; Control register 2                       (RW)
 0097           ASC21CR3:     equ 97h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 2 Col 2
 0098           ASD22CR0:     equ 98h          ; Control register 0                       (RW)
 0099           ASD22CR1:     equ 99h          ; Control register 1                       (RW)
 009A           ASD22CR2:     equ 9Ah          ; Control register 2                       (RW)
 009B           ASD22CR3:     equ 9Bh          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 2 Col 3
 009C           ASC23CR0:     equ 9Ch          ; Control register 0                       (RW)
 009D           ASC23CR1:     equ 9Dh          ; Control register 1                       (RW)
 009E           ASC23CR2:     equ 9Eh          ; Control register 2                       (RW)
 009F           ASC23CR3:     equ 9Fh          ; Control register 3                       (RW)
 0000           
 0000           ;-----------------------------------------------
 0000           ;  Global General Purpose Data Registers
 0000           ;-----------------------------------------------
 006C           TMP0_DR:      equ 6Ch          ; deprecated do not use
 006D           TMP1_DR:      equ 6Dh          ; deprecated do not use
 006E           TMP2_DR:      equ 6Eh          ; deprecated do not use
 006F           TMP3_DR:      equ 6Fh          ; deprecated do not use
 0000           
 006C           TMP_DR0:      equ 6Ch          ; Temporary Data Register 0                (RW)
 006D           TMP_DR1:      equ 6Dh          ; Temporary Data Register 1                (RW)
 006E           TMP_DR2:      equ 6Eh          ; Temporary Data Register 2                (RW)
 006F           TMP_DR3:      equ 6Fh          ; Temporary Data Register 3                (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Row Digital Interconnects
 0000           ;
 0000           ;  Note: the following registers are mapped into
 0000           ;  both register bank 0 AND register bank 1.
 0000           ;------------------------------------------------
 0000           
 00B0           RDI0RI:       equ 0B0h          ; Row Digital Interconnect Row 0 Input Reg (RW)
 00B1           RDI0SYN:      equ 0B1h          ; Row Digital Interconnect Row 0 Sync Reg  (RW)
 00B2           RDI0IS:       equ 0B2h          ; Row 0 Input Select Register              (RW)
 00B3           RDI0LT0:      equ 0B3h          ; Row 0 Look Up Table Register 0           (RW)
 00B4           RDI0LT1:      equ 0B4h          ; Row 0 Look Up Table Register 1           (RW)
 00B5           RDI0RO0:      equ 0B5h          ; Row 0 Output Register 0                  (RW)
 00B6           RDI0RO1:      equ 0B6h          ; Row 0 Output Register 1                  (RW)
 0000           
 00B8           RDI1RI:       equ 0B8h          ; Row Digital Interconnect Row 1 Input Reg (RW)
 00B9           RDI1SYN:      equ 0B9h          ; Row Digital Interconnect Row 1 Sync Reg  (RW)
 00BA           RDI1IS:       equ 0BAh          ; Row 1 Input Select Register              (RW)
 00BB           RDI1LT0:      equ 0BBh          ; Row 1 Look Up Table Register 0           (RW)
 00BC           RDI1LT1:      equ 0BCh          ; Row 1 Look Up Table Register 1           (RW)
 00BD           RDI1RO0:      equ 0BDh          ; Row 1 Output Register 0                  (RW)
 00BE           RDI1RO1:      equ 0BEh          ; Row 1 Output Register 1                  (RW)
 0000           
 00C0           RDI2RI:       equ 0C0h          ; Row Digital Interconnect Row 2 Input Reg (RW)
 00C1           RDI2SYN:      equ 0C1h          ; Row Digital Interconnect Row 2 Sync Reg  (RW)
 00C2           RDI2IS:       equ 0C2h          ; Row 2 Input Select Register              (RW)
 00C3           RDI2LT0:      equ 0C3h          ; Row 2 Look Up Table Register 0           (RW)
 00C4           RDI2LT1:      equ 0C4h          ; Row 2 Look Up Table Register 1           (RW)
 00C5           RDI2RO0:      equ 0C5h          ; Row 2 Output Register 0                  (RW)
 00C6           RDI2RO1:      equ 0C6h          ; Row 2 Output Register 1                  (RW)
 0000           
 00C8           RDI3RI:       equ 0C8h          ; Row Digital Interconnect Row 3 Input Reg (RW)
 00C9           RDI3SYN:      equ 0C9h          ; Row Digital Interconnect Row 3 Sync Reg  (RW)
 00CA           RDI3IS:       equ 0CAh          ; Row 3 Input Select Register              (RW)
 00CB           RDI3LT0:      equ 0CBh          ; Row 3 Look Up Table Register 0           (RW)
 00CC           RDI3LT1:      equ 0CCh          ; Row 3 Look Up Table Register 1           (RW)
 00CD           RDI3RO0:      equ 0CDh          ; Row 3 Output Register 0                  (RW)
 00CE           RDI3RO1:      equ 0CEh          ; Row 3 Output Register 1                  (RW)
 0000           
 0000           ;-----------------------------------------------
 0000           ;  Ram Page Pointers
 0000           ;-----------------------------------------------
 00D0           CUR_PP:      equ 0D0h           ; Current   Page Pointer
 00D1           STK_PP:      equ 0D1h           ; Stack     Page Pointer
 00D3           IDX_PP:      equ 0D3h           ; Index     Page Pointer
 00D4           MVR_PP:      equ 0D4h           ; MVI Read  Page Pointer
 00D5           MVW_PP:      equ 0D5h           ; MVI Write Page Pointer
 0000           
 0000           ;------------------------------------------------
 0000           ;  I2C Configuration Registers
 0000           ;------------------------------------------------
 00D6           I2C_CFG:      equ 0D6h          ; I2C Configuration Register               (RW)
 0040           I2C_CFG_PINSEL:         equ 40h  ; MASK: Select P1[0] and P1[1] for I2C
 0020           I2C_CFG_BUSERR_IE:      equ 20h  ; MASK: Enable interrupt on Bus Error
 0010           I2C_CFG_STOP_IE:        equ 10h  ; MASK: Enable interrupt on Stop
 0000           I2C_CFG_CLK_RATE_100K:  equ 00h  ; MASK: I2C clock set at 100K
 0004           I2C_CFG_CLK_RATE_400K:  equ 04h  ; MASK: I2C clock set at 400K
 0008           I2C_CFG_CLK_RATE_50K:   equ 08h  ; MASK: I2C clock set at 50K
 000C           I2C_CFG_CLK_RATE_1M6:   equ 0Ch  ; MASK: I2C clock set at 1.6M
 000C           I2C_CFG_CLK_RATE:       equ 0Ch  ; MASK: I2C clock rate setting mask
 0002           I2C_CFG_PSELECT_MASTER: equ 02h  ; MASK: Enable I2C Master
 0001           I2C_CFG_PSELECT_SLAVE:  equ 01h  ; MASK: Enable I2C Slave
 0000           
 00D7           I2C_SCR:      equ 0D7h          ; I2C Status and Control Register          (#)
 0080           I2C_SCR_BUSERR:        equ 80h   ; MASK: I2C Bus Error detected           (RC)
 0040           I2C_SCR_LOSTARB:       equ 40h   ; MASK: I2C Arbitration lost             (RC)
 0020           I2C_SCR_STOP:          equ 20h   ; MASK: I2C Stop detected                (RC)
 0010           I2C_SCR_ACK:           equ 10h   ; MASK: ACK the last byte                (RW)
 0008           I2C_SCR_ADDR:          equ 08h   ; MASK: Address rcv'd is Slave address   (RC)
 0004           I2C_SCR_XMIT:          equ 04h   ; MASK: Set transfer to tranmit mode     (RW)
 0002           I2C_SCR_LRB:           equ 02h   ; MASK: Last recieved bit                (RC)
 0001           I2C_SCR_BYTECOMPLETE:  equ 01h   ; MASK: Transfer of byte complete        (RC)
 0000           
 00D8           I2C_DR:       equ 0D8h          ; I2C Data Register                        (RW)
 0000           
 00D9           I2C_MSCR:     equ 0D9h          ; I2C Master Status and Control Register   (#)
 0008           I2C_MSCR_BUSY:         equ 08h   ; MASK: I2C Busy (Start detected)        (R)
 0004           I2C_MSCR_MODE:         equ 04h   ; MASK: Start has been generated         (R)
 0002           I2C_MSCR_RESTART:      equ 02h   ; MASK: Generate a Restart condition     (RW)
 0001           I2C_MSCR_START:        equ 01h   ; MASK: Generate a Start condition       (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  System and Global Resource Registers
 0000           ;------------------------------------------------
 00DA           INT_CLR0:     equ 0DAh          ; Interrupt Clear Register 0               (RW)
 0000                                          ; Use INT_MSK0 bit field masks
 00DB           INT_CLR1:     equ 0DBh          ; Interrupt Clear Register 1               (RW)
 0000                                          ; Use INT_MSK1 bit field masks
 00DC           INT_CLR2:     equ 0DCh          ; Interrupt Clear Register 2               (RW)
 0000                                          ; Use INT_MSK2 bit field masks
 00DD           INT_CLR3:     equ 0DDh          ; Interrupt Clear Register 3               (RW)
 0000                                          ; Use INT_MSK3 bit field masks
 0000           
 00DE           INT_MSK3:     equ 0DEh          ; I2C and Software Mask Register           (RW)
 0080           INT_MSK3_ENSWINT:          equ 80h ; MASK: enable/disable SW interrupt
 0001           INT_MSK3_I2C:              equ 01h ; MASK: enable/disable I2C interrupt
 0000           
 00DF           INT_MSK2:     equ 0DFh          ; Digital PSoC block Mask Register         (RW)
 0080           INT_MSK2_DCB33:            equ 80h ; MASK: enable/disable DCB33 block interrupt
 0040           INT_MSK2_DCB32:            equ 40h ; MASK: enable/disable DCB32 block interrupt
 0020           INT_MSK2_DBB31:            equ 20h ; MASK: enable/disable DBB31 block interrupt
 0010           INT_MSK2_DBB30:            equ 10h ; MASK: enable/disable DBB30 block interrupt
 0008           INT_MSK2_DCB23:            equ 08h ; MASK: enable/disable DCB23 block interrupt
 0004           INT_MSK2_DCB22:            equ 04h ; MASK: enable/disable DCB22 block interrupt
 0002           INT_MSK2_DBB21:            equ 02h ; MASK: enable/disable DBB21 block interrupt
 0001           INT_MSK2_DBB20:            equ 01h ; MASK: enable/disable DBB20 block interrupt
 0000           
 00E0           INT_MSK0:     equ 0E0h          ; General Interrupt Mask Register          (RW)
 0080           INT_MSK0_VC3:              equ 80h ; MASK: enable/disable VC3 interrupt
 0040           INT_MSK0_SLEEP:            equ 40h ; MASK: enable/disable sleep interrupt
 0020           INT_MSK0_GPIO:             equ 20h ; MASK: enable/disable GPIO  interrupt
 0010           INT_MSK0_ACOLUMN_3:        equ 10h ; MASK: enable/disable Analog col 3 interrupt
 0008           INT_MSK0_ACOLUMN_2:        equ 08h ; MASK: enable/disable Analog col 2 interrupt
 0004           INT_MSK0_ACOLUMN_1:        equ 04h ; MASK: enable/disable Analog col 1 interrupt
 0002           INT_MSK0_ACOLUMN_0:        equ 02h ; MASK: enable/disable Analog col 0 interrupt
 0001           INT_MSK0_VOLTAGE_MONITOR:  equ 01h ; MASK: enable/disable Volts interrupt
 0000           
 00E1           INT_MSK1:     equ 0E1h          ; Digital PSoC block Mask Register         (RW)
 0080           INT_MSK1_DCB13:            equ 80h ; MASK: enable/disable DCB13 block interrupt
 0040           INT_MSK1_DCB12:            equ 40h ; MASK: enable/disable DCB12 block interrupt
 0020           INT_MSK1_DBB11:            equ 20h ; MASK: enable/disable DBB11 block interrupt
 0010           INT_MSK1_DBB10:            equ 10h ; MASK: enable/disable DBB10 block interrupt
 0008           INT_MSK1_DCB03:            equ 08h ; MASK: enable/disable DCB03 block interrupt
 0004           INT_MSK1_DCB02:            equ 04h ; MASK: enable/disable DCB02 block interrupt
 0002           INT_MSK1_DBB01:            equ 02h ; MASK: enable/disable DBB01 block interrupt
 0001           INT_MSK1_DBB00:            equ 01h ; MASK: enable/disable DBB00 block interrupt
 0000           
 00E2           INT_VC:       equ 0E2h          ; Interrupt vector register                (RC)
 00E3           RES_WDT:      equ 0E3h          ; Watch Dog Timer Register                 (W)
 0000           
 0000           ; DECIMATOR Registers
 00E4           DEC_DH:       equ 0E4h          ; Data Register (high byte)                (RC)
 00E5           DEC_DL:       equ 0E5h          ; Data Register ( low byte)                (RC)
 00E6           DEC_CR0:      equ 0E6h          ; Data Control Register 0                  (RW)
 00E7           DEC_CR1:      equ 0E7h          ; Data Control Register 1                  (RW)
 0000                                          ; Also see DEC_CR2 in bank 1
 0000           
 0000           ; Multiplier and MAC (Multiply/Accumulate) Unit
 0000           //   Compatibility Set: Maps onto MAC0
 00E8           MUL_X:        equ 0E8h          ; Multiplier X Register (write)            (W)
 00E9           MUL_Y:        equ 0E9h          ; Multiplier Y Register (write)            (W)
 00EA           MUL_DH:       equ 0EAh          ; Multiplier Result Data (high byte read)  (R)
 00EB           MUL_DL:       equ 0EBh          ; Multiplier Result Data ( low byte read)  (R)
 00EC           MAC_X:        equ 0ECh          ; write = MAC X register [also see ACC_DR1]
 00EC           ACC_DR1:      equ MAC_X        ; read =  MAC Accumulator, byte 1          (RW)
 00ED           MAC_Y:        equ 0EDh          ; write = MAC Y register [also see ACC_DR0]
 00ED           ACC_DR0:      equ MAC_Y        ; read =  MAC Accumulator, byte 0          (RW)
 00EE           MAC_CL0:      equ 0EEh          ; write = MAC Clear Accum [also see ACC_DR3]
 00EE           ACC_DR3:      equ MAC_CL0      ; read =  MAC Accumulator, byte 3          (RW)
 00EF           MAC_CL1:      equ 0EFh          ; write = MAC Clear Accum [also see ACC_DR2]
 00EF           ACC_DR2:      equ MAC_CL1      ; read =  MAC Accumulator, byte 2          (RW)
 0000           
 0000           // Multiply/Accumulate Unit 0
 00E8           MUL0_X:       equ 0E8h          ; Multiplier 0 X Register (write)          (W)
 00E9           MUL0_Y:       equ 0E9h          ; Multiplier 0 Y Register (write)          (W)
 00EA           MUL0_DH:      equ 0EAh          ; Multiplier 0 Result Data (high byte read)(R)
 00EB           MUL0_DL:      equ 0EBh          ; Multiplier 0 Result Data ( low byte read)(R)
 00EC           MAC0_X:       equ 0ECh          ; write = MAC 0 X register [also see ACC_DR1]
 00EC           ACC0_DR1:     equ MAC0_X       ; read =  MAC 0 Accumulator, byte 1        (RW)
 00ED           MAC0_Y:       equ 0EDh          ; write = MAC 0 Y register [also see ACC_DR0]
 00ED           ACC0_DR0:     equ MAC0_Y       ; read =  MAC 0 Accumulator, byte 0        (RW)
 00EE           MAC0_CL0:     equ 0EEh          ; write = MAC 0 Clear Accum [also see ACC_DR3]
 00EE           ACC0_DR3:     equ MAC0_CL0     ; read =  MAC 0 Accumulator, byte 3        (RW)
 00EF           MAC0_CL1:     equ 0EFh          ; write = MAC 0 Clear Accum [also see ACC_DR2]
 00EF           ACC0_DR2:     equ MAC0_CL1     ; read =  MAC 0 Accumulator, byte 2        (RW)
 0000           
 0000           // Multiply/Accumulate Unit 1
 00A8           MUL1_X:       equ 0A8h          ; Multiplier 1 X Register (write)          (W)
 00A9           MUL1_Y:       equ 0A9h          ; Multiplier 1 Y Register (write)          (W)
 00AA           MUL1_DH:      equ 0AAh          ; Multiplier 1 Result Data (high byte read)(R)
 00AB           MUL1_DL:      equ 0ABh          ; Multiplier 1 Result Data ( low byte read)(R)
 00AC           MAC1_X:       equ 0ACh          ; write = MAC 1 X register [also see ACC_DR1]
 00AC           ACC1_DR1:     equ MAC1_X       ; read =  MAC 1 Accumulator, byte 1        (RW)
 00AD           MAC1_Y:       equ 0ADh          ; write = MAC 1 Y register [also see ACC_DR0]
 00AD           ACC1_DR0:     equ MAC1_Y       ; read =  MAC 1 Accumulator, byte 0        (RW)
 00AE           MAC1_CL0:     equ 0AEh          ; write = MAC 1 Clear Accum [also see ACC_DR3]
 00AE           ACC1_DR3:     equ MAC1_CL0     ; read =  MAC 1 Accumulator, byte 3        (RW)
 00AF           MAC1_CL1:     equ 0AFh          ; write = MAC 1 Clear Accum [also see ACC_DR2]
 00AF           ACC1_DR2:     equ MAC1_CL1     ; read =  MAC 1 Accumulator, byte 2        (RW)
 0000           
 0000           ;------------------------------------------------------
 0000           ;  System Status and Control Registers
 0000           ;
 0000           ;  Note: The following registers are mapped into both
 0000           ;        register bank 0 AND register bank 1.
 0000           ;------------------------------------------------------
 00F7           CPU_F:        equ 0F7h          ; CPU Flag Register Access                 (RO)
 0000                                              ; Use FLAG_ masks defined at top of file
 0000           
 00FE           CPU_SCR1:     equ 0FEh          ; CPU Status and Control Register #1       (#)
 0080           CPU_SCR1_IRESS:         equ 80h    ; MASK: Boot Phase Re-entry bit
 0010           CPU_SCR1_SLIMO:         equ 10h    ; MASK: Slow Main Oscillator Mode
 0008           CPU_SCR1_ECO_ALWD_WR:   equ 08h    ; MASK: flag, ECO allowed has been written
 0004           CPU_SCR1_ECO_ALLOWED:   equ 04h    ; MASK: ECO allowed to be enabled
 0001           CPU_SCR1_IRAMDIS:       equ 01h    ; MASK: Disable RAM initialization on WDR
 0000           
 00FF           CPU_SCR0:     equ 0FFh          ; CPU Status and Control Register #2       (#)
 0080           CPU_SCR0_GIE_MASK:      equ 80h    ; MASK: Global Interrupt Enable shadow
 0020           CPU_SCR0_WDRS_MASK:     equ 20h    ; MASK: Watch Dog Timer Reset
 0010           CPU_SCR0_PORS_MASK:     equ 10h    ; MASK: power-on reset bit PORS
 0008           CPU_SCR0_SLEEP_MASK:    equ 08h    ; MASK: Enable Sleep
 0001           CPU_SCR0_STOP_MASK:     equ 01h    ; MASK: Halt CPU bit
 0000           
 0000           
 0000           ;;=============================================================================
 0000           ;;      Register Space, Bank 1
 0000           ;;=============================================================================
 0000           
 0000           ;------------------------------------------------
 0000           ;  Port Registers
 0000           ;  Note: Also see this address range in Bank 0.
 0000           ;------------------------------------------------
 0000           ; Port 0
 0000           PRT0DM0:      equ 00h          ; Port 0 Drive Mode 0                      (RW)
 0001           PRT0DM1:      equ 01h          ; Port 0 Drive Mode 1                      (RW)
 0002           PRT0IC0:      equ 02h          ; Port 0 Interrupt Control 0               (RW)
 0003           PRT0IC1:      equ 03h          ; Port 0 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 1
 0004           PRT1DM0:      equ 04h          ; Port 1 Drive Mode 0                      (RW)
 0005           PRT1DM1:      equ 05h          ; Port 1 Drive Mode 1                      (RW)
 0006           PRT1IC0:      equ 06h          ; Port 1 Interrupt Control 0               (RW)
 0007           PRT1IC1:      equ 07h          ; Port 1 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 2
 0008           PRT2DM0:      equ 08h          ; Port 2 Drive Mode 0                      (RW)
 0009           PRT2DM1:      equ 09h          ; Port 2 Drive Mode 1                      (RW)
 000A           PRT2IC0:      equ 0Ah          ; Port 2 Interrupt Control 0               (RW)
 000B           PRT2IC1:      equ 0Bh          ; Port 2 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 3
 000C           PRT3DM0:      equ 0Ch          ; Port 3 Drive Mode 0                      (RW)
 000D           PRT3DM1:      equ 0Dh          ; Port 3 Drive Mode 1                      (RW)
 000E           PRT3IC0:      equ 0Eh          ; Port 3 Interrupt Control 0               (RW)
 000F           PRT3IC1:      equ 0Fh          ; Port 3 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 4
 0010           PRT4DM0:      equ 10h          ; Port 4 Drive Mode 0                      (RW)
 0011           PRT4DM1:      equ 11h          ; Port 4 Drive Mode 1                      (RW)
 0012           PRT4IC0:      equ 12h          ; Port 4 Interrupt Control 0               (RW)
 0013           PRT4IC1:      equ 13h          ; Port 4 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 5
 0014           PRT5DM0:      equ 14h          ; Port 5 Drive Mode 0                      (RW)
 0015           PRT5DM1:      equ 15h          ; Port 5 Drive Mode 1                      (RW)
 0016           PRT5IC0:      equ 16h          ; Port 5 Interrupt Control 0               (RW)
 0017           PRT5IC1:      equ 17h          ; Port 5 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 6
 0018           PRT6DM0:      equ 18h          ; Port 6 Drive Mode 0                      (RW)
 0019           PRT6DM1:      equ 19h          ; Port 6 Drive Mode 1                      (RW)
 001A           PRT6IC0:      equ 1Ah          ; Port 6 Interrupt Control 0               (RW)
 001B           PRT6IC1:      equ 1Bh          ; Port 6 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 7
 001C           PRT7DM0:      equ 1Ch          ; Port 7 Drive Mode 0                      (RW)
 001D           PRT7DM1:      equ 1Dh          ; Port 7 Drive Mode 1                      (RW)
 001E           PRT7IC0:      equ 1Eh          ; Port 7 Interrupt Control 0               (RW)
 001F           PRT7IC1:      equ 1Fh          ; Port 7 Interrupt Control 1               (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Digital PSoC(tm) block Registers
 0000           ;  Note: Also see this address range in Bank 0.
 0000           ;------------------------------------------------
 0000           
 0000           ; Digital PSoC block 00, Basic Type B
 0020           DBB00FN:      equ 20h          ; Function Register                        (RW)
 0021           DBB00IN:      equ 21h          ;    Input Register                        (RW)
 0022           DBB00OU:      equ 22h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 01, Basic Type B
 0024           DBB01FN:      equ 24h          ; Function Register                        (RW)
 0025           DBB01IN:      equ 25h          ;    Input Register                        (RW)
 0026           DBB01OU:      equ 26h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 02, Communications Type B
 0028           DCB02FN:      equ 28h          ; Function Register                        (RW)
 0029           DCB02IN:      equ 29h          ;    Input Register                        (RW)
 002A           DCB02OU:      equ 2Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 03, Communications Type B
 002C           DCB03FN:      equ 2Ch          ; Function Register                        (RW)
 002D           DCB03IN:      equ 2Dh          ;    Input Register                        (RW)
 002E           DCB03OU:      equ 2Eh          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 10, Basic Type B
 0030           DBB10FN:      equ 30h          ; Function Register                        (RW)
 0031           DBB10IN:      equ 31h          ;    Input Register                        (RW)
 0032           DBB10OU:      equ 32h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 11, Basic Type B
 0034           DBB11FN:      equ 34h          ; Function Register                        (RW)
 0035           DBB11IN:      equ 35h          ;    Input Register                        (RW)
 0036           DBB11OU:      equ 36h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 12, Communications Type B
 0038           DCB12FN:      equ 38h          ; Function Register                        (RW)
 0039           DCB12IN:      equ 39h          ;    Input Register                        (RW)
 003A           DCB12OU:      equ 3Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 13, Communications Type B
 003C           DCB13FN:      equ 3Ch          ; Function Register                        (RW)
 003D           DCB13IN:      equ 3Dh          ;    Input Register                        (RW)
 003E           DCB13OU:      equ 3Eh          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 20, Basic Type B
 0040           DBB20FN:      equ 40h          ; Function Register                        (RW)
 0041           DBB20IN:      equ 41h          ;    Input Register                        (RW)
 0042           DBB20OU:      equ 42h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 21, Basic Type B
 0044           DBB21FN:      equ 44h          ; Function Register                        (RW)
 0045           DBB21IN:      equ 45h          ;    Input Register                        (RW)
 0046           DBB21OU:      equ 46h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 22, Communications Type B
 0048           DCB22FN:      equ 48h          ; Function Register                        (RW)
 0049           DCB22IN:      equ 49h          ;    Input Register                        (RW)
 004A           DCB22OU:      equ 4Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 23, Communications Type B
 004C           DCB23FN:      equ 4Ch          ; Function Register                        (RW)
 004D           DCB23IN:      equ 4Dh          ;    Input Register                        (RW)
 004E           DCB23OU:      equ 4Eh          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 30, Basic Type B
 0050           DBB30FN:      equ 50h          ; Function Register                        (RW)
 0051           DBB30IN:      equ 51h          ;    Input Register                        (RW)
 0052           DBB30OU:      equ 52h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 31, Basic Type B
 0054           DBB31FN:      equ 54h          ; Function Register                        (RW)
 0055           DBB31IN:      equ 55h          ;    Input Register                        (RW)
 0056           DBB31OU:      equ 56h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 32, Communications Type B
 0058           DCB32FN:      equ 58h          ; Function Register                        (RW)
 0059           DCB32IN:      equ 59h          ;    Input Register                        (RW)
 005A           DCB32OU:      equ 5Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 33, Communications Type B
 005C           DCB33FN:      equ 5Ch          ; Function Register                        (RW)
 005D           DCB33IN:      equ 5Dh          ;    Input Register                        (RW)
 005E           DCB33OU:      equ 5Eh          ;   Output Register                        (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  System and Global Resource Registers
 0000           ;  Note: Also see this address range in Bank 0.
 0000           ;------------------------------------------------
 0000           
 0060           CLK_CR0:      equ 60h          ; Analog Column Clock Select Register 0    (RW)
 00C0           CLK_CR0_ACOLUMN_3:    equ 0C0h    ; MASK: Specify clock for analog cloumn
 0030           CLK_CR0_ACOLUMN_2:    equ 30h    ; MASK: Specify clock for analog cloumn
 000C           CLK_CR0_ACOLUMN_1:    equ 0Ch    ; MASK: Specify clock for analog cloumn
 0003           CLK_CR0_ACOLUMN_0:    equ 03h    ; MASK: Specify clock for analog cloumn
 0000           
 0061           CLK_CR1:      equ 61h          ; Analog Clock Source Select Register 1    (RW)
 0040           CLK_CR1_SHDIS:        equ 40h    ; MASK: Sample and Hold Disable (all Columns)
 0038           CLK_CR1_ACLK1:        equ 38h    ; MASK: Digital PSoC block for analog source
 0007           CLK_CR1_ACLK2:        equ 07h    ; MASK: Digital PSoC block for analog source
 0000           
 0062           ABF_CR0:      equ 62h          ; Analog Output Buffer Control Register 0  (RW)
 0080           ABF_CR0_ACOL1MUX:     equ 80h    ; MASK: Analog Column 1 Mux control
 0040           ABF_CR0_ACOL2MUX:     equ 40h    ; MASK: Analog Column 2 Mux control
 0020           ABF_CR0_ABUF1EN:      equ 20h    ; MASK: Enable ACol 1 analog buffer (P0[5])
 0010           ABF_CR0_ABUF2EN:      equ 10h    ; MASK: Enable ACol 2 analog buffer (P0[4])
 0008           ABF_CR0_ABUF0EN:      equ 08h    ; MASK: Enable ACol 0 analog buffer (P0[3])
 0004           ABF_CR0_ABUF3EN:      equ 04h    ; MASK: Enable ACol 3 analog buffer (P0[2])
 0002           ABF_CR0_BYPASS:       equ 02h    ; MASK: Bypass the analog buffers
 0001           ABF_CR0_PWR:          equ 01h    ; MASK: High power mode on all analog buffers
 0000           
 0063           AMD_CR0:      equ 63h          ; Analog Modulator Control Register 0      (RW)
 0070           AMD_CR0_AMOD2:        equ 70h    ; MASK: Modulation source for analog column 2
 0007           AMD_CR0_AMOD0:        equ 07h    ; MASK: Modulation source for analog column 1
 0000           
 0066           AMD_CR1:      equ 66h          ; Analog Modulator Control Register 1      (RW)
 0070           AMD_CR1_AMOD3:        equ 70h    ; MASK: Modulation ctrl for analog column 3
 0007           AMD_CR1_AMOD1:        equ 07h    ; MASK: Modulation ctrl for analog column 1
 0000           
 0067           ALT_CR0:      equ 67h          ; Analog Look Up Table (LUT) Register 0    (RW)
 00F0           ALT_CR0_LUT1:         equ 0F0h    ; MASK: Look up table 1 selection
 000F           ALT_CR0_LUT0:         equ 0Fh    ; MASK: Look up table 0 selection
 0000           
 0068           ALT_CR1:      equ 68h          ; Analog Look Up Table (LUT) Register 1    (RW)
 00F0           ALT_CR1_LUT3:         equ 0F0h    ; MASK: Look up table 3 selection
 000F           ALT_CR1_LUT2:         equ 0Fh    ; MASK: Look up table 2 selection
 0000           
 0069           CLK_CR2:      equ 69h          ; Analog Clock Source Control Register 2   (RW)
 0008           CLK_CR2_ACLK1R:       equ 08h    ; MASK: Analog Clock 1 selection range
 0001           CLK_CR2_ACLK0R:       equ 01h    ; MASK: Analog Clock 0 selection range
 0000           
 0000           ;------------------------------------------------
 0000           ;  Global Digital Interconnects
 0000           ;------------------------------------------------
 0000           
 00D0           GDI_O_IN:     equ 0D0h          ; Global Dig Interconnect Odd Inputs Reg   (RW)
 00D1           GDI_E_IN:     equ 0D1h          ; Global Dig Interconnect Even Inputs Reg  (RW)
 00D2           GDI_O_OU:     equ 0D2h          ; Global Dig Interconnect Odd Outputs Reg  (RW)
 00D3           GDI_E_OU:     equ 0D3h          ; Global Dig Interconnect Even Outputs Reg (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Clock and System Control Registers
 0000           ;------------------------------------------------
 0000           
 00DD           OSC_GO_EN:    equ 0DDh          ; Oscillator to Global Outputs Enable Register (RW)
 0080           OSC_GOEN_SLPINT:      equ 80h	 ; Enable Sleep Timer onto GOE[7]
 0040           OSC_GOEN_VC3:         equ 40h    ; Enable VC3 onto GOE[6]
 0020           OSC_GOEN_VC2:         equ 20h    ; Enable VC2 onto GOE[5]
 0010           OSC_GOEN_VC1:         equ 10h    ; Enable VC1 onto GOE[4]
 0008           OSC_GOEN_SYSCLKX2:    equ 08h    ; Enable 2X SysClk onto GOE[3]
 0004           OSC_GOEN_SYSCLK:      equ 04h    ; Enable 1X SysClk onto GOE[2]
 0002           OSC_GOEN_CLK24M:      equ 02h    ; Enable 24 MHz clock onto GOE[1]
 0001           OSC_GOEN_CLK32K:      equ 01h    ; Enable 32 kHz clock onto GOE[0]
 0000           
 00DE           OSC_CR4:      equ 0DEh          ; Oscillator Control Register 4            (RW)
 0003           OSC_CR4_VC3:          equ 03h    ; MASK: System VC3 Clock source
 0000           
 00DF           OSC_CR3:      equ 0DFh          ; Oscillator Control Register 3            (RW)
 0000           
 00E0           OSC_CR0:      equ 0E0h          ; System Oscillator Control Register 0     (RW)
 0080           OSC_CR0_32K_SELECT:   equ 80h    ; MASK: Enable/Disable External XTAL Osc
 0040           OSC_CR0_PLL_MODE:     equ 40h    ; MASK: Enable/Disable PLL
 0020           OSC_CR0_NO_BUZZ:      equ 20h    ; MASK: Bandgap always powered/BUZZ bandgap
 0018           OSC_CR0_SLEEP:        equ 18h    ; MASK: Set Sleep timer freq/period
 0000           OSC_CR0_SLEEP_512Hz:  equ 00h    ;     Set sleep bits for 1.95ms period
 0008           OSC_CR0_SLEEP_64Hz:   equ 08h    ;     Set sleep bits for 15.6ms period
 0010           OSC_CR0_SLEEP_8Hz:    equ 10h    ;     Set sleep bits for 125ms period
 0018           OSC_CR0_SLEEP_1Hz:    equ 18h    ;     Set sleep bits for 1 sec period
 0007           OSC_CR0_CPU:          equ 07h    ; MASK: Set CPU Frequency
 0000           OSC_CR0_CPU_3MHz:     equ 00h    ;     set CPU Freq bits for 3MHz Operation
 0001           OSC_CR0_CPU_6MHz:     equ 01h    ;     set CPU Freq bits for 6MHz Operation
 0002           OSC_CR0_CPU_12MHz:    equ 02h    ;     set CPU Freq bits for 12MHz Operation
 0003           OSC_CR0_CPU_24MHz:    equ 03h    ;     set CPU Freq bits for 24MHz Operation
 0004           OSC_CR0_CPU_1d5MHz:   equ 04h    ;     set CPU Freq bits for 1.5MHz Operation
 0005           OSC_CR0_CPU_750kHz:   equ 05h    ;     set CPU Freq bits for 750kHz Operation
 0006           OSC_CR0_CPU_187d5kHz: equ 06h    ;     set CPU Freq bits for 187.5kHz Operation
 0007           OSC_CR0_CPU_93d7kHz:  equ 07h    ;     set CPU Freq bits for 93.7kHz Operation
 0000           
 00E1           OSC_CR1:      equ 0E1h          ; System VC1/VC2 Divider Control Register  (RW)
 00F0           OSC_CR1_VC1:          equ 0F0h    ; MASK: System VC1 24MHz/External Clk divider
 000F           OSC_CR1_VC2:          equ 0Fh    ; MASK: System VC2 24MHz/External Clk divider
 0000           
 00E2           OSC_CR2:      equ 0E2h          ; Oscillator Control Register 2            (RW)
 0004           OSC_CR2_EXTCLKEN:     equ 04h    ; MASK: Enable/Disable External Clock
 0001           OSC_CR2_SYSCLKX2DIS:  equ 01h    ; MASK: Enable/Disable 48MHz clock source
 0000           
 00E3           VLT_CR:       equ 0E3h          ; Voltage Monitor Control Register         (RW)
 0080           VLT_CR_SMP:           equ 80h    ; MASK: Enable Switch Mode Pump
 0030           VLT_CR_PORLEV:        equ 30h    ; MASK: Mask for Power on Reset level control
 0000           VLT_CR_POR_LOW:       equ 00h    ;   Lowest  Precision Power-on Reset trip point
 0010           VLT_CR_POR_MID:       equ 10h    ;   Middle  Precision Power-on Reset trip point
 0020           VLT_CR_POR_HIGH:      equ 20h    ;   Highest Precision Power-on Reset trip point
 0008           VLT_CR_LVDTBEN:       equ 08h    ; MASK: Enable the CPU Throttle Back on LVD
 0007           VLT_CR_VM:            equ 07h    ; MASK: Mask for Voltage Monitor level setting
 0000           VLT_CR_3V0_POR:       equ 00h    ; -- deprecated symbols --
 0010           VLT_CR_4V5_POR:       equ 10h    ;    deprecated
 0020           VLT_CR_4V75_POR:      equ 20h    ;    deprecated
 0030           VLT_CR_DISABLE:       equ 30h    ;    deprecated
 0000           
 00E4           VLT_CMP:      equ 0E4h          ; Voltage Monitor Comparators Register     (R)
 0004           VLT_CMP_PUMP:         equ 04h    ; MASK: Vcc below SMP trip level
 0002           VLT_CMP_LVD:          equ 02h    ; MASK: Vcc below LVD trip level
 0001           VLT_CMP_PPOR:         equ 01h    ; MASK: Vcc below PPOR trip level
 0000           
 00E7           DEC_CR2:      equ 0E7h          ; Decimator Control Register 2             (RW)
 00E8           IMO_TR:       equ 0E8h          ; Internal Main Oscillator Trim Register   (W)
 00E9           ILO_TR:       equ 0E9h          ; Internal Low-speed Oscillator Trim       (W)
 00EA           BDG_TR:       equ 0EAh          ; Band Gap Trim Register                   (W)
 00EB           ECO_TR:       equ 0EBh          ; External Oscillator Trim Register        (W)
 0000           
 0000           ;;=============================================================================
 0000           ;;      M8C System Macros
 0000           ;;  These macros should be used when their functions are needed.
 0000           ;;=============================================================================
 0000           
 0000           ;----------------------------------------------------
 0000           ;  Swapping Register Banks
 0000           ;----------------------------------------------------
 0000               macro M8C_SetBank0
 0000               and   F, ~FLAG_XIO_MASK
 0000               macro M8C_SetBank1
 0000               or    F, FLAG_XIO_MASK
 0000               macro M8C_EnableGInt
 0000               or    F, FLAG_GLOBAL_IE
 0000               macro M8C_DisableGInt
 0000               and   F, ~FLAG_GLOBAL_IE
 0000               macro M8C_DisableIntMask
 0000               and   reg[@0], ~@1              ; disable specified interrupt enable bit
 0000               macro M8C_EnableIntMask
 0000               or    reg[@0], @1               ; enable specified interrupt enable bit
 0000               macro M8C_ClearIntFlag
 0000               mov   reg[@0], ~@1              ; clear specified interrupt enable bit
 0000               macro M8C_EnableWatchDog
 0000               and   reg[CPU_SCR0], ~CPU_SCR0_PORS_MASK
 0000               macro M8C_ClearWDT
 0000               mov   reg[RES_WDT], 00h
 0000               macro M8C_ClearWDTAndSleep
 0000               mov   reg[RES_WDT], 38h
 0000               macro M8C_Stall
 0000               or    reg[ASY_CR], ASY_CR_SYNCEN
 0000               macro M8C_Unstall
 0000               and   reg[ASY_CR], ~ASY_CR_SYNCEN
 0000               macro M8C_Sleep
 0000               or    reg[CPU_SCR0], CPU_SCR0_SLEEP_MASK
 0000               ; The next instruction to be executed depends on the state of the
 0000               ; various interrupt enable bits. If some interrupts are enabled
 0000               ; and the global interrupts are disabled, the next instruction will
 0000               ; be the one that follows the invocation of this macro. If global
 0000               ; interrupts are also enabled then the next instruction will be
 0000               ; from the interrupt vector table. If no interrupts are enabled
 0000               ; then the CPU sleeps forever.
 0000               macro M8C_Stop
 0000               ; In general, you probably don't want to do this, but here's how:
 0000               or    reg[CPU_SCR0], CPU_SCR0_STOP_MASK
 0000               ; Next instruction to be executed is located in the interrupt
 0000               ; vector table entry for Power-On Reset.
 0000               macro M8C_Reset
 0000               ; Restore CPU to the power-on reset state.
 0000               mov A, 0
 0000               SSC
 0000               ; Next non-supervisor instruction will be at interrupt vector 0.
 0000               macro Suspend_CodeCompressor
 0000               or   F, 0
 0000               macro Resume_CodeCompressor
 0000               add  SP, 0
 0007           SYSTEM_STACK_PAGE: equ 7   
 0000           SYSTEM_STACK_BASE_ADDR: equ 0h   
 0001           SYSTEM_LARGE_MEMORY_MODEL: equ 1   
 0000           SYSTEM_SMALL_MEMORY_MODEL: equ 0   
 0001           IMAGECRAFT: equ 1   
 0002           HITECH: equ 2   
 0001           TOOLCHAIN: equ IMAGECRAFT   
 0001           SYSTEM_TOOLS: equ 1   
 0001           SYSTEM_IDXPG_TRACKS_STK_PP: equ 1   
 0000           SYSTEM_IDXPG_TRACKS_IDX_PP: equ 0   
 0000           SYSTEM_MULTIPAGE_STACK: equ 0 
 0000           
 0000           
 0000           ;  ******* Function Class Definitions *******
 0000           ;
 0000           ;  These definitions are used to describe RAM access patterns. They provide
 0000           ;  documentation and they control prologue and epilogue macros that perform
 0000           ;  the necessary housekeeping functions for large memory model devices like
 0000           ;  the CY8C29000.
 0000           
 0001           RAM_USE_CLASS_1:               equ 1   ; PUSH, POP & I/O access
 0002           RAM_USE_CLASS_2:               equ 2   ; Indexed address mode on stack page
 0004           RAM_USE_CLASS_3:               equ 4   ; Indexed address mode to any page
 0008           RAM_USE_CLASS_4:               equ 8   ; Direct/Indirect address mode access
 0000           
 0000           ; ******* Hi Tech Specific *******
 0000           ; Turn on the expansion of all macros by default
                IF (TOOLCHAIN & HITECH)
                OPT EXPAND
                ENDIF
                ;  ******* Page Pointer Manipulation Macros *******
                ;
                ;  Most of the following macros are conditionally compiled so they only
                ;  produce code if the large memory model is selected.
                
                   ;-----------------------------------------------
                   ;  Set Stack Page Macro
                   ;-----------------------------------------------
                   ;
                   ;  DESC: Modify STK_PP in the large or small memory Models.
                   ;
                   ; INPUT: Constant (e.g., SYSTEM_STACK_PAGE) that specifies the RAM page on
                   ;        which stack operations like PUSH and POP store and retrieve their
                   ;        data
                   ;
                   ;  COST: 8 instruction cycles (in LMM only)
                
 0000              macro RAM_SETPAGE_STK( PG_NUMBER )
 0000              IF ( SYSTEM_LARGE_MEMORY_MODEL )
 0000                 mov reg[STK_PP], @PG_NUMBER
 0000              ENDIF
 0000              macro RAM_SETPAGE_CUR( PG_NUMBER )
 0000              IF ( SYSTEM_LARGE_MEMORY_MODEL )
 0000                 mov reg[CUR_PP], @PG_NUMBER
 0000              ENDIF
 0000              macro RAM_SETPAGE_IDX( PG_NUMBER )
 0000              IF ( SYSTEM_LARGE_MEMORY_MODEL )
 0000                 mov reg[IDX_PP], @PG_NUMBER
 0000              ENDIF
 0000              macro RAM_SETPAGE_MVR( PG_NUMBER )
 0000              IF ( SYSTEM_LARGE_MEMORY_MODEL )
 0000                 mov reg[MVR_PP], @PG_NUMBER
 0000              ENDIF
 0000              macro RAM_SETPAGE_MVW( PG_NUMBER )
 0000              IF ( SYSTEM_LARGE_MEMORY_MODEL )
 0000                 mov reg[MVW_PP], @PG_NUMBER
 0000              ENDIF
 0000              macro RAM_SETPAGE_IDX2STK
 0000              IF ( SYSTEM_LARGE_MEMORY_MODEL )
 0000                 IF ( SYSTEM_MULTIPAGE_STACK )
 0000                    mov   A, reg[STK_PP]
 0000                    mov   reg[IDX_PP], A
 0000                 ELSE
 0000                    RAM_SETPAGE_IDX SYSTEM_STACK_PAGE
 0000                 ENDIF
 0000              ENDIF
 0000              macro RAM_CHANGE_PAGE_MODE( MODE )
 0000              IF ( SYSTEM_LARGE_MEMORY_MODEL )
 0000                 and   F, ~FLAG_PGMODE_MASK        ; NOTE: transition thru 00b state
 0000                 or    F,  FLAG_PGMODE_MASK & @MODE
 0000              ENDIF
 0000              macro RAM_SET_NATIVE_PAGING
 0000              IF ( SYSTEM_LARGE_MEMORY_MODEL )
 0000              IF ( SYSTEM_IDXPG_TRACKS_STK_PP )
 0000                 or    F,  FLAG_PGMODE_11b            ; LMM w/ IndexPage<==>StackPage
 0000              ENDIF ;  PGMODE LOCKED
 0000              IF ( SYSTEM_IDXPG_TRACKS_IDX_PP )
 0000                 or    F,  FLAG_PGMODE_10b            ; LMM with independent IndexPage
 0000              ENDIF ; PGMODE FREE
 0000              ENDIF ; SYSTEM_LARGE_MEMORY_MODEL
 0000              macro RAM_RESTORE_NATIVE_PAGING
 0000              IF ( SYSTEM_LARGE_MEMORY_MODEL )
 0000              IF ( SYSTEM_IDXPG_TRACKS_STK_PP )
 0000                 RAM_CHANGE_PAGE_MODE FLAG_PGMODE_11b ; LMM w/ IndexPage<==>StackPage
 0000              ENDIF ;  PGMODE LOCKED
 0000              IF ( SYSTEM_IDXPG_TRACKS_IDX_PP )
 0000                 RAM_CHANGE_PAGE_MODE FLAG_PGMODE_10b ; LMM with independent IndexPage
 0000              ENDIF ; PGMODE FREE
 0000              ENDIF ; SYSTEM_LARGE_MEMORY_MODEL
 0000              macro RAM_X_POINTS_TO_STACKPAGE
 0000              IF ( SYSTEM_LARGE_MEMORY_MODEL )
 0000                 or   F, FLAG_PGMODE_01b
 0000              ENDIF ;  SYSTEM_LARGE_MEMORY_MODEL
 0000              macro RAM_X_POINTS_TO_INDEXPAGE
 0000              IF ( SYSTEM_LARGE_MEMORY_MODEL )
 0000                 and  F, ~FLAG_PGMODE_01b
 0000              ENDIF ;  SYSTEM_LARGE_MEMORY_MODEL
 0000              macro RAM_PROLOGUE( ACTUAL_CLASS )
 0000           
 0000              IF ( @ACTUAL_CLASS & RAM_USE_CLASS_1 )
 0000              ; Nothing to do
 0000              ENDIF ; RAM_USE_CLASS_1
 0000           
 0000              IF ( @ACTUAL_CLASS & RAM_USE_CLASS_2 )
 0000                 IF ( SYSTEM_IDXPG_TRACKS_IDX_PP )
 0000                    RAM_X_POINTS_TO_STACKPAGE         ; exit native paging mode!
 0000                 ENDIF
 0000              ENDIF ; RAM_USE_CLASS_2
 0000           
 0000              IF ( @ACTUAL_CLASS & RAM_USE_CLASS_3 )
 0000                 IF ( SYSTEM_IDXPG_TRACKS_STK_PP )
 0000                    RAM_X_POINTS_TO_INDEXPAGE         ; exit native paging mode!
 0000                 ENDIF
 0000              ENDIF ; RAM_USE_CLASS_3
 0000           
 0000              IF ( @ACTUAL_CLASS & RAM_USE_CLASS_4 )
 0000              ; Nothing to do
 0000              ENDIF ; RAM_USE_CLASS_4
 0000           
 0000              macro RAM_EPILOGUE( ACTUAL_CLASS )
 0000           
 0000              IF ( @ACTUAL_CLASS & RAM_USE_CLASS_1 )
 0000              ; Nothing to do
 0000              ENDIF ; RAM_USE_CLASS_1
 0000           
 0000              IF ( @ACTUAL_CLASS & RAM_USE_CLASS_2 )
 0000                 RAM_RESTORE_NATIVE_PAGING
 0000              ENDIF ; RAM_USE_CLASS_2
 0000           
 0000              IF ( @ACTUAL_CLASS & RAM_USE_CLASS_3 )
 0000                 RAM_RESTORE_NATIVE_PAGING
 0000              ENDIF ; RAM_USE_CLASS_3
 0000           
 0000              IF ( @ACTUAL_CLASS & RAM_USE_CLASS_4 )
 0000              ; Nothing to do
 0000              ENDIF ; RAM_USE_CLASS_4
 0000           
 0000              macro REG_PRESERVE( IOReg )
 0000              mov   A, reg[ @IOReg ]
 0000              push  A
 0000              macro REG_RESTORE( IOReg )
 0000              pop   A
 0000              mov   reg[ @IOReg ], A
 0000              macro ISR_PRESERVE_PAGE_POINTERS
 0000              IF ( SYSTEM_LARGE_MEMORY_MODEL )
 0000                 REG_PRESERVE CUR_PP
 0000                 REG_PRESERVE IDX_PP
 0000                 REG_PRESERVE MVR_PP
 0000                 REG_PRESERVE MVW_PP
 0000              ENDIF
 0000              macro ISR_RESTORE_PAGE_POINTERS
 0000              IF ( SYSTEM_LARGE_MEMORY_MODEL )
 0000                 REG_RESTORE MVW_PP
 0000                 REG_RESTORE MVR_PP
 0000                 REG_RESTORE IDX_PP
 0000                 REG_RESTORE CUR_PP
 0000              ENDIF
 0000           macro PRESERVE_CPU_CONTEXT
 0000           IF ( TOOLCHAIN & IMAGECRAFT )
 0000             PUSH A
 0000             IF ( SYSTEM_LARGE_MEMORY_MODEL )
 0000               ISR_PRESERVE_PAGE_POINTERS
 0000               RAM_RESTORE_NATIVE_PAGING
 0000               MOV reg[CUR_PP], >__r0 ;Set CUR_PP to same page as virtual registers
 0000             ENDIF
 0000             MOV A, [__r0]
 0000             PUSH A
 0000             MOV A, [__r1]
 0000             PUSH A
 0000             MOV A, [__r2]
 0000             PUSH A
 0000             MOV A, [__r3]
 0000             PUSH A
 0000             MOV A, [__r4]
 0000             PUSH A
 0000             MOV A, [__r5]
 0000             PUSH A
 0000             MOV A, [__r6]
 0000             PUSH A
 0000             MOV A, [__r7]
 0000             PUSH A
 0000             MOV A, [__r8]
 0000             PUSH A
 0000             MOV A, [__r9]
 0000             PUSH A
 0000             MOV A, [__r10]
 0000             PUSH A
 0000             MOV A, [__r11]
 0000             PUSH A
 0000             MOV A, [__rX]
 0000             PUSH A
 0000             MOV A, [__rY]
 0000             PUSH A
 0000             MOV A, [__rZ]
 0000             PUSH A
 0000             IF ( SYSTEM_LARGE_MEMORY_MODEL )
 0000               MOV REG[CUR_PP], 0
 0000             ENDIF
 0000           ENDIF
 0000           macro RESTORE_CPU_CONTEXT
 0000           IF ( TOOLCHAIN & IMAGECRAFT )
 0000             IF ( SYSTEM_LARGE_MEMORY_MODEL )
 0000               RAM_RESTORE_NATIVE_PAGING
 0000               MOV reg[CUR_PP], >__r0 ;Set CUR_PP to same page as virtual registers
 0000             ENDIF
 0000             POP A
 0000             MOV [__rZ], A
 0000             POP A
 0000             MOV [__rY], A
 0000             POP A
 0000             MOV [__rX], A
 0000             POP A
 0000             MOV [__r11], A
 0000             POP A
 0000             MOV [__r10], A
 0000             POP A
 0000             MOV [__r9], A
 0000             POP A
 0000             MOV [__r8], A
 0000             POP A
 0000             MOV [__r7], A
 0000             POP A
 0000             MOV [__r6], A
 0000             POP A
 0000             MOV [__r5], A
 0000             POP A
 0000             MOV [__r4], A
 0000             POP A
 0000             MOV [__r3], A
 0000             POP A
 0000             MOV [__r2], A
 0000             POP A
 0000             MOV [__r1], A
 0000             POP A
 0000             MOV [__r0], A
 0000             IF ( SYSTEM_LARGE_MEMORY_MODEL )
 0000               ISR_RESTORE_PAGE_POINTERS
 0000               AND F, FLAG_PGMODE_0
 0000             ENDIF
 0000             POP A
 0000           ENDIF
 0008           Port_2_7_Data_ADDR:	equ	8h
 0108           Port_2_7_DriveMode_0_ADDR:	equ	108h
 0109           Port_2_7_DriveMode_1_ADDR:	equ	109h
 000B           Port_2_7_DriveMode_2_ADDR:	equ	bh
 000A           Port_2_7_GlobalSelect_ADDR:	equ	ah
 010A           Port_2_7_IntCtrl_0_ADDR:	equ	10ah
 010B           Port_2_7_IntCtrl_1_ADDR:	equ	10bh
 0009           Port_2_7_IntEn_ADDR:	equ	9h
 0080           Port_2_7_MASK:	equ	80h
 0000           ; Port_2_7_Data access macros
 0000           ;   GetPort_2_7_Data macro, return in a
 0000           macro GetPort_2_7_Data
 0000                   mov             a,[Port_2_Data_SHADE]
 0000                   and             a, 80h
 0000           macro SetPort_2_7_Data
 0000                   or              [Port_2_Data_SHADE], 80h
 0000                   mov             a, [Port_2_Data_SHADE]
 0000                   mov             reg[Port_2_7_Data_ADDR], a
 0000           macro ClearPort_2_7_Data
 0000                   and             [Port_2_Data_SHADE], ~80h
 0000                   mov             a, [Port_2_Data_SHADE]
 0000                   mov             reg[Port_2_7_Data_ADDR], a
 0000           macro GetPort_2_7_DriveMode_0
 0000                   mov             a,[Port_2_DriveMode_0_SHADE]
 0000                   and             a, 80h
 0000           macro SetPort_2_7_DriveMode_0
 0000                   or              [Port_2_DriveMode_0_SHADE], 80h
 0000                   mov             a, [Port_2_DriveMode_0_SHADE]
 0000                   mov             reg[Port_2_7_Data_ADDR], a
 0000           macro ClearPort_2_7_DriveMode_0
 0000                   and             [Port_2_DriveMode_0_SHADE], ~80h
 0000                   mov             a, [Port_2_DriveMode_0_SHADE]
 0000                   mov             reg[Port_2_7_Data_ADDR], a
 0000           macro GetPort_2_7_DriveMode_1
 0000                   mov             a,[Port_2_DriveMode_1_SHADE]
 0000                   and             a, 80h
 0000           macro SetPort_2_7_DriveMode_1
 0000                   or              [Port_2_DriveMode_1_SHADE], 80h
 0000                   mov             a, [Port_2_DriveMode_1_SHADE]
 0000                   mov             reg[Port_2_7_Data_ADDR], a
 0000           macro ClearPort_2_7_DriveMode_1
 0000                   and             [Port_2_DriveMode_1_SHADE], ~80h
 0000                   mov             a, [Port_2_DriveMode_1_SHADE]
 0000                   mov             reg[Port_2_7_Data_ADDR], a
 0000           AnalogColumn_InputMUX_3_Data_ADDR:	equ	0h
 0100           AnalogColumn_InputMUX_3_DriveMode_0_ADDR:	equ	100h
 0101           AnalogColumn_InputMUX_3_DriveMode_1_ADDR:	equ	101h
 0003           AnalogColumn_InputMUX_3_DriveMode_2_ADDR:	equ	3h
 0002           AnalogColumn_InputMUX_3_GlobalSelect_ADDR:	equ	2h
 0102           AnalogColumn_InputMUX_3_IntCtrl_0_ADDR:	equ	102h
 0103           AnalogColumn_InputMUX_3_IntCtrl_1_ADDR:	equ	103h
 0001           AnalogColumn_InputMUX_3_IntEn_ADDR:	equ	1h
 0001           AnalogColumn_InputMUX_3_MASK:	equ	1h
 0000           ; AnalogColumn_InputMUX_0 address and mask equates
 0000           AnalogColumn_InputMUX_0_Data_ADDR:	equ	0h
 0100           AnalogColumn_InputMUX_0_DriveMode_0_ADDR:	equ	100h
 0101           AnalogColumn_InputMUX_0_DriveMode_1_ADDR:	equ	101h
 0003           AnalogColumn_InputMUX_0_DriveMode_2_ADDR:	equ	3h
 0002           AnalogColumn_InputMUX_0_GlobalSelect_ADDR:	equ	2h
 0102           AnalogColumn_InputMUX_0_IntCtrl_0_ADDR:	equ	102h
 0103           AnalogColumn_InputMUX_0_IntCtrl_1_ADDR:	equ	103h
 0001           AnalogColumn_InputMUX_0_IntEn_ADDR:	equ	1h
 0002           AnalogColumn_InputMUX_0_MASK:	equ	2h
 0000           ; AnalogOutBuf_3 address and mask equates
 0000           AnalogOutBuf_3_Data_ADDR:	equ	0h
 0100           AnalogOutBuf_3_DriveMode_0_ADDR:	equ	100h
 0101           AnalogOutBuf_3_DriveMode_1_ADDR:	equ	101h
 0003           AnalogOutBuf_3_DriveMode_2_ADDR:	equ	3h
 0002           AnalogOutBuf_3_GlobalSelect_ADDR:	equ	2h
 0102           AnalogOutBuf_3_IntCtrl_0_ADDR:	equ	102h
 0103           AnalogOutBuf_3_IntCtrl_1_ADDR:	equ	103h
 0001           AnalogOutBuf_3_IntEn_ADDR:	equ	1h
 0004           AnalogOutBuf_3_MASK:	equ	4h
 0000           ; AnalogOutBuf_0 address and mask equates
 0000           AnalogOutBuf_0_Data_ADDR:	equ	0h
 0100           AnalogOutBuf_0_DriveMode_0_ADDR:	equ	100h
 0101           AnalogOutBuf_0_DriveMode_1_ADDR:	equ	101h
 0003           AnalogOutBuf_0_DriveMode_2_ADDR:	equ	3h
 0002           AnalogOutBuf_0_GlobalSelect_ADDR:	equ	2h
 0102           AnalogOutBuf_0_IntCtrl_0_ADDR:	equ	102h
 0103           AnalogOutBuf_0_IntCtrl_1_ADDR:	equ	103h
 0001           AnalogOutBuf_0_IntEn_ADDR:	equ	1h
 0008           AnalogOutBuf_0_MASK:	equ	8h
 0000           ; AnalogOutBuf_2 address and mask equates
 0000           AnalogOutBuf_2_Data_ADDR:	equ	0h
 0100           AnalogOutBuf_2_DriveMode_0_ADDR:	equ	100h
 0101           AnalogOutBuf_2_DriveMode_1_ADDR:	equ	101h
 0003           AnalogOutBuf_2_DriveMode_2_ADDR:	equ	3h
 0002           AnalogOutBuf_2_GlobalSelect_ADDR:	equ	2h
 0102           AnalogOutBuf_2_IntCtrl_0_ADDR:	equ	102h
 0103           AnalogOutBuf_2_IntCtrl_1_ADDR:	equ	103h
 0001           AnalogOutBuf_2_IntEn_ADDR:	equ	1h
 0010           AnalogOutBuf_2_MASK:	equ	10h
 0000           ; AnalogOutBuf_1 address and mask equates
 0000           AnalogOutBuf_1_Data_ADDR:	equ	0h
 0100           AnalogOutBuf_1_DriveMode_0_ADDR:	equ	100h
 0101           AnalogOutBuf_1_DriveMode_1_ADDR:	equ	101h
 0003           AnalogOutBuf_1_DriveMode_2_ADDR:	equ	3h
 0002           AnalogOutBuf_1_GlobalSelect_ADDR:	equ	2h
 0102           AnalogOutBuf_1_IntCtrl_0_ADDR:	equ	102h
 0103           AnalogOutBuf_1_IntCtrl_1_ADDR:	equ	103h
 0001           AnalogOutBuf_1_IntEn_ADDR:	equ	1h
 0020           AnalogOutBuf_1_MASK:	equ	20h
 0000           ; LCDD4 address and mask equates
 0008           LCDD4_Data_ADDR:	equ	8h
 0108           LCDD4_DriveMode_0_ADDR:	equ	108h
 0109           LCDD4_DriveMode_1_ADDR:	equ	109h
 000B           LCDD4_DriveMode_2_ADDR:	equ	bh
 000A           LCDD4_GlobalSelect_ADDR:	equ	ah
 010A           LCDD4_IntCtrl_0_ADDR:	equ	10ah
 010B           LCDD4_IntCtrl_1_ADDR:	equ	10bh
 0009           LCDD4_IntEn_ADDR:	equ	9h
 0001           LCDD4_MASK:	equ	1h
 0000           ; LCDD4_Data access macros
 0000           ;   GetLCDD4_Data macro, return in a
 0000           macro GetLCDD4_Data
 0000                   mov             a,[Port_2_Data_SHADE]
 0000                   and             a, 1h
 0000           macro SetLCDD4_Data
 0000                   or              [Port_2_Data_SHADE], 1h
 0000                   mov             a, [Port_2_Data_SHADE]
 0000                   mov             reg[LCDD4_Data_ADDR], a
 0000           macro ClearLCDD4_Data
 0000                   and             [Port_2_Data_SHADE], ~1h
 0000                   mov             a, [Port_2_Data_SHADE]
 0000                   mov             reg[LCDD4_Data_ADDR], a
 0000           macro GetLCDD4_DriveMode_0
 0000                   mov             a,[Port_2_DriveMode_0_SHADE]
 0000                   and             a, 1h
 0000           macro SetLCDD4_DriveMode_0
 0000                   or              [Port_2_DriveMode_0_SHADE], 1h
 0000                   mov             a, [Port_2_DriveMode_0_SHADE]
 0000                   mov             reg[LCDD4_Data_ADDR], a
 0000           macro ClearLCDD4_DriveMode_0
 0000                   and             [Port_2_DriveMode_0_SHADE], ~1h
 0000                   mov             a, [Port_2_DriveMode_0_SHADE]
 0000                   mov             reg[LCDD4_Data_ADDR], a
 0000           macro GetLCDD4_DriveMode_1
 0000                   mov             a,[Port_2_DriveMode_1_SHADE]
 0000                   and             a, 1h
 0000           macro SetLCDD4_DriveMode_1
 0000                   or              [Port_2_DriveMode_1_SHADE], 1h
 0000                   mov             a, [Port_2_DriveMode_1_SHADE]
 0000                   mov             reg[LCDD4_Data_ADDR], a
 0000           macro ClearLCDD4_DriveMode_1
 0000                   and             [Port_2_DriveMode_1_SHADE], ~1h
 0000                   mov             a, [Port_2_DriveMode_1_SHADE]
 0000                   mov             reg[LCDD4_Data_ADDR], a
 0008           LCDD5_Data_ADDR:	equ	8h
 0108           LCDD5_DriveMode_0_ADDR:	equ	108h
 0109           LCDD5_DriveMode_1_ADDR:	equ	109h
 000B           LCDD5_DriveMode_2_ADDR:	equ	bh
 000A           LCDD5_GlobalSelect_ADDR:	equ	ah
 010A           LCDD5_IntCtrl_0_ADDR:	equ	10ah
 010B           LCDD5_IntCtrl_1_ADDR:	equ	10bh
 0009           LCDD5_IntEn_ADDR:	equ	9h
 0002           LCDD5_MASK:	equ	2h
 0000           ; LCDD5_Data access macros
 0000           ;   GetLCDD5_Data macro, return in a
 0000           macro GetLCDD5_Data
 0000                   mov             a,[Port_2_Data_SHADE]
 0000                   and             a, 2h
 0000           macro SetLCDD5_Data
 0000                   or              [Port_2_Data_SHADE], 2h
 0000                   mov             a, [Port_2_Data_SHADE]
 0000                   mov             reg[LCDD5_Data_ADDR], a
 0000           macro ClearLCDD5_Data
 0000                   and             [Port_2_Data_SHADE], ~2h
 0000                   mov             a, [Port_2_Data_SHADE]
 0000                   mov             reg[LCDD5_Data_ADDR], a
 0000           macro GetLCDD5_DriveMode_0
 0000                   mov             a,[Port_2_DriveMode_0_SHADE]
 0000                   and             a, 2h
 0000           macro SetLCDD5_DriveMode_0
 0000                   or              [Port_2_DriveMode_0_SHADE], 2h
 0000                   mov             a, [Port_2_DriveMode_0_SHADE]
 0000                   mov             reg[LCDD5_Data_ADDR], a
 0000           macro ClearLCDD5_DriveMode_0
 0000                   and             [Port_2_DriveMode_0_SHADE], ~2h
 0000                   mov             a, [Port_2_DriveMode_0_SHADE]
 0000                   mov             reg[LCDD5_Data_ADDR], a
 0000           macro GetLCDD5_DriveMode_1
 0000                   mov             a,[Port_2_DriveMode_1_SHADE]
 0000                   and             a, 2h
 0000           macro SetLCDD5_DriveMode_1
 0000                   or              [Port_2_DriveMode_1_SHADE], 2h
 0000                   mov             a, [Port_2_DriveMode_1_SHADE]
 0000                   mov             reg[LCDD5_Data_ADDR], a
 0000           macro ClearLCDD5_DriveMode_1
 0000                   and             [Port_2_DriveMode_1_SHADE], ~2h
 0000                   mov             a, [Port_2_DriveMode_1_SHADE]
 0000                   mov             reg[LCDD5_Data_ADDR], a
 0008           LCDD6_Data_ADDR:	equ	8h
 0108           LCDD6_DriveMode_0_ADDR:	equ	108h
 0109           LCDD6_DriveMode_1_ADDR:	equ	109h
 000B           LCDD6_DriveMode_2_ADDR:	equ	bh
 000A           LCDD6_GlobalSelect_ADDR:	equ	ah
 010A           LCDD6_IntCtrl_0_ADDR:	equ	10ah
 010B           LCDD6_IntCtrl_1_ADDR:	equ	10bh
 0009           LCDD6_IntEn_ADDR:	equ	9h
 0004           LCDD6_MASK:	equ	4h
 0000           ; LCDD6_Data access macros
 0000           ;   GetLCDD6_Data macro, return in a
 0000           macro GetLCDD6_Data
 0000                   mov             a,[Port_2_Data_SHADE]
 0000                   and             a, 4h
 0000           macro SetLCDD6_Data
 0000                   or              [Port_2_Data_SHADE], 4h
 0000                   mov             a, [Port_2_Data_SHADE]
 0000                   mov             reg[LCDD6_Data_ADDR], a
 0000           macro ClearLCDD6_Data
 0000                   and             [Port_2_Data_SHADE], ~4h
 0000                   mov             a, [Port_2_Data_SHADE]
 0000                   mov             reg[LCDD6_Data_ADDR], a
 0000           macro GetLCDD6_DriveMode_0
 0000                   mov             a,[Port_2_DriveMode_0_SHADE]
 0000                   and             a, 4h
 0000           macro SetLCDD6_DriveMode_0
 0000                   or              [Port_2_DriveMode_0_SHADE], 4h
 0000                   mov             a, [Port_2_DriveMode_0_SHADE]
 0000                   mov             reg[LCDD6_Data_ADDR], a
 0000           macro ClearLCDD6_DriveMode_0
 0000                   and             [Port_2_DriveMode_0_SHADE], ~4h
 0000                   mov             a, [Port_2_DriveMode_0_SHADE]
 0000                   mov             reg[LCDD6_Data_ADDR], a
 0000           macro GetLCDD6_DriveMode_1
 0000                   mov             a,[Port_2_DriveMode_1_SHADE]
 0000                   and             a, 4h
 0000           macro SetLCDD6_DriveMode_1
 0000                   or              [Port_2_DriveMode_1_SHADE], 4h
 0000                   mov             a, [Port_2_DriveMode_1_SHADE]
 0000                   mov             reg[LCDD6_Data_ADDR], a
 0000           macro ClearLCDD6_DriveMode_1
 0000                   and             [Port_2_DriveMode_1_SHADE], ~4h
 0000                   mov             a, [Port_2_DriveMode_1_SHADE]
 0000                   mov             reg[LCDD6_Data_ADDR], a
 0008           LCDD7_Data_ADDR:	equ	8h
 0108           LCDD7_DriveMode_0_ADDR:	equ	108h
 0109           LCDD7_DriveMode_1_ADDR:	equ	109h
 000B           LCDD7_DriveMode_2_ADDR:	equ	bh
 000A           LCDD7_GlobalSelect_ADDR:	equ	ah
 010A           LCDD7_IntCtrl_0_ADDR:	equ	10ah
 010B           LCDD7_IntCtrl_1_ADDR:	equ	10bh
 0009           LCDD7_IntEn_ADDR:	equ	9h
 0008           LCDD7_MASK:	equ	8h
 0000           ; LCDD7_Data access macros
 0000           ;   GetLCDD7_Data macro, return in a
 0000           macro GetLCDD7_Data
 0000                   mov             a,[Port_2_Data_SHADE]
 0000                   and             a, 8h
 0000           macro SetLCDD7_Data
 0000                   or              [Port_2_Data_SHADE], 8h
 0000                   mov             a, [Port_2_Data_SHADE]
 0000                   mov             reg[LCDD7_Data_ADDR], a
 0000           macro ClearLCDD7_Data
 0000                   and             [Port_2_Data_SHADE], ~8h
 0000                   mov             a, [Port_2_Data_SHADE]
 0000                   mov             reg[LCDD7_Data_ADDR], a
 0000           macro GetLCDD7_DriveMode_0
 0000                   mov             a,[Port_2_DriveMode_0_SHADE]
 0000                   and             a, 8h
 0000           macro SetLCDD7_DriveMode_0
 0000                   or              [Port_2_DriveMode_0_SHADE], 8h
 0000                   mov             a, [Port_2_DriveMode_0_SHADE]
 0000                   mov             reg[LCDD7_Data_ADDR], a
 0000           macro ClearLCDD7_DriveMode_0
 0000                   and             [Port_2_DriveMode_0_SHADE], ~8h
 0000                   mov             a, [Port_2_DriveMode_0_SHADE]
 0000                   mov             reg[LCDD7_Data_ADDR], a
 0000           macro GetLCDD7_DriveMode_1
 0000                   mov             a,[Port_2_DriveMode_1_SHADE]
 0000                   and             a, 8h
 0000           macro SetLCDD7_DriveMode_1
 0000                   or              [Port_2_DriveMode_1_SHADE], 8h
 0000                   mov             a, [Port_2_DriveMode_1_SHADE]
 0000                   mov             reg[LCDD7_Data_ADDR], a
 0000           macro ClearLCDD7_DriveMode_1
 0000                   and             [Port_2_DriveMode_1_SHADE], ~8h
 0000                   mov             a, [Port_2_DriveMode_1_SHADE]
 0000                   mov             reg[LCDD7_Data_ADDR], a
 0008           LCDE_Data_ADDR:	equ	8h
 0108           LCDE_DriveMode_0_ADDR:	equ	108h
 0109           LCDE_DriveMode_1_ADDR:	equ	109h
 000B           LCDE_DriveMode_2_ADDR:	equ	bh
 000A           LCDE_GlobalSelect_ADDR:	equ	ah
 010A           LCDE_IntCtrl_0_ADDR:	equ	10ah
 010B           LCDE_IntCtrl_1_ADDR:	equ	10bh
 0009           LCDE_IntEn_ADDR:	equ	9h
 0010           LCDE_MASK:	equ	10h
 0000           ; LCDE_Data access macros
 0000           ;   GetLCDE_Data macro, return in a
 0000           macro GetLCDE_Data
 0000                   mov             a,[Port_2_Data_SHADE]
 0000                   and             a, 10h
 0000           macro SetLCDE_Data
 0000                   or              [Port_2_Data_SHADE], 10h
 0000                   mov             a, [Port_2_Data_SHADE]
 0000                   mov             reg[LCDE_Data_ADDR], a
 0000           macro ClearLCDE_Data
 0000                   and             [Port_2_Data_SHADE], ~10h
 0000                   mov             a, [Port_2_Data_SHADE]
 0000                   mov             reg[LCDE_Data_ADDR], a
 0000           macro GetLCDE_DriveMode_0
 0000                   mov             a,[Port_2_DriveMode_0_SHADE]
 0000                   and             a, 10h
 0000           macro SetLCDE_DriveMode_0
 0000                   or              [Port_2_DriveMode_0_SHADE], 10h
 0000                   mov             a, [Port_2_DriveMode_0_SHADE]
 0000                   mov             reg[LCDE_Data_ADDR], a
 0000           macro ClearLCDE_DriveMode_0
 0000                   and             [Port_2_DriveMode_0_SHADE], ~10h
 0000                   mov             a, [Port_2_DriveMode_0_SHADE]
 0000                   mov             reg[LCDE_Data_ADDR], a
 0000           macro GetLCDE_DriveMode_1
 0000                   mov             a,[Port_2_DriveMode_1_SHADE]
 0000                   and             a, 10h
 0000           macro SetLCDE_DriveMode_1
 0000                   or              [Port_2_DriveMode_1_SHADE], 10h
 0000                   mov             a, [Port_2_DriveMode_1_SHADE]
 0000                   mov             reg[LCDE_Data_ADDR], a
 0000           macro ClearLCDE_DriveMode_1
 0000                   and             [Port_2_DriveMode_1_SHADE], ~10h
 0000                   mov             a, [Port_2_DriveMode_1_SHADE]
 0000                   mov             reg[LCDE_Data_ADDR], a
 0008           LCDRS_Data_ADDR:	equ	8h
 0108           LCDRS_DriveMode_0_ADDR:	equ	108h
 0109           LCDRS_DriveMode_1_ADDR:	equ	109h
 000B           LCDRS_DriveMode_2_ADDR:	equ	bh
 000A           LCDRS_GlobalSelect_ADDR:	equ	ah
 010A           LCDRS_IntCtrl_0_ADDR:	equ	10ah
 010B           LCDRS_IntCtrl_1_ADDR:	equ	10bh
 0009           LCDRS_IntEn_ADDR:	equ	9h
 0020           LCDRS_MASK:	equ	20h
 0000           ; LCDRS_Data access macros
 0000           ;   GetLCDRS_Data macro, return in a
 0000           macro GetLCDRS_Data
 0000                   mov             a,[Port_2_Data_SHADE]
 0000                   and             a, 20h
 0000           macro SetLCDRS_Data
 0000                   or              [Port_2_Data_SHADE], 20h
 0000                   mov             a, [Port_2_Data_SHADE]
 0000                   mov             reg[LCDRS_Data_ADDR], a
 0000           macro ClearLCDRS_Data
 0000                   and             [Port_2_Data_SHADE], ~20h
 0000                   mov             a, [Port_2_Data_SHADE]
 0000                   mov             reg[LCDRS_Data_ADDR], a
 0000           macro GetLCDRS_DriveMode_0
 0000                   mov             a,[Port_2_DriveMode_0_SHADE]
 0000                   and             a, 20h
 0000           macro SetLCDRS_DriveMode_0
 0000                   or              [Port_2_DriveMode_0_SHADE], 20h
 0000                   mov             a, [Port_2_DriveMode_0_SHADE]
 0000                   mov             reg[LCDRS_Data_ADDR], a
 0000           macro ClearLCDRS_DriveMode_0
 0000                   and             [Port_2_DriveMode_0_SHADE], ~20h
 0000                   mov             a, [Port_2_DriveMode_0_SHADE]
 0000                   mov             reg[LCDRS_Data_ADDR], a
 0000           macro GetLCDRS_DriveMode_1
 0000                   mov             a,[Port_2_DriveMode_1_SHADE]
 0000                   and             a, 20h
 0000           macro SetLCDRS_DriveMode_1
 0000                   or              [Port_2_DriveMode_1_SHADE], 20h
 0000                   mov             a, [Port_2_DriveMode_1_SHADE]
 0000                   mov             reg[LCDRS_Data_ADDR], a
 0000           macro ClearLCDRS_DriveMode_1
 0000                   and             [Port_2_DriveMode_1_SHADE], ~20h
 0000                   mov             a, [Port_2_DriveMode_1_SHADE]
 0000                   mov             reg[LCDRS_Data_ADDR], a
 0008           LCDRW_Data_ADDR:	equ	8h
 0108           LCDRW_DriveMode_0_ADDR:	equ	108h
 0109           LCDRW_DriveMode_1_ADDR:	equ	109h
 000B           LCDRW_DriveMode_2_ADDR:	equ	bh
 000A           LCDRW_GlobalSelect_ADDR:	equ	ah
 010A           LCDRW_IntCtrl_0_ADDR:	equ	10ah
 010B           LCDRW_IntCtrl_1_ADDR:	equ	10bh
 0009           LCDRW_IntEn_ADDR:	equ	9h
 0040           LCDRW_MASK:	equ	40h
 0000           ; LCDRW_Data access macros
 0000           ;   GetLCDRW_Data macro, return in a
 0000           macro GetLCDRW_Data
 0000                   mov             a,[Port_2_Data_SHADE]
 0000                   and             a, 40h
 0000           macro SetLCDRW_Data
 0000                   or              [Port_2_Data_SHADE], 40h
 0000                   mov             a, [Port_2_Data_SHADE]
 0000                   mov             reg[LCDRW_Data_ADDR], a
 0000           macro ClearLCDRW_Data
 0000                   and             [Port_2_Data_SHADE], ~40h
 0000                   mov             a, [Port_2_Data_SHADE]
 0000                   mov             reg[LCDRW_Data_ADDR], a
 0000           macro GetLCDRW_DriveMode_0
 0000                   mov             a,[Port_2_DriveMode_0_SHADE]
 0000                   and             a, 40h
 0000           macro SetLCDRW_DriveMode_0
 0000                   or              [Port_2_DriveMode_0_SHADE], 40h
 0000                   mov             a, [Port_2_DriveMode_0_SHADE]
 0000                   mov             reg[LCDRW_Data_ADDR], a
 0000           macro ClearLCDRW_DriveMode_0
 0000                   and             [Port_2_DriveMode_0_SHADE], ~40h
 0000                   mov             a, [Port_2_DriveMode_0_SHADE]
 0000                   mov             reg[LCDRW_Data_ADDR], a
 0000           macro GetLCDRW_DriveMode_1
 0000                   mov             a,[Port_2_DriveMode_1_SHADE]
 0000                   and             a, 40h
 0000           macro SetLCDRW_DriveMode_1
 0000                   or              [Port_2_DriveMode_1_SHADE], 40h
 0000                   mov             a, [Port_2_DriveMode_1_SHADE]
 0000                   mov             reg[LCDRW_Data_ADDR], a
 0000           macro ClearLCDRW_DriveMode_1
 0000                   and             [Port_2_DriveMode_1_SHADE], ~40h
 0000                   mov             a, [Port_2_DriveMode_1_SHADE]
 0000                   mov             reg[LCDRW_Data_ADDR], a
 0004           DUALADC_1_bfCounter1_Mask:             equ   04h
 00DF           DUALADC_1_bfCounter1_INT_REG:          equ   0dfh
 0000           
 0000           ; Counter2 Constants
 0008           DUALADC_1_bfCounter2_Mask:             equ   08h
 00DF           DUALADC_1_bfCounter2_INT_REG:          equ   0dfh
 0000           
 0000           ; PWM Constants
 0002           DUALADC_1_bfPWM16_Mask:                equ   02h
 00DF           DUALADC_1_bfPWM16_INT_REG:             equ   0dfh
 0000           
 0000           ; Power Settings
 0003           DUALADC_1_bfPOWERMASK:                 equ   03h
 0000           DUALADC_1_OFF:                         equ   00h
 0001           DUALADC_1_LOWPOWER:                    equ   01h
 0002           DUALADC_1_MEDPOWER:                    equ   02h
 0003           DUALADC_1_HIGHPOWER:                   equ   03h
 0000           
 0000           ; Parameter Settings
 0007           DUALADC_1_bNUMBITS:                    equ   7h
 0058           DUALADC_1_bCALCTIME:                   equ   58h
 000D           DUALADC_1_bMAXRES:                     equ   0Dh      ; Max resolution 13 bits
 0007           DUALADC_1_bMINRES:                     equ   07h      ; Min resolution 7 bits
 0008           DUALADC_1_fCOMPARE_TRUE:               equ   08h      ; Bit to enable compare True interrupts
 0000           
 0000           ; Functionality constants
 0010           DUALADC_1_fFSW0:                       equ   10h      ; Switch Cap FSW0 switch enable
 0001           DUALADC_1_NoAZ:                        equ   01h      ; Set if AutoZero is no enabled
 0020           DUALADC_1_fAutoZero:                   equ   20h      ; Switch Cap AutoZero switch enable
 0001           DUALADC_1_fDBLK_ENABLE:                equ   01h      ; Digital block enable bit
 0004           DUALADC_1_fPULSE_WIDE:                 equ   04h      ; Enable wide terminal count pulse.
 0000           
 0000           ; fStatus definitions
 0010           DUALADC_1_fDATA_READY:                 equ   10h      ; This bit is set when data is available
 000F           DUALADC_1_bRES_MASK:                   equ   0Fh      ; This bit while in integrate cycle
 0000           
 0000           ; Data Format
 0000           DUALADC_1_DATA_FORMAT:                 equ   0
 0000           
 0000           ; Flag in CR2 register mask
 0001           DUALADC_1_fRES_SET:                    equ   01h
 0000           
 0000           ;--------------------------------------------------
 0000           ; Register Address Contants for DUALADC_1
 0000           ;--------------------------------------------------
 0000           
 0000           ; TriADC PSoC Block register Definitions
 0000           ; Integrator1 Block Register Definitions
 0090           DUALADC_1_bfADC1cr0:    equ 90h
 0091           DUALADC_1_bfADC1cr1:    equ 91h
 0092           DUALADC_1_bfADC1cr2:    equ 92h
 0093           DUALADC_1_bfADC1cr3:    equ 93h
 0000           ; Integrator2 Block Register Definitions
 0098           DUALADC_1_bfADC2cr0:    equ 98h
 0099           DUALADC_1_bfADC2cr1:    equ 99h
 009A           DUALADC_1_bfADC2cr2:    equ 9ah
 009B           DUALADC_1_bfADC2cr3:    equ 9bh
 0000           
 0000           ; Counter1 Block Register Definitions
 0048           DUALADC_1_fCounter1FN:  equ 48h
 0049           DUALADC_1_fCounter1SL:  equ 49h
 004A           DUALADC_1_fCounter1OS:  equ 4ah
 0048           DUALADC_1_bCount1:  equ 48h
 0049           DUALADC_1_bPeriod1: equ 49h
 004A           DUALADC_1_bCompare1:    equ 4ah
 004B           DUALADC_1_bCounter1_CR0:    equ 4bh
 0000           
 0000           ; Counter2 Block Register Definitions
 004C           DUALADC_1_fCounter2FN:  equ 4ch
 004D           DUALADC_1_fCounter2SL:  equ 4dh
 004E           DUALADC_1_fCounter2OS:  equ 4eh
 004C           DUALADC_1_bCount2:  equ 4ch
 004D           DUALADC_1_bPeriod2: equ 4dh
 004E           DUALADC_1_bCompare2:    equ 4eh
 004F           DUALADC_1_bCounter2_CR0:    equ 4fh
 0000           
 0000           
 0000           ; PWM16 Block Register Definitions
 0040           DUALADC_1_bfPWM_LSB_FN: equ 40h
 0044           DUALADC_1_bfPWM_MSB_FN: equ 44h
 0043           DUALADC_1_fPWM_LSB_CR0: equ 43h
 0047           DUALADC_1_fPWM_MSB_CR0: equ 47h
 0044           DUALADC_1_bPWM_Count_MSB:   equ 44h
 0040           DUALADC_1_bPWM_Count_LSB:   equ 40h
 0045           DUALADC_1_bPWM_Period_MSB:  equ 45h
 0041           DUALADC_1_bPWM_Period_LSB:  equ 41h
 0046           DUALADC_1_bPWM_IntTime_MSB: equ 46h
 0042           DUALADC_1_bPWM_IntTime_LSB: equ 42h
 0040           DUALADC_1_bfPWM_LSB_FN: equ 40h
 0044           DUALADC_1_bfPWM_MSB_FN: equ 44h
 0000           
 0000           ; end of file DUALADC_1.inc
 0000           
 00C0           FLAG_PGMODE_MASK:  equ 0C0h     ; Paging control for > 256 bytes of RAM
 0000           FLAG_PGMODE_0:     equ 00h       ; Direct to Page 0,      indexed to Page 0
 0040           FLAG_PGMODE_1:     equ 40h       ; Direct to Page 0,      indexed to STK_PP page
 0080           FLAG_PGMODE_2:     equ 80h       ; Direct to CUR_PP page, indexed to IDX_PP page
 00C0           FLAG_PGMODE_3:     equ 0C0h       ; Direct to CUR_PP page, indexed to STK_PP page
 0000           FLAG_PGMODE_00b:   equ 00h       ; Same as PGMODE_0
 0040           FLAG_PGMODE_01b:   equ 40h       ; Same as PGMODE_1
 0080           FLAG_PGMODE_10b:   equ 80h       ; Same as PGMODE_2
 00C0           FLAG_PGMODE_11b:   equ 0C0h       ; Same as PGMODE_3
 0010           FLAG_XIO_MASK:     equ 10h     ; I/O Bank select for register space
 0008           FLAG_SUPER:        equ 08h     ; Supervisor Mode
 0004           FLAG_CARRY:        equ 04h     ; Carry Condition Flag
 0002           FLAG_ZERO:         equ 02h     ; Zero  Condition Flag
 0001           FLAG_GLOBAL_IE:    equ 01h     ; Glogal Interrupt Enable
 0000           
 0000           
 0000           ;;=============================================================================
 0000           ;;      Register Space, Bank 0
 0000           ;;=============================================================================
 0000           
 0000           ;------------------------------------------------
 0000           ;  Port Registers
 0000           ;  Note: Also see this address range in Bank 1.
 0000           ;------------------------------------------------
 0000           ; Port 0
 0000           PRT0DR:       equ 00h          ; Port 0 Data Register                     (RW)
 0001           PRT0IE:       equ 01h          ; Port 0 Interrupt Enable Register         (RW)
 0002           PRT0GS:       equ 02h          ; Port 0 Global Select Register            (RW)
 0003           PRT0DM2:      equ 03h          ; Port 0 Drive Mode 2                      (RW)
 0000           ; Port 1
 0004           PRT1DR:       equ 04h          ; Port 1 Data Register                     (RW)
 0005           PRT1IE:       equ 05h          ; Port 1 Interrupt Enable Register         (RW)
 0006           PRT1GS:       equ 06h          ; Port 1 Global Select Register            (RW)
 0007           PRT1DM2:      equ 07h          ; Port 1 Drive Mode 2                      (RW)
 0000           ; Port 2
 0008           PRT2DR:       equ 08h          ; Port 2 Data Register                     (RW)
 0009           PRT2IE:       equ 09h          ; Port 2 Interrupt Enable Register         (RW)
 000A           PRT2GS:       equ 0Ah          ; Port 2 Global Select Register            (RW)
 000B           PRT2DM2:      equ 0Bh          ; Port 2 Drive Mode 2                      (RW)
 0000           ; Port 3
 000C           PRT3DR:       equ 0Ch          ; Port 3 Data Register                     (RW)
 000D           PRT3IE:       equ 0Dh          ; Port 3 Interrupt Enable Register         (RW)
 000E           PRT3GS:       equ 0Eh          ; Port 3 Global Select Register            (RW)
 000F           PRT3DM2:      equ 0Fh          ; Port 3 Drive Mode 2                      (RW)
 0000           ; Port 4
 0010           PRT4DR:       equ 10h          ; Port 4 Data Register                     (RW)
 0011           PRT4IE:       equ 11h          ; Port 4 Interrupt Enable Register         (RW)
 0012           PRT4GS:       equ 12h          ; Port 4 Global Select Register            (RW)
 0013           PRT4DM2:      equ 13h          ; Port 4 Drive Mode 2                      (RW)
 0000           ; Port 5
 0014           PRT5DR:       equ 14h          ; Port 5 Data Register                     (RW)
 0015           PRT5IE:       equ 15h          ; Port 5 Interrupt Enable Register         (RW)
 0016           PRT5GS:       equ 16h          ; Port 5 Global Select Register            (RW)
 0017           PRT5DM2:      equ 17h          ; Port 5 Drive Mode 2                      (RW)
 0000           ; Port 6
 0018           PRT6DR:       equ 18h          ; Port 6 Data Register                     (RW)
 0019           PRT6IE:       equ 19h          ; Port 6 Interrupt Enable Register         (RW)
 001A           PRT6GS:       equ 1Ah          ; Port 6 Global Select Register            (RW)
 001B           PRT6DM2:      equ 1Bh          ; Port 6 Drive Mode 2                      (RW)
 0000           ; Port 7
 001C           PRT7DR:       equ 1Ch          ; Port 7 Data Register                     (RW)
 001D           PRT7IE:       equ 1Dh          ; Port 7 Interrupt Enable Register         (RW)
 001E           PRT7GS:       equ 1Eh          ; Port 7 Global Select Register            (RW)
 001F           PRT7DM2:      equ 1Fh          ; Port 7 Drive Mode 2                      (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Digital PSoC(tm) block Registers
 0000           ;  Note: Also see this address range in Bank 1.
 0000           ;------------------------------------------------
 0000           ; Digital PSoC block 00, Basic Type B
 0020           DBB00DR0:     equ 20h          ; data register 0                          (#)
 0021           DBB00DR1:     equ 21h          ; data register 1                          (W)
 0022           DBB00DR2:     equ 22h          ; data register 2                          (RW)
 0023           DBB00CR0:     equ 23h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 01, Basic Type B
 0024           DBB01DR0:     equ 24h          ; data register 0                          (#)
 0025           DBB01DR1:     equ 25h          ; data register 1                          (W)
 0026           DBB01DR2:     equ 26h          ; data register 2                          (RW)
 0027           DBB01CR0:     equ 27h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 02, Communications Type B
 0028           DCB02DR0:     equ 28h          ; data register 0                          (#)
 0029           DCB02DR1:     equ 29h          ; data register 1                          (W)
 002A           DCB02DR2:     equ 2Ah          ; data register 2                          (RW)
 002B           DCB02CR0:     equ 2Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 03, Communications Type B
 002C           DCB03DR0:     equ 2Ch          ; data register 0                          (#)
 002D           DCB03DR1:     equ 2Dh          ; data register 1                          (W)
 002E           DCB03DR2:     equ 2Eh          ; data register 2                          (RW)
 002F           DCB03CR0:     equ 2Fh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 10, Basic Type B
 0030           DBB10DR0:     equ 30h          ; data register 0                          (#)
 0031           DBB10DR1:     equ 31h          ; data register 1                          (W)
 0032           DBB10DR2:     equ 32h          ; data register 2                          (RW)
 0033           DBB10CR0:     equ 33h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 11, Basic Type B
 0034           DBB11DR0:     equ 34h          ; data register 0                          (#)
 0035           DBB11DR1:     equ 35h          ; data register 1                          (W)
 0036           DBB11DR2:     equ 36h          ; data register 2                          (RW)
 0037           DBB11CR0:     equ 37h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 12, Communications Type B
 0038           DCB12DR0:     equ 38h          ; data register 0                          (#)
 0039           DCB12DR1:     equ 39h          ; data register 1                          (W)
 003A           DCB12DR2:     equ 3Ah          ; data register 2                          (RW)
 003B           DCB12CR0:     equ 3Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 13, Communications Type B
 003C           DCB13DR0:     equ 3Ch          ; data register 0                          (#)
 003D           DCB13DR1:     equ 3Dh          ; data register 1                          (W)
 003E           DCB13DR2:     equ 3Eh          ; data register 2                          (RW)
 003F           DCB13CR0:     equ 3Fh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 20, Basic Type B
 0040           DBB20DR0:     equ 40h          ; data register 0                          (#)
 0041           DBB20DR1:     equ 41h          ; data register 1                          (W)
 0042           DBB20DR2:     equ 42h          ; data register 2                          (RW)
 0043           DBB20CR0:     equ 43h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 21, Basic Type B
 0044           DBB21DR0:     equ 44h          ; data register 0                          (#)
 0045           DBB21DR1:     equ 45h          ; data register 1                          (W)
 0046           DBB21DR2:     equ 46h          ; data register 2                          (RW)
 0047           DBB21CR0:     equ 47h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 22, Communications Type B
 0048           DCB22DR0:     equ 48h          ; data register 0                          (#)
 0049           DCB22DR1:     equ 49h          ; data register 1                          (W)
 004A           DCB22DR2:     equ 4Ah          ; data register 2                          (RW)
 004B           DCB22CR0:     equ 4Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 23, Communications Type B
 004C           DCB23DR0:     equ 4Ch          ; data register 0                          (#)
 004D           DCB23DR1:     equ 4Dh          ; data register 1                          (W)
 004E           DCB23DR2:     equ 4Eh          ; data register 2                          (RW)
 004F           DCB23CR0:     equ 4Fh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 30, Basic Type B
 0050           DBB30DR0:     equ 50h          ; data register 0                          (#)
 0051           DBB30DR1:     equ 51h          ; data register 1                          (W)
 0052           DBB30DR2:     equ 52h          ; data register 2                          (RW)
 0053           DBB30CR0:     equ 53h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 31, Basic Type B
 0054           DBB31DR0:     equ 54h          ; data register 0                          (#)
 0055           DBB31DR1:     equ 55h          ; data register 1                          (W)
 0056           DBB31DR2:     equ 56h          ; data register 2                          (RW)
 0057           DBB31CR0:     equ 57h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 32, Communications Type B
 0058           DCB32DR0:     equ 58h          ; data register 0                          (#)
 0059           DCB32DR1:     equ 59h          ; data register 1                          (W)
 005A           DCB32DR2:     equ 5Ah          ; data register 2                          (RW)
 005B           DCB32CR0:     equ 5Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 33, Communications Type B
 005C           DCB33DR0:     equ 5Ch          ; data register 0                          (#)
 005D           DCB33DR1:     equ 5Dh          ; data register 1                          (W)
 005E           DCB33DR2:     equ 5Eh          ; data register 2                          (RW)
 005F           DCB33CR0:     equ 5Fh          ; control & status register 0              (#)
 0000           
 0000           ;-------------------------------------
 0000           ;  Analog Resource Control Registers
 0000           ;-------------------------------------
 0060           AMX_IN:       equ 60h          ; Analog Input Multiplexor Control         (RW)
 00C0           AMX_IN_ACI3:          equ 0C0h    ; MASK: column 3 input mux
 0030           AMX_IN_ACI2:          equ 30h    ; MASK: column 2 input mux
 000C           AMX_IN_ACI1:          equ 0Ch    ; MASK: column 1 input mux
 0003           AMX_IN_ACI0:          equ 03h    ; MASK: column 0 input mux
 0000           
 0063           ARF_CR:       equ 63h          ; Analog Reference Control Register        (RW)
 0040           ARF_CR_HBE:           equ 40h    ; MASK: Bias level control
 0038           ARF_CR_REF:           equ 38h    ; MASK: Analog Reference controls
 0007           ARF_CR_REFPWR:        equ 07h    ; MASK: Analog Reference power
 0004           ARF_CR_APWR:          equ 04h    ; MASK: use deprecated; see datasheet
 0003           ARF_CR_SCPWR:         equ 03h    ; MASK: Switched Cap block power
 0000           
 0064           CMP_CR0:      equ 64h          ; Analog Comparator Bus 0 Register         (#)
 0080           CMP_CR0_COMP3:        equ 80h    ; MASK: Column 3 comparator state        (R)
 0040           CMP_CR0_COMP2:        equ 40h    ; MASK: Column 2 comparator state        (R)
 0020           CMP_CR0_COMP1:        equ 20h    ; MASK: Column 1 comparator state        (R)
 0010           CMP_CR0_COMP0:        equ 10h    ; MASK: Column 0 comparator state        (R)
 0008           CMP_CR0_AINT3:        equ 08h    ; MASK: Column 3 interrupt source        (RW)
 0004           CMP_CR0_AINT2:        equ 04h    ; MASK: Column 2 interrupt source        (RW)
 0002           CMP_CR0_AINT1:        equ 02h    ; MASK: Column 1 interrupt source        (RW)
 0001           CMP_CR0_AINT0:        equ 01h    ; MASK: Column 0 interrupt source        (RW)
 0000           
 0065           ASY_CR:       equ 65h          ; Analog Synchronizaton Control            (#)
 0070           ASY_CR_SARCOUNT:      equ 70h    ; MASK: SAR support: resolution count    (W)
 0008           ASY_CR_SARSIGN:       equ 08h    ; MASK: SAR support: sign                (RW)
 0006           ASY_CR_SARCOL:        equ 06h    ; MASK: SAR support: column spec         (RW)
 0001           ASY_CR_SYNCEN:        equ 01h    ; MASK: Stall bit                        (RW)
 0000           
 0066           CMP_CR1:      equ 66h          ; Analog Comparator Bus 1 Register         (RW)
 0080           CMP_CR1_ASYNCH3:      equ 80h    ; MASK: Column 3 comparator bus synch
 0040           CMP_CR1_ASYNCH2:      equ 40h    ; MASK: Column 2 comparator bus synch
 0020           CMP_CR1_ASYNCH1:      equ 20h    ; MASK: Column 1 comparator bus synch
 0010           CMP_CR1_ASYNCH0:      equ 10h    ; MASK: Column 0 comparator bus synch
 0000           
 0000           ;---------------------------------------------------
 0000           ;  Analog PSoC block Registers
 0000           ;
 0000           ;  Note: the following registers are mapped into
 0000           ;  both register bank 0 AND register bank 1.
 0000           ;---------------------------------------------------
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 0
 0070           ACB00CR3:     equ 70h          ; Control register 3                       (RW)
 0071           ACB00CR0:     equ 71h          ; Control register 0                       (RW)
 0072           ACB00CR1:     equ 72h          ; Control register 1                       (RW)
 0073           ACB00CR2:     equ 73h          ; Control register 2                       (RW)
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 1
 0074           ACB01CR3:     equ 74h          ; Control register 3                       (RW)
 0075           ACB01CR0:     equ 75h          ; Control register 0                       (RW)
 0076           ACB01CR1:     equ 76h          ; Control register 1                       (RW)
 0077           ACB01CR2:     equ 77h          ; Control register 2                       (RW)
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 2
 0078           ACB02CR3:     equ 78h          ; Control register 3                       (RW)
 0079           ACB02CR0:     equ 79h          ; Control register 0                       (RW)
 007A           ACB02CR1:     equ 7Ah          ; Control register 1                       (RW)
 007B           ACB02CR2:     equ 7Bh          ; Control register 2                       (RW)
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 3
 007C           ACB03CR3:     equ 7Ch          ; Control register 3                       (RW)
 007D           ACB03CR0:     equ 7Dh          ; Control register 0                       (RW)
 007E           ACB03CR1:     equ 7Eh          ; Control register 1                       (RW)
 007F           ACB03CR2:     equ 7Fh          ; Control register 2                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 1 Col 0
 0080           ASC10CR0:     equ 80h          ; Control register 0                       (RW)
 0081           ASC10CR1:     equ 81h          ; Control register 1                       (RW)
 0082           ASC10CR2:     equ 82h          ; Control register 2                       (RW)
 0083           ASC10CR3:     equ 83h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 1 Col 1
 0084           ASD11CR0:     equ 84h          ; Control register 0                       (RW)
 0085           ASD11CR1:     equ 85h          ; Control register 1                       (RW)
 0086           ASD11CR2:     equ 86h          ; Control register 2                       (RW)
 0087           ASD11CR3:     equ 87h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 1 Col 2
 0088           ASC12CR0:     equ 88h          ; Control register 0                       (RW)
 0089           ASC12CR1:     equ 89h          ; Control register 1                       (RW)
 008A           ASC12CR2:     equ 8Ah          ; Control register 2                       (RW)
 008B           ASC12CR3:     equ 8Bh          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 1 Col 3
 008C           ASD13CR0:     equ 8Ch          ; Control register 0                       (RW)
 008D           ASD13CR1:     equ 8Dh          ; Control register 1                       (RW)
 008E           ASD13CR2:     equ 8Eh          ; Control register 2                       (RW)
 008F           ASD13CR3:     equ 8Fh          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 2 Col 0
 0090           ASD20CR0:     equ 90h          ; Control register 0                       (RW)
 0091           ASD20CR1:     equ 91h          ; Control register 1                       (RW)
 0092           ASD20CR2:     equ 92h          ; Control register 2                       (RW)
 0093           ASD20CR3:     equ 93h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 2 Col 1
 0094           ASC21CR0:     equ 94h          ; Control register 0                       (RW)
 0095           ASC21CR1:     equ 95h          ; Control register 1                       (RW)
 0096           ASC21CR2:     equ 96h          ; Control register 2                       (RW)
 0097           ASC21CR3:     equ 97h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 2 Col 2
 0098           ASD22CR0:     equ 98h          ; Control register 0                       (RW)
 0099           ASD22CR1:     equ 99h          ; Control register 1                       (RW)
 009A           ASD22CR2:     equ 9Ah          ; Control register 2                       (RW)
 009B           ASD22CR3:     equ 9Bh          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 2 Col 3
 009C           ASC23CR0:     equ 9Ch          ; Control register 0                       (RW)
 009D           ASC23CR1:     equ 9Dh          ; Control register 1                       (RW)
 009E           ASC23CR2:     equ 9Eh          ; Control register 2                       (RW)
 009F           ASC23CR3:     equ 9Fh          ; Control register 3                       (RW)
 0000           
 0000           ;-----------------------------------------------
 0000           ;  Global General Purpose Data Registers
 0000           ;-----------------------------------------------
 006C           TMP0_DR:      equ 6Ch          ; deprecated do not use
 006D           TMP1_DR:      equ 6Dh          ; deprecated do not use
 006E           TMP2_DR:      equ 6Eh          ; deprecated do not use
 006F           TMP3_DR:      equ 6Fh          ; deprecated do not use
 0000           
 006C           TMP_DR0:      equ 6Ch          ; Temporary Data Register 0                (RW)
 006D           TMP_DR1:      equ 6Dh          ; Temporary Data Register 1                (RW)
 006E           TMP_DR2:      equ 6Eh          ; Temporary Data Register 2                (RW)
 006F           TMP_DR3:      equ 6Fh          ; Temporary Data Register 3                (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Row Digital Interconnects
 0000           ;
 0000           ;  Note: the following registers are mapped into
 0000           ;  both register bank 0 AND register bank 1.
 0000           ;------------------------------------------------
 0000           
 00B0           RDI0RI:       equ 0B0h          ; Row Digital Interconnect Row 0 Input Reg (RW)
 00B1           RDI0SYN:      equ 0B1h          ; Row Digital Interconnect Row 0 Sync Reg  (RW)
 00B2           RDI0IS:       equ 0B2h          ; Row 0 Input Select Register              (RW)
 00B3           RDI0LT0:      equ 0B3h          ; Row 0 Look Up Table Register 0           (RW)
 00B4           RDI0LT1:      equ 0B4h          ; Row 0 Look Up Table Register 1           (RW)
 00B5           RDI0RO0:      equ 0B5h          ; Row 0 Output Register 0                  (RW)
 00B6           RDI0RO1:      equ 0B6h          ; Row 0 Output Register 1                  (RW)
 0000           
 00B8           RDI1RI:       equ 0B8h          ; Row Digital Interconnect Row 1 Input Reg (RW)
 00B9           RDI1SYN:      equ 0B9h          ; Row Digital Interconnect Row 1 Sync Reg  (RW)
 00BA           RDI1IS:       equ 0BAh          ; Row 1 Input Select Register              (RW)
 00BB           RDI1LT0:      equ 0BBh          ; Row 1 Look Up Table Register 0           (RW)
 00BC           RDI1LT1:      equ 0BCh          ; Row 1 Look Up Table Register 1           (RW)
 00BD           RDI1RO0:      equ 0BDh          ; Row 1 Output Register 0                  (RW)
 00BE           RDI1RO1:      equ 0BEh          ; Row 1 Output Register 1                  (RW)
 0000           
 00C0           RDI2RI:       equ 0C0h          ; Row Digital Interconnect Row 2 Input Reg (RW)
 00C1           RDI2SYN:      equ 0C1h          ; Row Digital Interconnect Row 2 Sync Reg  (RW)
 00C2           RDI2IS:       equ 0C2h          ; Row 2 Input Select Register              (RW)
 00C3           RDI2LT0:      equ 0C3h          ; Row 2 Look Up Table Register 0           (RW)
 00C4           RDI2LT1:      equ 0C4h          ; Row 2 Look Up Table Register 1           (RW)
 00C5           RDI2RO0:      equ 0C5h          ; Row 2 Output Register 0                  (RW)
 00C6           RDI2RO1:      equ 0C6h          ; Row 2 Output Register 1                  (RW)
 0000           
 00C8           RDI3RI:       equ 0C8h          ; Row Digital Interconnect Row 3 Input Reg (RW)
 00C9           RDI3SYN:      equ 0C9h          ; Row Digital Interconnect Row 3 Sync Reg  (RW)
 00CA           RDI3IS:       equ 0CAh          ; Row 3 Input Select Register              (RW)
 00CB           RDI3LT0:      equ 0CBh          ; Row 3 Look Up Table Register 0           (RW)
 00CC           RDI3LT1:      equ 0CCh          ; Row 3 Look Up Table Register 1           (RW)
 00CD           RDI3RO0:      equ 0CDh          ; Row 3 Output Register 0                  (RW)
 00CE           RDI3RO1:      equ 0CEh          ; Row 3 Output Register 1                  (RW)
 0000           
 0000           ;-----------------------------------------------
 0000           ;  Ram Page Pointers
 0000           ;-----------------------------------------------
 00D0           CUR_PP:      equ 0D0h           ; Current   Page Pointer
 00D1           STK_PP:      equ 0D1h           ; Stack     Page Pointer
 00D3           IDX_PP:      equ 0D3h           ; Index     Page Pointer
 00D4           MVR_PP:      equ 0D4h           ; MVI Read  Page Pointer
 00D5           MVW_PP:      equ 0D5h           ; MVI Write Page Pointer
 0000           
 0000           ;------------------------------------------------
 0000           ;  I2C Configuration Registers
 0000           ;------------------------------------------------
 00D6           I2C_CFG:      equ 0D6h          ; I2C Configuration Register               (RW)
 0040           I2C_CFG_PINSEL:         equ 40h  ; MASK: Select P1[0] and P1[1] for I2C
 0020           I2C_CFG_BUSERR_IE:      equ 20h  ; MASK: Enable interrupt on Bus Error
 0010           I2C_CFG_STOP_IE:        equ 10h  ; MASK: Enable interrupt on Stop
 0000           I2C_CFG_CLK_RATE_100K:  equ 00h  ; MASK: I2C clock set at 100K
 0004           I2C_CFG_CLK_RATE_400K:  equ 04h  ; MASK: I2C clock set at 400K
 0008           I2C_CFG_CLK_RATE_50K:   equ 08h  ; MASK: I2C clock set at 50K
 000C           I2C_CFG_CLK_RATE_1M6:   equ 0Ch  ; MASK: I2C clock set at 1.6M
 000C           I2C_CFG_CLK_RATE:       equ 0Ch  ; MASK: I2C clock rate setting mask
 0002           I2C_CFG_PSELECT_MASTER: equ 02h  ; MASK: Enable I2C Master
 0001           I2C_CFG_PSELECT_SLAVE:  equ 01h  ; MASK: Enable I2C Slave
 0000           
 00D7           I2C_SCR:      equ 0D7h          ; I2C Status and Control Register          (#)
 0080           I2C_SCR_BUSERR:        equ 80h   ; MASK: I2C Bus Error detected           (RC)
 0040           I2C_SCR_LOSTARB:       equ 40h   ; MASK: I2C Arbitration lost             (RC)
 0020           I2C_SCR_STOP:          equ 20h   ; MASK: I2C Stop detected                (RC)
 0010           I2C_SCR_ACK:           equ 10h   ; MASK: ACK the last byte                (RW)
 0008           I2C_SCR_ADDR:          equ 08h   ; MASK: Address rcv'd is Slave address   (RC)
 0004           I2C_SCR_XMIT:          equ 04h   ; MASK: Set transfer to tranmit mode     (RW)
 0002           I2C_SCR_LRB:           equ 02h   ; MASK: Last recieved bit                (RC)
 0001           I2C_SCR_BYTECOMPLETE:  equ 01h   ; MASK: Transfer of byte complete        (RC)
 0000           
 00D8           I2C_DR:       equ 0D8h          ; I2C Data Register                        (RW)
 0000           
 00D9           I2C_MSCR:     equ 0D9h          ; I2C Master Status and Control Register   (#)
 0008           I2C_MSCR_BUSY:         equ 08h   ; MASK: I2C Busy (Start detected)        (R)
 0004           I2C_MSCR_MODE:         equ 04h   ; MASK: Start has been generated         (R)
 0002           I2C_MSCR_RESTART:      equ 02h   ; MASK: Generate a Restart condition     (RW)
 0001           I2C_MSCR_START:        equ 01h   ; MASK: Generate a Start condition       (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  System and Global Resource Registers
 0000           ;------------------------------------------------
 00DA           INT_CLR0:     equ 0DAh          ; Interrupt Clear Register 0               (RW)
 0000                                          ; Use INT_MSK0 bit field masks
 00DB           INT_CLR1:     equ 0DBh          ; Interrupt Clear Register 1               (RW)
 0000                                          ; Use INT_MSK1 bit field masks
 00DC           INT_CLR2:     equ 0DCh          ; Interrupt Clear Register 2               (RW)
 0000                                          ; Use INT_MSK2 bit field masks
 00DD           INT_CLR3:     equ 0DDh          ; Interrupt Clear Register 3               (RW)
 0000                                          ; Use INT_MSK3 bit field masks
 0000           
 00DE           INT_MSK3:     equ 0DEh          ; I2C and Software Mask Register           (RW)
 0080           INT_MSK3_ENSWINT:          equ 80h ; MASK: enable/disable SW interrupt
 0001           INT_MSK3_I2C:              equ 01h ; MASK: enable/disable I2C interrupt
 0000           
 00DF           INT_MSK2:     equ 0DFh          ; Digital PSoC block Mask Register         (RW)
 0080           INT_MSK2_DCB33:            equ 80h ; MASK: enable/disable DCB33 block interrupt
 0040           INT_MSK2_DCB32:            equ 40h ; MASK: enable/disable DCB32 block interrupt
 0020           INT_MSK2_DBB31:            equ 20h ; MASK: enable/disable DBB31 block interrupt
 0010           INT_MSK2_DBB30:            equ 10h ; MASK: enable/disable DBB30 block interrupt
 0008           INT_MSK2_DCB23:            equ 08h ; MASK: enable/disable DCB23 block interrupt
 0004           INT_MSK2_DCB22:            equ 04h ; MASK: enable/disable DCB22 block interrupt
 0002           INT_MSK2_DBB21:            equ 02h ; MASK: enable/disable DBB21 block interrupt
 0001           INT_MSK2_DBB20:            equ 01h ; MASK: enable/disable DBB20 block interrupt
 0000           
 00E0           INT_MSK0:     equ 0E0h          ; General Interrupt Mask Register          (RW)
 0080           INT_MSK0_VC3:              equ 80h ; MASK: enable/disable VC3 interrupt
 0040           INT_MSK0_SLEEP:            equ 40h ; MASK: enable/disable sleep interrupt
 0020           INT_MSK0_GPIO:             equ 20h ; MASK: enable/disable GPIO  interrupt
 0010           INT_MSK0_ACOLUMN_3:        equ 10h ; MASK: enable/disable Analog col 3 interrupt
 0008           INT_MSK0_ACOLUMN_2:        equ 08h ; MASK: enable/disable Analog col 2 interrupt
 0004           INT_MSK0_ACOLUMN_1:        equ 04h ; MASK: enable/disable Analog col 1 interrupt
 0002           INT_MSK0_ACOLUMN_0:        equ 02h ; MASK: enable/disable Analog col 0 interrupt
 0001           INT_MSK0_VOLTAGE_MONITOR:  equ 01h ; MASK: enable/disable Volts interrupt
 0000           
 00E1           INT_MSK1:     equ 0E1h          ; Digital PSoC block Mask Register         (RW)
 0080           INT_MSK1_DCB13:            equ 80h ; MASK: enable/disable DCB13 block interrupt
 0040           INT_MSK1_DCB12:            equ 40h ; MASK: enable/disable DCB12 block interrupt
 0020           INT_MSK1_DBB11:            equ 20h ; MASK: enable/disable DBB11 block interrupt
 0010           INT_MSK1_DBB10:            equ 10h ; MASK: enable/disable DBB10 block interrupt
 0008           INT_MSK1_DCB03:            equ 08h ; MASK: enable/disable DCB03 block interrupt
 0004           INT_MSK1_DCB02:            equ 04h ; MASK: enable/disable DCB02 block interrupt
 0002           INT_MSK1_DBB01:            equ 02h ; MASK: enable/disable DBB01 block interrupt
 0001           INT_MSK1_DBB00:            equ 01h ; MASK: enable/disable DBB00 block interrupt
 0000           
 00E2           INT_VC:       equ 0E2h          ; Interrupt vector register                (RC)
 00E3           RES_WDT:      equ 0E3h          ; Watch Dog Timer Register                 (W)
 0000           
 0000           ; DECIMATOR Registers
 00E4           DEC_DH:       equ 0E4h          ; Data Register (high byte)                (RC)
 00E5           DEC_DL:       equ 0E5h          ; Data Register ( low byte)                (RC)
 00E6           DEC_CR0:      equ 0E6h          ; Data Control Register 0                  (RW)
 00E7           DEC_CR1:      equ 0E7h          ; Data Control Register 1                  (RW)
 0000                                          ; Also see DEC_CR2 in bank 1
 0000           
 0000           ; Multiplier and MAC (Multiply/Accumulate) Unit
 0000           //   Compatibility Set: Maps onto MAC0
 00E8           MUL_X:        equ 0E8h          ; Multiplier X Register (write)            (W)
 00E9           MUL_Y:        equ 0E9h          ; Multiplier Y Register (write)            (W)
 00EA           MUL_DH:       equ 0EAh          ; Multiplier Result Data (high byte read)  (R)
 00EB           MUL_DL:       equ 0EBh          ; Multiplier Result Data ( low byte read)  (R)
 00EC           MAC_X:        equ 0ECh          ; write = MAC X register [also see ACC_DR1]
 00EC           ACC_DR1:      equ MAC_X        ; read =  MAC Accumulator, byte 1          (RW)
 00ED           MAC_Y:        equ 0EDh          ; write = MAC Y register [also see ACC_DR0]
 00ED           ACC_DR0:      equ MAC_Y        ; read =  MAC Accumulator, byte 0          (RW)
 00EE           MAC_CL0:      equ 0EEh          ; write = MAC Clear Accum [also see ACC_DR3]
 00EE           ACC_DR3:      equ MAC_CL0      ; read =  MAC Accumulator, byte 3          (RW)
 00EF           MAC_CL1:      equ 0EFh          ; write = MAC Clear Accum [also see ACC_DR2]
 00EF           ACC_DR2:      equ MAC_CL1      ; read =  MAC Accumulator, byte 2          (RW)
 0000           
 0000           // Multiply/Accumulate Unit 0
 00E8           MUL0_X:       equ 0E8h          ; Multiplier 0 X Register (write)          (W)
 00E9           MUL0_Y:       equ 0E9h          ; Multiplier 0 Y Register (write)          (W)
 00EA           MUL0_DH:      equ 0EAh          ; Multiplier 0 Result Data (high byte read)(R)
 00EB           MUL0_DL:      equ 0EBh          ; Multiplier 0 Result Data ( low byte read)(R)
 00EC           MAC0_X:       equ 0ECh          ; write = MAC 0 X register [also see ACC_DR1]
 00EC           ACC0_DR1:     equ MAC0_X       ; read =  MAC 0 Accumulator, byte 1        (RW)
 00ED           MAC0_Y:       equ 0EDh          ; write = MAC 0 Y register [also see ACC_DR0]
 00ED           ACC0_DR0:     equ MAC0_Y       ; read =  MAC 0 Accumulator, byte 0        (RW)
 00EE           MAC0_CL0:     equ 0EEh          ; write = MAC 0 Clear Accum [also see ACC_DR3]
 00EE           ACC0_DR3:     equ MAC0_CL0     ; read =  MAC 0 Accumulator, byte 3        (RW)
 00EF           MAC0_CL1:     equ 0EFh          ; write = MAC 0 Clear Accum [also see ACC_DR2]
 00EF           ACC0_DR2:     equ MAC0_CL1     ; read =  MAC 0 Accumulator, byte 2        (RW)
 0000           
 0000           // Multiply/Accumulate Unit 1
 00A8           MUL1_X:       equ 0A8h          ; Multiplier 1 X Register (write)          (W)
 00A9           MUL1_Y:       equ 0A9h          ; Multiplier 1 Y Register (write)          (W)
 00AA           MUL1_DH:      equ 0AAh          ; Multiplier 1 Result Data (high byte read)(R)
 00AB           MUL1_DL:      equ 0ABh          ; Multiplier 1 Result Data ( low byte read)(R)
 00AC           MAC1_X:       equ 0ACh          ; write = MAC 1 X register [also see ACC_DR1]
 00AC           ACC1_DR1:     equ MAC1_X       ; read =  MAC 1 Accumulator, byte 1        (RW)
 00AD           MAC1_Y:       equ 0ADh          ; write = MAC 1 Y register [also see ACC_DR0]
 00AD           ACC1_DR0:     equ MAC1_Y       ; read =  MAC 1 Accumulator, byte 0        (RW)
 00AE           MAC1_CL0:     equ 0AEh          ; write = MAC 1 Clear Accum [also see ACC_DR3]
 00AE           ACC1_DR3:     equ MAC1_CL0     ; read =  MAC 1 Accumulator, byte 3        (RW)
 00AF           MAC1_CL1:     equ 0AFh          ; write = MAC 1 Clear Accum [also see ACC_DR2]
 00AF           ACC1_DR2:     equ MAC1_CL1     ; read =  MAC 1 Accumulator, byte 2        (RW)
 0000           
 0000           ;------------------------------------------------------
 0000           ;  System Status and Control Registers
 0000           ;
 0000           ;  Note: The following registers are mapped into both
 0000           ;        register bank 0 AND register bank 1.
 0000           ;------------------------------------------------------
 00F7           CPU_F:        equ 0F7h          ; CPU Flag Register Access                 (RO)
 0000                                              ; Use FLAG_ masks defined at top of file
 0000           
 00FE           CPU_SCR1:     equ 0FEh          ; CPU Status and Control Register #1       (#)
 0080           CPU_SCR1_IRESS:         equ 80h    ; MASK: Boot Phase Re-entry bit
 0010           CPU_SCR1_SLIMO:         equ 10h    ; MASK: Slow Main Oscillator Mode
 0008           CPU_SCR1_ECO_ALWD_WR:   equ 08h    ; MASK: flag, ECO allowed has been written
 0004           CPU_SCR1_ECO_ALLOWED:   equ 04h    ; MASK: ECO allowed to be enabled
 0001           CPU_SCR1_IRAMDIS:       equ 01h    ; MASK: Disable RAM initialization on WDR
 0000           
 00FF           CPU_SCR0:     equ 0FFh          ; CPU Status and Control Register #2       (#)
 0080           CPU_SCR0_GIE_MASK:      equ 80h    ; MASK: Global Interrupt Enable shadow
 0020           CPU_SCR0_WDRS_MASK:     equ 20h    ; MASK: Watch Dog Timer Reset
 0010           CPU_SCR0_PORS_MASK:     equ 10h    ; MASK: power-on reset bit PORS
 0008           CPU_SCR0_SLEEP_MASK:    equ 08h    ; MASK: Enable Sleep
 0001           CPU_SCR0_STOP_MASK:     equ 01h    ; MASK: Halt CPU bit
 0000           
 0000           
 0000           ;;=============================================================================
 0000           ;;      Register Space, Bank 1
 0000           ;;=============================================================================
 0000           
 0000           ;------------------------------------------------
 0000           ;  Port Registers
 0000           ;  Note: Also see this address range in Bank 0.
 0000           ;------------------------------------------------
 0000           ; Port 0
 0000           PRT0DM0:      equ 00h          ; Port 0 Drive Mode 0                      (RW)
 0001           PRT0DM1:      equ 01h          ; Port 0 Drive Mode 1                      (RW)
 0002           PRT0IC0:      equ 02h          ; Port 0 Interrupt Control 0               (RW)
 0003           PRT0IC1:      equ 03h          ; Port 0 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 1
 0004           PRT1DM0:      equ 04h          ; Port 1 Drive Mode 0                      (RW)
 0005           PRT1DM1:      equ 05h          ; Port 1 Drive Mode 1                      (RW)
 0006           PRT1IC0:      equ 06h          ; Port 1 Interrupt Control 0               (RW)
 0007           PRT1IC1:      equ 07h          ; Port 1 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 2
 0008           PRT2DM0:      equ 08h          ; Port 2 Drive Mode 0                      (RW)
 0009           PRT2DM1:      equ 09h          ; Port 2 Drive Mode 1                      (RW)
 000A           PRT2IC0:      equ 0Ah          ; Port 2 Interrupt Control 0               (RW)
 000B           PRT2IC1:      equ 0Bh          ; Port 2 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 3
 000C           PRT3DM0:      equ 0Ch          ; Port 3 Drive Mode 0                      (RW)
 000D           PRT3DM1:      equ 0Dh          ; Port 3 Drive Mode 1                      (RW)
 000E           PRT3IC0:      equ 0Eh          ; Port 3 Interrupt Control 0               (RW)
 000F           PRT3IC1:      equ 0Fh          ; Port 3 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 4
 0010           PRT4DM0:      equ 10h          ; Port 4 Drive Mode 0                      (RW)
 0011           PRT4DM1:      equ 11h          ; Port 4 Drive Mode 1                      (RW)
 0012           PRT4IC0:      equ 12h          ; Port 4 Interrupt Control 0               (RW)
 0013           PRT4IC1:      equ 13h          ; Port 4 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 5
 0014           PRT5DM0:      equ 14h          ; Port 5 Drive Mode 0                      (RW)
 0015           PRT5DM1:      equ 15h          ; Port 5 Drive Mode 1                      (RW)
 0016           PRT5IC0:      equ 16h          ; Port 5 Interrupt Control 0               (RW)
 0017           PRT5IC1:      equ 17h          ; Port 5 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 6
 0018           PRT6DM0:      equ 18h          ; Port 6 Drive Mode 0                      (RW)
 0019           PRT6DM1:      equ 19h          ; Port 6 Drive Mode 1                      (RW)
 001A           PRT6IC0:      equ 1Ah          ; Port 6 Interrupt Control 0               (RW)
 001B           PRT6IC1:      equ 1Bh          ; Port 6 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 7
 001C           PRT7DM0:      equ 1Ch          ; Port 7 Drive Mode 0                      (RW)
 001D           PRT7DM1:      equ 1Dh          ; Port 7 Drive Mode 1                      (RW)
 001E           PRT7IC0:      equ 1Eh          ; Port 7 Interrupt Control 0               (RW)
 001F           PRT7IC1:      equ 1Fh          ; Port 7 Interrupt Control 1               (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Digital PSoC(tm) block Registers
 0000           ;  Note: Also see this address range in Bank 0.
 0000           ;------------------------------------------------
 0000           
 0000           ; Digital PSoC block 00, Basic Type B
 0020           DBB00FN:      equ 20h          ; Function Register                        (RW)
 0021           DBB00IN:      equ 21h          ;    Input Register                        (RW)
 0022           DBB00OU:      equ 22h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 01, Basic Type B
 0024           DBB01FN:      equ 24h          ; Function Register                        (RW)
 0025           DBB01IN:      equ 25h          ;    Input Register                        (RW)
 0026           DBB01OU:      equ 26h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 02, Communications Type B
 0028           DCB02FN:      equ 28h          ; Function Register                        (RW)
 0029           DCB02IN:      equ 29h          ;    Input Register                        (RW)
 002A           DCB02OU:      equ 2Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 03, Communications Type B
 002C           DCB03FN:      equ 2Ch          ; Function Register                        (RW)
 002D           DCB03IN:      equ 2Dh          ;    Input Register                        (RW)
 002E           DCB03OU:      equ 2Eh          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 10, Basic Type B
 0030           DBB10FN:      equ 30h          ; Function Register                        (RW)
 0031           DBB10IN:      equ 31h          ;    Input Register                        (RW)
 0032           DBB10OU:      equ 32h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 11, Basic Type B
 0034           DBB11FN:      equ 34h          ; Function Register                        (RW)
 0035           DBB11IN:      equ 35h          ;    Input Register                        (RW)
 0036           DBB11OU:      equ 36h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 12, Communications Type B
 0038           DCB12FN:      equ 38h          ; Function Register                        (RW)
 0039           DCB12IN:      equ 39h          ;    Input Register                        (RW)
 003A           DCB12OU:      equ 3Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 13, Communications Type B
 003C           DCB13FN:      equ 3Ch          ; Function Register                        (RW)
 003D           DCB13IN:      equ 3Dh          ;    Input Register                        (RW)
 003E           DCB13OU:      equ 3Eh          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 20, Basic Type B
 0040           DBB20FN:      equ 40h          ; Function Register                        (RW)
 0041           DBB20IN:      equ 41h          ;    Input Register                        (RW)
 0042           DBB20OU:      equ 42h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 21, Basic Type B
 0044           DBB21FN:      equ 44h          ; Function Register                        (RW)
 0045           DBB21IN:      equ 45h          ;    Input Register                        (RW)
 0046           DBB21OU:      equ 46h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 22, Communications Type B
 0048           DCB22FN:      equ 48h          ; Function Register                        (RW)
 0049           DCB22IN:      equ 49h          ;    Input Register                        (RW)
 004A           DCB22OU:      equ 4Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 23, Communications Type B
 004C           DCB23FN:      equ 4Ch          ; Function Register                        (RW)
 004D           DCB23IN:      equ 4Dh          ;    Input Register                        (RW)
 004E           DCB23OU:      equ 4Eh          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 30, Basic Type B
 0050           DBB30FN:      equ 50h          ; Function Register                        (RW)
 0051           DBB30IN:      equ 51h          ;    Input Register                        (RW)
 0052           DBB30OU:      equ 52h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 31, Basic Type B
 0054           DBB31FN:      equ 54h          ; Function Register                        (RW)
 0055           DBB31IN:      equ 55h          ;    Input Register                        (RW)
 0056           DBB31OU:      equ 56h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 32, Communications Type B
 0058           DCB32FN:      equ 58h          ; Function Register                        (RW)
 0059           DCB32IN:      equ 59h          ;    Input Register                        (RW)
 005A           DCB32OU:      equ 5Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 33, Communications Type B
 005C           DCB33FN:      equ 5Ch          ; Function Register                        (RW)
 005D           DCB33IN:      equ 5Dh          ;    Input Register                        (RW)
 005E           DCB33OU:      equ 5Eh          ;   Output Register                        (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  System and Global Resource Registers
 0000           ;  Note: Also see this address range in Bank 0.
 0000           ;------------------------------------------------
 0000           
 0060           CLK_CR0:      equ 60h          ; Analog Column Clock Select Register 0    (RW)
 00C0           CLK_CR0_ACOLUMN_3:    equ 0C0h    ; MASK: Specify clock for analog cloumn
 0030           CLK_CR0_ACOLUMN_2:    equ 30h    ; MASK: Specify clock for analog cloumn
 000C           CLK_CR0_ACOLUMN_1:    equ 0Ch    ; MASK: Specify clock for analog cloumn
 0003           CLK_CR0_ACOLUMN_0:    equ 03h    ; MASK: Specify clock for analog cloumn
 0000           
 0061           CLK_CR1:      equ 61h          ; Analog Clock Source Select Register 1    (RW)
 0040           CLK_CR1_SHDIS:        equ 40h    ; MASK: Sample and Hold Disable (all Columns)
 0038           CLK_CR1_ACLK1:        equ 38h    ; MASK: Digital PSoC block for analog source
 0007           CLK_CR1_ACLK2:        equ 07h    ; MASK: Digital PSoC block for analog source
 0000           
 0062           ABF_CR0:      equ 62h          ; Analog Output Buffer Control Register 0  (RW)
 0080           ABF_CR0_ACOL1MUX:     equ 80h    ; MASK: Analog Column 1 Mux control
 0040           ABF_CR0_ACOL2MUX:     equ 40h    ; MASK: Analog Column 2 Mux control
 0020           ABF_CR0_ABUF1EN:      equ 20h    ; MASK: Enable ACol 1 analog buffer (P0[5])
 0010           ABF_CR0_ABUF2EN:      equ 10h    ; MASK: Enable ACol 2 analog buffer (P0[4])
 0008           ABF_CR0_ABUF0EN:      equ 08h    ; MASK: Enable ACol 0 analog buffer (P0[3])
 0004           ABF_CR0_ABUF3EN:      equ 04h    ; MASK: Enable ACol 3 analog buffer (P0[2])
 0002           ABF_CR0_BYPASS:       equ 02h    ; MASK: Bypass the analog buffers
 0001           ABF_CR0_PWR:          equ 01h    ; MASK: High power mode on all analog buffers
 0000           
 0063           AMD_CR0:      equ 63h          ; Analog Modulator Control Register 0      (RW)
 0070           AMD_CR0_AMOD2:        equ 70h    ; MASK: Modulation source for analog column 2
 0007           AMD_CR0_AMOD0:        equ 07h    ; MASK: Modulation source for analog column 1
 0000           
 0066           AMD_CR1:      equ 66h          ; Analog Modulator Control Register 1      (RW)
 0070           AMD_CR1_AMOD3:        equ 70h    ; MASK: Modulation ctrl for analog column 3
 0007           AMD_CR1_AMOD1:        equ 07h    ; MASK: Modulation ctrl for analog column 1
 0000           
 0067           ALT_CR0:      equ 67h          ; Analog Look Up Table (LUT) Register 0    (RW)
 00F0           ALT_CR0_LUT1:         equ 0F0h    ; MASK: Look up table 1 selection
 000F           ALT_CR0_LUT0:         equ 0Fh    ; MASK: Look up table 0 selection
 0000           
 0068           ALT_CR1:      equ 68h          ; Analog Look Up Table (LUT) Register 1    (RW)
 00F0           ALT_CR1_LUT3:         equ 0F0h    ; MASK: Look up table 3 selection
 000F           ALT_CR1_LUT2:         equ 0Fh    ; MASK: Look up table 2 selection
 0000           
 0069           CLK_CR2:      equ 69h          ; Analog Clock Source Control Register 2   (RW)
 0008           CLK_CR2_ACLK1R:       equ 08h    ; MASK: Analog Clock 1 selection range
 0001           CLK_CR2_ACLK0R:       equ 01h    ; MASK: Analog Clock 0 selection range
 0000           
 0000           ;------------------------------------------------
 0000           ;  Global Digital Interconnects
 0000           ;------------------------------------------------
 0000           
 00D0           GDI_O_IN:     equ 0D0h          ; Global Dig Interconnect Odd Inputs Reg   (RW)
 00D1           GDI_E_IN:     equ 0D1h          ; Global Dig Interconnect Even Inputs Reg  (RW)
 00D2           GDI_O_OU:     equ 0D2h          ; Global Dig Interconnect Odd Outputs Reg  (RW)
 00D3           GDI_E_OU:     equ 0D3h          ; Global Dig Interconnect Even Outputs Reg (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Clock and System Control Registers
 0000           ;------------------------------------------------
 0000           
 00DD           OSC_GO_EN:    equ 0DDh          ; Oscillator to Global Outputs Enable Register (RW)
 0080           OSC_GOEN_SLPINT:      equ 80h	 ; Enable Sleep Timer onto GOE[7]
 0040           OSC_GOEN_VC3:         equ 40h    ; Enable VC3 onto GOE[6]
 0020           OSC_GOEN_VC2:         equ 20h    ; Enable VC2 onto GOE[5]
 0010           OSC_GOEN_VC1:         equ 10h    ; Enable VC1 onto GOE[4]
 0008           OSC_GOEN_SYSCLKX2:    equ 08h    ; Enable 2X SysClk onto GOE[3]
 0004           OSC_GOEN_SYSCLK:      equ 04h    ; Enable 1X SysClk onto GOE[2]
 0002           OSC_GOEN_CLK24M:      equ 02h    ; Enable 24 MHz clock onto GOE[1]
 0001           OSC_GOEN_CLK32K:      equ 01h    ; Enable 32 kHz clock onto GOE[0]
 0000           
 00DE           OSC_CR4:      equ 0DEh          ; Oscillator Control Register 4            (RW)
 0003           OSC_CR4_VC3:          equ 03h    ; MASK: System VC3 Clock source
 0000           
 00DF           OSC_CR3:      equ 0DFh          ; Oscillator Control Register 3            (RW)
 0000           
 00E0           OSC_CR0:      equ 0E0h          ; System Oscillator Control Register 0     (RW)
 0080           OSC_CR0_32K_SELECT:   equ 80h    ; MASK: Enable/Disable External XTAL Osc
 0040           OSC_CR0_PLL_MODE:     equ 40h    ; MASK: Enable/Disable PLL
 0020           OSC_CR0_NO_BUZZ:      equ 20h    ; MASK: Bandgap always powered/BUZZ bandgap
 0018           OSC_CR0_SLEEP:        equ 18h    ; MASK: Set Sleep timer freq/period
 0000           OSC_CR0_SLEEP_512Hz:  equ 00h    ;     Set sleep bits for 1.95ms period
 0008           OSC_CR0_SLEEP_64Hz:   equ 08h    ;     Set sleep bits for 15.6ms period
 0010           OSC_CR0_SLEEP_8Hz:    equ 10h    ;     Set sleep bits for 125ms period
 0018           OSC_CR0_SLEEP_1Hz:    equ 18h    ;     Set sleep bits for 1 sec period
 0007           OSC_CR0_CPU:          equ 07h    ; MASK: Set CPU Frequency
 0000           OSC_CR0_CPU_3MHz:     equ 00h    ;     set CPU Freq bits for 3MHz Operation
 0001           OSC_CR0_CPU_6MHz:     equ 01h    ;     set CPU Freq bits for 6MHz Operation
 0002           OSC_CR0_CPU_12MHz:    equ 02h    ;     set CPU Freq bits for 12MHz Operation
 0003           OSC_CR0_CPU_24MHz:    equ 03h    ;     set CPU Freq bits for 24MHz Operation
 0004           OSC_CR0_CPU_1d5MHz:   equ 04h    ;     set CPU Freq bits for 1.5MHz Operation
 0005           OSC_CR0_CPU_750kHz:   equ 05h    ;     set CPU Freq bits for 750kHz Operation
 0006           OSC_CR0_CPU_187d5kHz: equ 06h    ;     set CPU Freq bits for 187.5kHz Operation
 0007           OSC_CR0_CPU_93d7kHz:  equ 07h    ;     set CPU Freq bits for 93.7kHz Operation
 0000           
 00E1           OSC_CR1:      equ 0E1h          ; System VC1/VC2 Divider Control Register  (RW)
 00F0           OSC_CR1_VC1:          equ 0F0h    ; MASK: System VC1 24MHz/External Clk divider
 000F           OSC_CR1_VC2:          equ 0Fh    ; MASK: System VC2 24MHz/External Clk divider
 0000           
 00E2           OSC_CR2:      equ 0E2h          ; Oscillator Control Register 2            (RW)
 0004           OSC_CR2_EXTCLKEN:     equ 04h    ; MASK: Enable/Disable External Clock
 0001           OSC_CR2_SYSCLKX2DIS:  equ 01h    ; MASK: Enable/Disable 48MHz clock source
 0000           
 00E3           VLT_CR:       equ 0E3h          ; Voltage Monitor Control Register         (RW)
 0080           VLT_CR_SMP:           equ 80h    ; MASK: Enable Switch Mode Pump
 0030           VLT_CR_PORLEV:        equ 30h    ; MASK: Mask for Power on Reset level control
 0000           VLT_CR_POR_LOW:       equ 00h    ;   Lowest  Precision Power-on Reset trip point
 0010           VLT_CR_POR_MID:       equ 10h    ;   Middle  Precision Power-on Reset trip point
 0020           VLT_CR_POR_HIGH:      equ 20h    ;   Highest Precision Power-on Reset trip point
 0008           VLT_CR_LVDTBEN:       equ 08h    ; MASK: Enable the CPU Throttle Back on LVD
 0007           VLT_CR_VM:            equ 07h    ; MASK: Mask for Voltage Monitor level setting
 0000           VLT_CR_3V0_POR:       equ 00h    ; -- deprecated symbols --
 0010           VLT_CR_4V5_POR:       equ 10h    ;    deprecated
 0020           VLT_CR_4V75_POR:      equ 20h    ;    deprecated
 0030           VLT_CR_DISABLE:       equ 30h    ;    deprecated
 0000           
 00E4           VLT_CMP:      equ 0E4h          ; Voltage Monitor Comparators Register     (R)
 0004           VLT_CMP_PUMP:         equ 04h    ; MASK: Vcc below SMP trip level
 0002           VLT_CMP_LVD:          equ 02h    ; MASK: Vcc below LVD trip level
 0001           VLT_CMP_PPOR:         equ 01h    ; MASK: Vcc below PPOR trip level
 0000           
 00E7           DEC_CR2:      equ 0E7h          ; Decimator Control Register 2             (RW)
 00E8           IMO_TR:       equ 0E8h          ; Internal Main Oscillator Trim Register   (W)
 00E9           ILO_TR:       equ 0E9h          ; Internal Low-speed Oscillator Trim       (W)
 00EA           BDG_TR:       equ 0EAh          ; Band Gap Trim Register                   (W)
 00EB           ECO_TR:       equ 0EBh          ; External Oscillator Trim Register        (W)
 0000           
 0000           ;;=============================================================================
 0000           ;;      M8C System Macros
 0000           ;;  These macros should be used when their functions are needed.
 0000           ;;=============================================================================
 0000           
 0000           ;----------------------------------------------------
 0000           ;  Swapping Register Banks
 0000           ;----------------------------------------------------
 0000               macro M8C_SetBank0
 0000               and   F, ~FLAG_XIO_MASK
 0000               macro M8C_SetBank1
 0000               or    F, FLAG_XIO_MASK
 0000               macro M8C_EnableGInt
 0000               or    F, FLAG_GLOBAL_IE
 0000               macro M8C_DisableGInt
 0000               and   F, ~FLAG_GLOBAL_IE
 0000               macro M8C_DisableIntMask
 0000               and   reg[@0], ~@1              ; disable specified interrupt enable bit
 0000               macro M8C_EnableIntMask
 0000               or    reg[@0], @1               ; enable specified interrupt enable bit
 0000               macro M8C_ClearIntFlag
 0000               mov   reg[@0], ~@1              ; clear specified interrupt enable bit
 0000               macro M8C_EnableWatchDog
 0000               and   reg[CPU_SCR0], ~CPU_SCR0_PORS_MASK
 0000               macro M8C_ClearWDT
 0000               mov   reg[RES_WDT], 00h
 0000               macro M8C_ClearWDTAndSleep
 0000               mov   reg[RES_WDT], 38h
 0000               macro M8C_Stall
 0000               or    reg[ASY_CR], ASY_CR_SYNCEN
 0000               macro M8C_Unstall
 0000               and   reg[ASY_CR], ~ASY_CR_SYNCEN
 0000               macro M8C_Sleep
 0000               or    reg[CPU_SCR0], CPU_SCR0_SLEEP_MASK
 0000               ; The next instruction to be executed depends on the state of the
 0000               ; various interrupt enable bits. If some interrupts are enabled
 0000               ; and the global interrupts are disabled, the next instruction will
 0000               ; be the one that follows the invocation of this macro. If global
 0000               ; interrupts are also enabled then the next instruction will be
 0000               ; from the interrupt vector table. If no interrupts are enabled
 0000               ; then the CPU sleeps forever.
 0000               macro M8C_Stop
 0000               ; In general, you probably don't want to do this, but here's how:
 0000               or    reg[CPU_SCR0], CPU_SCR0_STOP_MASK
 0000               ; Next instruction to be executed is located in the interrupt
 0000               ; vector table entry for Power-On Reset.
 0000               macro M8C_Reset
 0000               ; Restore CPU to the power-on reset state.
 0000               mov A, 0
 0000               SSC
 0000               ; Next non-supervisor instruction will be at interrupt vector 0.
 0000               macro Suspend_CodeCompressor
 0000               or   F, 0
 0000               macro Resume_CodeCompressor
 0000               add  SP, 0
 0008           LCD_Port:                              equ   PRT2DR
 0008           LCD_PortMode0:                         equ   PRT2DM0
 0009           LCD_PortMode1:                         equ   PRT2DM1
 0000           
 0000           LCD_BARGRAPH_ENABLE:                   equ   0
 0000           
 0000           
 0000           ;-----------------------------------------------
 0000           ;  Constants for LCD
 0000           ;-----------------------------------------------
 0000           ; LCD commands
 0000           
 000C           LCD_DISP_ON:                      equ   0Ch
 0008           LCD_DISP_OFF:                     equ   08h
 000E           LCD_CURSOR_ON:                    equ   0Eh
 000C           LCD_CURSOR_OFF:                   equ   0Ch
 000F           LCD_CURSOR_BLINK:                 equ   0Fh
 000D           LCD_CURSOR_WINK:                  equ   0Dh
 0010           LCD_CURSOR_SH_LEFT:               equ   10h
 0014           LCD_CURSOR_SH_RIGHT:              equ   14h
 0002           LCD_CURSOR_HOME:                  equ   02h
 0004           LCD_CURSOR_LEFT:                  equ   04h
 0006           LCD_CURSOR_RIGHT:                 equ   06h
 0001           LCD_DISP_CLEAR_HOME:              equ   01h
 0000           
 0000           LCD_SOLID_BG:                     equ   00h
 0001           LCD_LINE_BG:                      equ   01h
 0000           
 007F           LCD_PORT_MASK:                    equ   7Fh
 0000           
 0000           ICE_PORT_SYNC:     equ   0   ; This flag must be set to one to work around
 0000                                        ; the async read issue with the ICE with the 
 0000                                        ; 25/26xxx family of devices.  It will help
 0000                                        ; to eliminate "Invalid memory reference" errors.
 0000                                        ; It is not required when running without the ICE
 0000           							 ; or when using any other family besides the 
 0000           							 ; 25/26xxx family. If not using the ICE, this flag 
 0000           							 ; may be set to 0.
 0000           
 0000           ; end of file LCD.inc
 0000           
 00C0           FLAG_PGMODE_MASK:  equ 0C0h     ; Paging control for > 256 bytes of RAM
 0000           FLAG_PGMODE_0:     equ 00h       ; Direct to Page 0,      indexed to Page 0
 0040           FLAG_PGMODE_1:     equ 40h       ; Direct to Page 0,      indexed to STK_PP page
 0080           FLAG_PGMODE_2:     equ 80h       ; Direct to CUR_PP page, indexed to IDX_PP page
 00C0           FLAG_PGMODE_3:     equ 0C0h       ; Direct to CUR_PP page, indexed to STK_PP page
 0000           FLAG_PGMODE_00b:   equ 00h       ; Same as PGMODE_0
 0040           FLAG_PGMODE_01b:   equ 40h       ; Same as PGMODE_1
 0080           FLAG_PGMODE_10b:   equ 80h       ; Same as PGMODE_2
 00C0           FLAG_PGMODE_11b:   equ 0C0h       ; Same as PGMODE_3
 0010           FLAG_XIO_MASK:     equ 10h     ; I/O Bank select for register space
 0008           FLAG_SUPER:        equ 08h     ; Supervisor Mode
 0004           FLAG_CARRY:        equ 04h     ; Carry Condition Flag
 0002           FLAG_ZERO:         equ 02h     ; Zero  Condition Flag
 0001           FLAG_GLOBAL_IE:    equ 01h     ; Glogal Interrupt Enable
 0000           
 0000           
 0000           ;;=============================================================================
 0000           ;;      Register Space, Bank 0
 0000           ;;=============================================================================
 0000           
 0000           ;------------------------------------------------
 0000           ;  Port Registers
 0000           ;  Note: Also see this address range in Bank 1.
 0000           ;------------------------------------------------
 0000           ; Port 0
 0000           PRT0DR:       equ 00h          ; Port 0 Data Register                     (RW)
 0001           PRT0IE:       equ 01h          ; Port 0 Interrupt Enable Register         (RW)
 0002           PRT0GS:       equ 02h          ; Port 0 Global Select Register            (RW)
 0003           PRT0DM2:      equ 03h          ; Port 0 Drive Mode 2                      (RW)
 0000           ; Port 1
 0004           PRT1DR:       equ 04h          ; Port 1 Data Register                     (RW)
 0005           PRT1IE:       equ 05h          ; Port 1 Interrupt Enable Register         (RW)
 0006           PRT1GS:       equ 06h          ; Port 1 Global Select Register            (RW)
 0007           PRT1DM2:      equ 07h          ; Port 1 Drive Mode 2                      (RW)
 0000           ; Port 2
 0008           PRT2DR:       equ 08h          ; Port 2 Data Register                     (RW)
 0009           PRT2IE:       equ 09h          ; Port 2 Interrupt Enable Register         (RW)
 000A           PRT2GS:       equ 0Ah          ; Port 2 Global Select Register            (RW)
 000B           PRT2DM2:      equ 0Bh          ; Port 2 Drive Mode 2                      (RW)
 0000           ; Port 3
 000C           PRT3DR:       equ 0Ch          ; Port 3 Data Register                     (RW)
 000D           PRT3IE:       equ 0Dh          ; Port 3 Interrupt Enable Register         (RW)
 000E           PRT3GS:       equ 0Eh          ; Port 3 Global Select Register            (RW)
 000F           PRT3DM2:      equ 0Fh          ; Port 3 Drive Mode 2                      (RW)
 0000           ; Port 4
 0010           PRT4DR:       equ 10h          ; Port 4 Data Register                     (RW)
 0011           PRT4IE:       equ 11h          ; Port 4 Interrupt Enable Register         (RW)
 0012           PRT4GS:       equ 12h          ; Port 4 Global Select Register            (RW)
 0013           PRT4DM2:      equ 13h          ; Port 4 Drive Mode 2                      (RW)
 0000           ; Port 5
 0014           PRT5DR:       equ 14h          ; Port 5 Data Register                     (RW)
 0015           PRT5IE:       equ 15h          ; Port 5 Interrupt Enable Register         (RW)
 0016           PRT5GS:       equ 16h          ; Port 5 Global Select Register            (RW)
 0017           PRT5DM2:      equ 17h          ; Port 5 Drive Mode 2                      (RW)
 0000           ; Port 6
 0018           PRT6DR:       equ 18h          ; Port 6 Data Register                     (RW)
 0019           PRT6IE:       equ 19h          ; Port 6 Interrupt Enable Register         (RW)
 001A           PRT6GS:       equ 1Ah          ; Port 6 Global Select Register            (RW)
 001B           PRT6DM2:      equ 1Bh          ; Port 6 Drive Mode 2                      (RW)
 0000           ; Port 7
 001C           PRT7DR:       equ 1Ch          ; Port 7 Data Register                     (RW)
 001D           PRT7IE:       equ 1Dh          ; Port 7 Interrupt Enable Register         (RW)
 001E           PRT7GS:       equ 1Eh          ; Port 7 Global Select Register            (RW)
 001F           PRT7DM2:      equ 1Fh          ; Port 7 Drive Mode 2                      (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Digital PSoC(tm) block Registers
 0000           ;  Note: Also see this address range in Bank 1.
 0000           ;------------------------------------------------
 0000           ; Digital PSoC block 00, Basic Type B
 0020           DBB00DR0:     equ 20h          ; data register 0                          (#)
 0021           DBB00DR1:     equ 21h          ; data register 1                          (W)
 0022           DBB00DR2:     equ 22h          ; data register 2                          (RW)
 0023           DBB00CR0:     equ 23h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 01, Basic Type B
 0024           DBB01DR0:     equ 24h          ; data register 0                          (#)
 0025           DBB01DR1:     equ 25h          ; data register 1                          (W)
 0026           DBB01DR2:     equ 26h          ; data register 2                          (RW)
 0027           DBB01CR0:     equ 27h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 02, Communications Type B
 0028           DCB02DR0:     equ 28h          ; data register 0                          (#)
 0029           DCB02DR1:     equ 29h          ; data register 1                          (W)
 002A           DCB02DR2:     equ 2Ah          ; data register 2                          (RW)
 002B           DCB02CR0:     equ 2Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 03, Communications Type B
 002C           DCB03DR0:     equ 2Ch          ; data register 0                          (#)
 002D           DCB03DR1:     equ 2Dh          ; data register 1                          (W)
 002E           DCB03DR2:     equ 2Eh          ; data register 2                          (RW)
 002F           DCB03CR0:     equ 2Fh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 10, Basic Type B
 0030           DBB10DR0:     equ 30h          ; data register 0                          (#)
 0031           DBB10DR1:     equ 31h          ; data register 1                          (W)
 0032           DBB10DR2:     equ 32h          ; data register 2                          (RW)
 0033           DBB10CR0:     equ 33h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 11, Basic Type B
 0034           DBB11DR0:     equ 34h          ; data register 0                          (#)
 0035           DBB11DR1:     equ 35h          ; data register 1                          (W)
 0036           DBB11DR2:     equ 36h          ; data register 2                          (RW)
 0037           DBB11CR0:     equ 37h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 12, Communications Type B
 0038           DCB12DR0:     equ 38h          ; data register 0                          (#)
 0039           DCB12DR1:     equ 39h          ; data register 1                          (W)
 003A           DCB12DR2:     equ 3Ah          ; data register 2                          (RW)
 003B           DCB12CR0:     equ 3Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 13, Communications Type B
 003C           DCB13DR0:     equ 3Ch          ; data register 0                          (#)
 003D           DCB13DR1:     equ 3Dh          ; data register 1                          (W)
 003E           DCB13DR2:     equ 3Eh          ; data register 2                          (RW)
 003F           DCB13CR0:     equ 3Fh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 20, Basic Type B
 0040           DBB20DR0:     equ 40h          ; data register 0                          (#)
 0041           DBB20DR1:     equ 41h          ; data register 1                          (W)
 0042           DBB20DR2:     equ 42h          ; data register 2                          (RW)
 0043           DBB20CR0:     equ 43h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 21, Basic Type B
 0044           DBB21DR0:     equ 44h          ; data register 0                          (#)
 0045           DBB21DR1:     equ 45h          ; data register 1                          (W)
 0046           DBB21DR2:     equ 46h          ; data register 2                          (RW)
 0047           DBB21CR0:     equ 47h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 22, Communications Type B
 0048           DCB22DR0:     equ 48h          ; data register 0                          (#)
 0049           DCB22DR1:     equ 49h          ; data register 1                          (W)
 004A           DCB22DR2:     equ 4Ah          ; data register 2                          (RW)
 004B           DCB22CR0:     equ 4Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 23, Communications Type B
 004C           DCB23DR0:     equ 4Ch          ; data register 0                          (#)
 004D           DCB23DR1:     equ 4Dh          ; data register 1                          (W)
 004E           DCB23DR2:     equ 4Eh          ; data register 2                          (RW)
 004F           DCB23CR0:     equ 4Fh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 30, Basic Type B
 0050           DBB30DR0:     equ 50h          ; data register 0                          (#)
 0051           DBB30DR1:     equ 51h          ; data register 1                          (W)
 0052           DBB30DR2:     equ 52h          ; data register 2                          (RW)
 0053           DBB30CR0:     equ 53h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 31, Basic Type B
 0054           DBB31DR0:     equ 54h          ; data register 0                          (#)
 0055           DBB31DR1:     equ 55h          ; data register 1                          (W)
 0056           DBB31DR2:     equ 56h          ; data register 2                          (RW)
 0057           DBB31CR0:     equ 57h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 32, Communications Type B
 0058           DCB32DR0:     equ 58h          ; data register 0                          (#)
 0059           DCB32DR1:     equ 59h          ; data register 1                          (W)
 005A           DCB32DR2:     equ 5Ah          ; data register 2                          (RW)
 005B           DCB32CR0:     equ 5Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 33, Communications Type B
 005C           DCB33DR0:     equ 5Ch          ; data register 0                          (#)
 005D           DCB33DR1:     equ 5Dh          ; data register 1                          (W)
 005E           DCB33DR2:     equ 5Eh          ; data register 2                          (RW)
 005F           DCB33CR0:     equ 5Fh          ; control & status register 0              (#)
 0000           
 0000           ;-------------------------------------
 0000           ;  Analog Resource Control Registers
 0000           ;-------------------------------------
 0060           AMX_IN:       equ 60h          ; Analog Input Multiplexor Control         (RW)
 00C0           AMX_IN_ACI3:          equ 0C0h    ; MASK: column 3 input mux
 0030           AMX_IN_ACI2:          equ 30h    ; MASK: column 2 input mux
 000C           AMX_IN_ACI1:          equ 0Ch    ; MASK: column 1 input mux
 0003           AMX_IN_ACI0:          equ 03h    ; MASK: column 0 input mux
 0000           
 0063           ARF_CR:       equ 63h          ; Analog Reference Control Register        (RW)
 0040           ARF_CR_HBE:           equ 40h    ; MASK: Bias level control
 0038           ARF_CR_REF:           equ 38h    ; MASK: Analog Reference controls
 0007           ARF_CR_REFPWR:        equ 07h    ; MASK: Analog Reference power
 0004           ARF_CR_APWR:          equ 04h    ; MASK: use deprecated; see datasheet
 0003           ARF_CR_SCPWR:         equ 03h    ; MASK: Switched Cap block power
 0000           
 0064           CMP_CR0:      equ 64h          ; Analog Comparator Bus 0 Register         (#)
 0080           CMP_CR0_COMP3:        equ 80h    ; MASK: Column 3 comparator state        (R)
 0040           CMP_CR0_COMP2:        equ 40h    ; MASK: Column 2 comparator state        (R)
 0020           CMP_CR0_COMP1:        equ 20h    ; MASK: Column 1 comparator state        (R)
 0010           CMP_CR0_COMP0:        equ 10h    ; MASK: Column 0 comparator state        (R)
 0008           CMP_CR0_AINT3:        equ 08h    ; MASK: Column 3 interrupt source        (RW)
 0004           CMP_CR0_AINT2:        equ 04h    ; MASK: Column 2 interrupt source        (RW)
 0002           CMP_CR0_AINT1:        equ 02h    ; MASK: Column 1 interrupt source        (RW)
 0001           CMP_CR0_AINT0:        equ 01h    ; MASK: Column 0 interrupt source        (RW)
 0000           
 0065           ASY_CR:       equ 65h          ; Analog Synchronizaton Control            (#)
 0070           ASY_CR_SARCOUNT:      equ 70h    ; MASK: SAR support: resolution count    (W)
 0008           ASY_CR_SARSIGN:       equ 08h    ; MASK: SAR support: sign                (RW)
 0006           ASY_CR_SARCOL:        equ 06h    ; MASK: SAR support: column spec         (RW)
 0001           ASY_CR_SYNCEN:        equ 01h    ; MASK: Stall bit                        (RW)
 0000           
 0066           CMP_CR1:      equ 66h          ; Analog Comparator Bus 1 Register         (RW)
 0080           CMP_CR1_ASYNCH3:      equ 80h    ; MASK: Column 3 comparator bus synch
 0040           CMP_CR1_ASYNCH2:      equ 40h    ; MASK: Column 2 comparator bus synch
 0020           CMP_CR1_ASYNCH1:      equ 20h    ; MASK: Column 1 comparator bus synch
 0010           CMP_CR1_ASYNCH0:      equ 10h    ; MASK: Column 0 comparator bus synch
 0000           
 0000           ;---------------------------------------------------
 0000           ;  Analog PSoC block Registers
 0000           ;
 0000           ;  Note: the following registers are mapped into
 0000           ;  both register bank 0 AND register bank 1.
 0000           ;---------------------------------------------------
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 0
 0070           ACB00CR3:     equ 70h          ; Control register 3                       (RW)
 0071           ACB00CR0:     equ 71h          ; Control register 0                       (RW)
 0072           ACB00CR1:     equ 72h          ; Control register 1                       (RW)
 0073           ACB00CR2:     equ 73h          ; Control register 2                       (RW)
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 1
 0074           ACB01CR3:     equ 74h          ; Control register 3                       (RW)
 0075           ACB01CR0:     equ 75h          ; Control register 0                       (RW)
 0076           ACB01CR1:     equ 76h          ; Control register 1                       (RW)
 0077           ACB01CR2:     equ 77h          ; Control register 2                       (RW)
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 2
 0078           ACB02CR3:     equ 78h          ; Control register 3                       (RW)
 0079           ACB02CR0:     equ 79h          ; Control register 0                       (RW)
 007A           ACB02CR1:     equ 7Ah          ; Control register 1                       (RW)
 007B           ACB02CR2:     equ 7Bh          ; Control register 2                       (RW)
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 3
 007C           ACB03CR3:     equ 7Ch          ; Control register 3                       (RW)
 007D           ACB03CR0:     equ 7Dh          ; Control register 0                       (RW)
 007E           ACB03CR1:     equ 7Eh          ; Control register 1                       (RW)
 007F           ACB03CR2:     equ 7Fh          ; Control register 2                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 1 Col 0
 0080           ASC10CR0:     equ 80h          ; Control register 0                       (RW)
 0081           ASC10CR1:     equ 81h          ; Control register 1                       (RW)
 0082           ASC10CR2:     equ 82h          ; Control register 2                       (RW)
 0083           ASC10CR3:     equ 83h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 1 Col 1
 0084           ASD11CR0:     equ 84h          ; Control register 0                       (RW)
 0085           ASD11CR1:     equ 85h          ; Control register 1                       (RW)
 0086           ASD11CR2:     equ 86h          ; Control register 2                       (RW)
 0087           ASD11CR3:     equ 87h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 1 Col 2
 0088           ASC12CR0:     equ 88h          ; Control register 0                       (RW)
 0089           ASC12CR1:     equ 89h          ; Control register 1                       (RW)
 008A           ASC12CR2:     equ 8Ah          ; Control register 2                       (RW)
 008B           ASC12CR3:     equ 8Bh          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 1 Col 3
 008C           ASD13CR0:     equ 8Ch          ; Control register 0                       (RW)
 008D           ASD13CR1:     equ 8Dh          ; Control register 1                       (RW)
 008E           ASD13CR2:     equ 8Eh          ; Control register 2                       (RW)
 008F           ASD13CR3:     equ 8Fh          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 2 Col 0
 0090           ASD20CR0:     equ 90h          ; Control register 0                       (RW)
 0091           ASD20CR1:     equ 91h          ; Control register 1                       (RW)
 0092           ASD20CR2:     equ 92h          ; Control register 2                       (RW)
 0093           ASD20CR3:     equ 93h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 2 Col 1
 0094           ASC21CR0:     equ 94h          ; Control register 0                       (RW)
 0095           ASC21CR1:     equ 95h          ; Control register 1                       (RW)
 0096           ASC21CR2:     equ 96h          ; Control register 2                       (RW)
 0097           ASC21CR3:     equ 97h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 2 Col 2
 0098           ASD22CR0:     equ 98h          ; Control register 0                       (RW)
 0099           ASD22CR1:     equ 99h          ; Control register 1                       (RW)
 009A           ASD22CR2:     equ 9Ah          ; Control register 2                       (RW)
 009B           ASD22CR3:     equ 9Bh          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 2 Col 3
 009C           ASC23CR0:     equ 9Ch          ; Control register 0                       (RW)
 009D           ASC23CR1:     equ 9Dh          ; Control register 1                       (RW)
 009E           ASC23CR2:     equ 9Eh          ; Control register 2                       (RW)
 009F           ASC23CR3:     equ 9Fh          ; Control register 3                       (RW)
 0000           
 0000           ;-----------------------------------------------
 0000           ;  Global General Purpose Data Registers
 0000           ;-----------------------------------------------
 006C           TMP0_DR:      equ 6Ch          ; deprecated do not use
 006D           TMP1_DR:      equ 6Dh          ; deprecated do not use
 006E           TMP2_DR:      equ 6Eh          ; deprecated do not use
 006F           TMP3_DR:      equ 6Fh          ; deprecated do not use
 0000           
 006C           TMP_DR0:      equ 6Ch          ; Temporary Data Register 0                (RW)
 006D           TMP_DR1:      equ 6Dh          ; Temporary Data Register 1                (RW)
 006E           TMP_DR2:      equ 6Eh          ; Temporary Data Register 2                (RW)
 006F           TMP_DR3:      equ 6Fh          ; Temporary Data Register 3                (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Row Digital Interconnects
 0000           ;
 0000           ;  Note: the following registers are mapped into
 0000           ;  both register bank 0 AND register bank 1.
 0000           ;------------------------------------------------
 0000           
 00B0           RDI0RI:       equ 0B0h          ; Row Digital Interconnect Row 0 Input Reg (RW)
 00B1           RDI0SYN:      equ 0B1h          ; Row Digital Interconnect Row 0 Sync Reg  (RW)
 00B2           RDI0IS:       equ 0B2h          ; Row 0 Input Select Register              (RW)
 00B3           RDI0LT0:      equ 0B3h          ; Row 0 Look Up Table Register 0           (RW)
 00B4           RDI0LT1:      equ 0B4h          ; Row 0 Look Up Table Register 1           (RW)
 00B5           RDI0RO0:      equ 0B5h          ; Row 0 Output Register 0                  (RW)
 00B6           RDI0RO1:      equ 0B6h          ; Row 0 Output Register 1                  (RW)
 0000           
 00B8           RDI1RI:       equ 0B8h          ; Row Digital Interconnect Row 1 Input Reg (RW)
 00B9           RDI1SYN:      equ 0B9h          ; Row Digital Interconnect Row 1 Sync Reg  (RW)
 00BA           RDI1IS:       equ 0BAh          ; Row 1 Input Select Register              (RW)
 00BB           RDI1LT0:      equ 0BBh          ; Row 1 Look Up Table Register 0           (RW)
 00BC           RDI1LT1:      equ 0BCh          ; Row 1 Look Up Table Register 1           (RW)
 00BD           RDI1RO0:      equ 0BDh          ; Row 1 Output Register 0                  (RW)
 00BE           RDI1RO1:      equ 0BEh          ; Row 1 Output Register 1                  (RW)
 0000           
 00C0           RDI2RI:       equ 0C0h          ; Row Digital Interconnect Row 2 Input Reg (RW)
 00C1           RDI2SYN:      equ 0C1h          ; Row Digital Interconnect Row 2 Sync Reg  (RW)
 00C2           RDI2IS:       equ 0C2h          ; Row 2 Input Select Register              (RW)
 00C3           RDI2LT0:      equ 0C3h          ; Row 2 Look Up Table Register 0           (RW)
 00C4           RDI2LT1:      equ 0C4h          ; Row 2 Look Up Table Register 1           (RW)
 00C5           RDI2RO0:      equ 0C5h          ; Row 2 Output Register 0                  (RW)
 00C6           RDI2RO1:      equ 0C6h          ; Row 2 Output Register 1                  (RW)
 0000           
 00C8           RDI3RI:       equ 0C8h          ; Row Digital Interconnect Row 3 Input Reg (RW)
 00C9           RDI3SYN:      equ 0C9h          ; Row Digital Interconnect Row 3 Sync Reg  (RW)
 00CA           RDI3IS:       equ 0CAh          ; Row 3 Input Select Register              (RW)
 00CB           RDI3LT0:      equ 0CBh          ; Row 3 Look Up Table Register 0           (RW)
 00CC           RDI3LT1:      equ 0CCh          ; Row 3 Look Up Table Register 1           (RW)
 00CD           RDI3RO0:      equ 0CDh          ; Row 3 Output Register 0                  (RW)
 00CE           RDI3RO1:      equ 0CEh          ; Row 3 Output Register 1                  (RW)
 0000           
 0000           ;-----------------------------------------------
 0000           ;  Ram Page Pointers
 0000           ;-----------------------------------------------
 00D0           CUR_PP:      equ 0D0h           ; Current   Page Pointer
 00D1           STK_PP:      equ 0D1h           ; Stack     Page Pointer
 00D3           IDX_PP:      equ 0D3h           ; Index     Page Pointer
 00D4           MVR_PP:      equ 0D4h           ; MVI Read  Page Pointer
 00D5           MVW_PP:      equ 0D5h           ; MVI Write Page Pointer
 0000           
 0000           ;------------------------------------------------
 0000           ;  I2C Configuration Registers
 0000           ;------------------------------------------------
 00D6           I2C_CFG:      equ 0D6h          ; I2C Configuration Register               (RW)
 0040           I2C_CFG_PINSEL:         equ 40h  ; MASK: Select P1[0] and P1[1] for I2C
 0020           I2C_CFG_BUSERR_IE:      equ 20h  ; MASK: Enable interrupt on Bus Error
 0010           I2C_CFG_STOP_IE:        equ 10h  ; MASK: Enable interrupt on Stop
 0000           I2C_CFG_CLK_RATE_100K:  equ 00h  ; MASK: I2C clock set at 100K
 0004           I2C_CFG_CLK_RATE_400K:  equ 04h  ; MASK: I2C clock set at 400K
 0008           I2C_CFG_CLK_RATE_50K:   equ 08h  ; MASK: I2C clock set at 50K
 000C           I2C_CFG_CLK_RATE_1M6:   equ 0Ch  ; MASK: I2C clock set at 1.6M
 000C           I2C_CFG_CLK_RATE:       equ 0Ch  ; MASK: I2C clock rate setting mask
 0002           I2C_CFG_PSELECT_MASTER: equ 02h  ; MASK: Enable I2C Master
 0001           I2C_CFG_PSELECT_SLAVE:  equ 01h  ; MASK: Enable I2C Slave
 0000           
 00D7           I2C_SCR:      equ 0D7h          ; I2C Status and Control Register          (#)
 0080           I2C_SCR_BUSERR:        equ 80h   ; MASK: I2C Bus Error detected           (RC)
 0040           I2C_SCR_LOSTARB:       equ 40h   ; MASK: I2C Arbitration lost             (RC)
 0020           I2C_SCR_STOP:          equ 20h   ; MASK: I2C Stop detected                (RC)
 0010           I2C_SCR_ACK:           equ 10h   ; MASK: ACK the last byte                (RW)
 0008           I2C_SCR_ADDR:          equ 08h   ; MASK: Address rcv'd is Slave address   (RC)
 0004           I2C_SCR_XMIT:          equ 04h   ; MASK: Set transfer to tranmit mode     (RW)
 0002           I2C_SCR_LRB:           equ 02h   ; MASK: Last recieved bit                (RC)
 0001           I2C_SCR_BYTECOMPLETE:  equ 01h   ; MASK: Transfer of byte complete        (RC)
 0000           
 00D8           I2C_DR:       equ 0D8h          ; I2C Data Register                        (RW)
 0000           
 00D9           I2C_MSCR:     equ 0D9h          ; I2C Master Status and Control Register   (#)
 0008           I2C_MSCR_BUSY:         equ 08h   ; MASK: I2C Busy (Start detected)        (R)
 0004           I2C_MSCR_MODE:         equ 04h   ; MASK: Start has been generated         (R)
 0002           I2C_MSCR_RESTART:      equ 02h   ; MASK: Generate a Restart condition     (RW)
 0001           I2C_MSCR_START:        equ 01h   ; MASK: Generate a Start condition       (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  System and Global Resource Registers
 0000           ;------------------------------------------------
 00DA           INT_CLR0:     equ 0DAh          ; Interrupt Clear Register 0               (RW)
 0000                                          ; Use INT_MSK0 bit field masks
 00DB           INT_CLR1:     equ 0DBh          ; Interrupt Clear Register 1               (RW)
 0000                                          ; Use INT_MSK1 bit field masks
 00DC           INT_CLR2:     equ 0DCh          ; Interrupt Clear Register 2               (RW)
 0000                                          ; Use INT_MSK2 bit field masks
 00DD           INT_CLR3:     equ 0DDh          ; Interrupt Clear Register 3               (RW)
 0000                                          ; Use INT_MSK3 bit field masks
 0000           
 00DE           INT_MSK3:     equ 0DEh          ; I2C and Software Mask Register           (RW)
 0080           INT_MSK3_ENSWINT:          equ 80h ; MASK: enable/disable SW interrupt
 0001           INT_MSK3_I2C:              equ 01h ; MASK: enable/disable I2C interrupt
 0000           
 00DF           INT_MSK2:     equ 0DFh          ; Digital PSoC block Mask Register         (RW)
 0080           INT_MSK2_DCB33:            equ 80h ; MASK: enable/disable DCB33 block interrupt
 0040           INT_MSK2_DCB32:            equ 40h ; MASK: enable/disable DCB32 block interrupt
 0020           INT_MSK2_DBB31:            equ 20h ; MASK: enable/disable DBB31 block interrupt
 0010           INT_MSK2_DBB30:            equ 10h ; MASK: enable/disable DBB30 block interrupt
 0008           INT_MSK2_DCB23:            equ 08h ; MASK: enable/disable DCB23 block interrupt
 0004           INT_MSK2_DCB22:            equ 04h ; MASK: enable/disable DCB22 block interrupt
 0002           INT_MSK2_DBB21:            equ 02h ; MASK: enable/disable DBB21 block interrupt
 0001           INT_MSK2_DBB20:            equ 01h ; MASK: enable/disable DBB20 block interrupt
 0000           
 00E0           INT_MSK0:     equ 0E0h          ; General Interrupt Mask Register          (RW)
 0080           INT_MSK0_VC3:              equ 80h ; MASK: enable/disable VC3 interrupt
 0040           INT_MSK0_SLEEP:            equ 40h ; MASK: enable/disable sleep interrupt
 0020           INT_MSK0_GPIO:             equ 20h ; MASK: enable/disable GPIO  interrupt
 0010           INT_MSK0_ACOLUMN_3:        equ 10h ; MASK: enable/disable Analog col 3 interrupt
 0008           INT_MSK0_ACOLUMN_2:        equ 08h ; MASK: enable/disable Analog col 2 interrupt
 0004           INT_MSK0_ACOLUMN_1:        equ 04h ; MASK: enable/disable Analog col 1 interrupt
 0002           INT_MSK0_ACOLUMN_0:        equ 02h ; MASK: enable/disable Analog col 0 interrupt
 0001           INT_MSK0_VOLTAGE_MONITOR:  equ 01h ; MASK: enable/disable Volts interrupt
 0000           
 00E1           INT_MSK1:     equ 0E1h          ; Digital PSoC block Mask Register         (RW)
 0080           INT_MSK1_DCB13:            equ 80h ; MASK: enable/disable DCB13 block interrupt
 0040           INT_MSK1_DCB12:            equ 40h ; MASK: enable/disable DCB12 block interrupt
 0020           INT_MSK1_DBB11:            equ 20h ; MASK: enable/disable DBB11 block interrupt
 0010           INT_MSK1_DBB10:            equ 10h ; MASK: enable/disable DBB10 block interrupt
 0008           INT_MSK1_DCB03:            equ 08h ; MASK: enable/disable DCB03 block interrupt
 0004           INT_MSK1_DCB02:            equ 04h ; MASK: enable/disable DCB02 block interrupt
 0002           INT_MSK1_DBB01:            equ 02h ; MASK: enable/disable DBB01 block interrupt
 0001           INT_MSK1_DBB00:            equ 01h ; MASK: enable/disable DBB00 block interrupt
 0000           
 00E2           INT_VC:       equ 0E2h          ; Interrupt vector register                (RC)
 00E3           RES_WDT:      equ 0E3h          ; Watch Dog Timer Register                 (W)
 0000           
 0000           ; DECIMATOR Registers
 00E4           DEC_DH:       equ 0E4h          ; Data Register (high byte)                (RC)
 00E5           DEC_DL:       equ 0E5h          ; Data Register ( low byte)                (RC)
 00E6           DEC_CR0:      equ 0E6h          ; Data Control Register 0                  (RW)
 00E7           DEC_CR1:      equ 0E7h          ; Data Control Register 1                  (RW)
 0000                                          ; Also see DEC_CR2 in bank 1
 0000           
 0000           ; Multiplier and MAC (Multiply/Accumulate) Unit
 0000           //   Compatibility Set: Maps onto MAC0
 00E8           MUL_X:        equ 0E8h          ; Multiplier X Register (write)            (W)
 00E9           MUL_Y:        equ 0E9h          ; Multiplier Y Register (write)            (W)
 00EA           MUL_DH:       equ 0EAh          ; Multiplier Result Data (high byte read)  (R)
 00EB           MUL_DL:       equ 0EBh          ; Multiplier Result Data ( low byte read)  (R)
 00EC           MAC_X:        equ 0ECh          ; write = MAC X register [also see ACC_DR1]
 00EC           ACC_DR1:      equ MAC_X        ; read =  MAC Accumulator, byte 1          (RW)
 00ED           MAC_Y:        equ 0EDh          ; write = MAC Y register [also see ACC_DR0]
 00ED           ACC_DR0:      equ MAC_Y        ; read =  MAC Accumulator, byte 0          (RW)
 00EE           MAC_CL0:      equ 0EEh          ; write = MAC Clear Accum [also see ACC_DR3]
 00EE           ACC_DR3:      equ MAC_CL0      ; read =  MAC Accumulator, byte 3          (RW)
 00EF           MAC_CL1:      equ 0EFh          ; write = MAC Clear Accum [also see ACC_DR2]
 00EF           ACC_DR2:      equ MAC_CL1      ; read =  MAC Accumulator, byte 2          (RW)
 0000           
 0000           // Multiply/Accumulate Unit 0
 00E8           MUL0_X:       equ 0E8h          ; Multiplier 0 X Register (write)          (W)
 00E9           MUL0_Y:       equ 0E9h          ; Multiplier 0 Y Register (write)          (W)
 00EA           MUL0_DH:      equ 0EAh          ; Multiplier 0 Result Data (high byte read)(R)
 00EB           MUL0_DL:      equ 0EBh          ; Multiplier 0 Result Data ( low byte read)(R)
 00EC           MAC0_X:       equ 0ECh          ; write = MAC 0 X register [also see ACC_DR1]
 00EC           ACC0_DR1:     equ MAC0_X       ; read =  MAC 0 Accumulator, byte 1        (RW)
 00ED           MAC0_Y:       equ 0EDh          ; write = MAC 0 Y register [also see ACC_DR0]
 00ED           ACC0_DR0:     equ MAC0_Y       ; read =  MAC 0 Accumulator, byte 0        (RW)
 00EE           MAC0_CL0:     equ 0EEh          ; write = MAC 0 Clear Accum [also see ACC_DR3]
 00EE           ACC0_DR3:     equ MAC0_CL0     ; read =  MAC 0 Accumulator, byte 3        (RW)
 00EF           MAC0_CL1:     equ 0EFh          ; write = MAC 0 Clear Accum [also see ACC_DR2]
 00EF           ACC0_DR2:     equ MAC0_CL1     ; read =  MAC 0 Accumulator, byte 2        (RW)
 0000           
 0000           // Multiply/Accumulate Unit 1
 00A8           MUL1_X:       equ 0A8h          ; Multiplier 1 X Register (write)          (W)
 00A9           MUL1_Y:       equ 0A9h          ; Multiplier 1 Y Register (write)          (W)
 00AA           MUL1_DH:      equ 0AAh          ; Multiplier 1 Result Data (high byte read)(R)
 00AB           MUL1_DL:      equ 0ABh          ; Multiplier 1 Result Data ( low byte read)(R)
 00AC           MAC1_X:       equ 0ACh          ; write = MAC 1 X register [also see ACC_DR1]
 00AC           ACC1_DR1:     equ MAC1_X       ; read =  MAC 1 Accumulator, byte 1        (RW)
 00AD           MAC1_Y:       equ 0ADh          ; write = MAC 1 Y register [also see ACC_DR0]
 00AD           ACC1_DR0:     equ MAC1_Y       ; read =  MAC 1 Accumulator, byte 0        (RW)
 00AE           MAC1_CL0:     equ 0AEh          ; write = MAC 1 Clear Accum [also see ACC_DR3]
 00AE           ACC1_DR3:     equ MAC1_CL0     ; read =  MAC 1 Accumulator, byte 3        (RW)
 00AF           MAC1_CL1:     equ 0AFh          ; write = MAC 1 Clear Accum [also see ACC_DR2]
 00AF           ACC1_DR2:     equ MAC1_CL1     ; read =  MAC 1 Accumulator, byte 2        (RW)
 0000           
 0000           ;------------------------------------------------------
 0000           ;  System Status and Control Registers
 0000           ;
 0000           ;  Note: The following registers are mapped into both
 0000           ;        register bank 0 AND register bank 1.
 0000           ;------------------------------------------------------
 00F7           CPU_F:        equ 0F7h          ; CPU Flag Register Access                 (RO)
 0000                                              ; Use FLAG_ masks defined at top of file
 0000           
 00FE           CPU_SCR1:     equ 0FEh          ; CPU Status and Control Register #1       (#)
 0080           CPU_SCR1_IRESS:         equ 80h    ; MASK: Boot Phase Re-entry bit
 0010           CPU_SCR1_SLIMO:         equ 10h    ; MASK: Slow Main Oscillator Mode
 0008           CPU_SCR1_ECO_ALWD_WR:   equ 08h    ; MASK: flag, ECO allowed has been written
 0004           CPU_SCR1_ECO_ALLOWED:   equ 04h    ; MASK: ECO allowed to be enabled
 0001           CPU_SCR1_IRAMDIS:       equ 01h    ; MASK: Disable RAM initialization on WDR
 0000           
 00FF           CPU_SCR0:     equ 0FFh          ; CPU Status and Control Register #2       (#)
 0080           CPU_SCR0_GIE_MASK:      equ 80h    ; MASK: Global Interrupt Enable shadow
 0020           CPU_SCR0_WDRS_MASK:     equ 20h    ; MASK: Watch Dog Timer Reset
 0010           CPU_SCR0_PORS_MASK:     equ 10h    ; MASK: power-on reset bit PORS
 0008           CPU_SCR0_SLEEP_MASK:    equ 08h    ; MASK: Enable Sleep
 0001           CPU_SCR0_STOP_MASK:     equ 01h    ; MASK: Halt CPU bit
 0000           
 0000           
 0000           ;;=============================================================================
 0000           ;;      Register Space, Bank 1
 0000           ;;=============================================================================
 0000           
 0000           ;------------------------------------------------
 0000           ;  Port Registers
 0000           ;  Note: Also see this address range in Bank 0.
 0000           ;------------------------------------------------
 0000           ; Port 0
 0000           PRT0DM0:      equ 00h          ; Port 0 Drive Mode 0                      (RW)
 0001           PRT0DM1:      equ 01h          ; Port 0 Drive Mode 1                      (RW)
 0002           PRT0IC0:      equ 02h          ; Port 0 Interrupt Control 0               (RW)
 0003           PRT0IC1:      equ 03h          ; Port 0 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 1
 0004           PRT1DM0:      equ 04h          ; Port 1 Drive Mode 0                      (RW)
 0005           PRT1DM1:      equ 05h          ; Port 1 Drive Mode 1                      (RW)
 0006           PRT1IC0:      equ 06h          ; Port 1 Interrupt Control 0               (RW)
 0007           PRT1IC1:      equ 07h          ; Port 1 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 2
 0008           PRT2DM0:      equ 08h          ; Port 2 Drive Mode 0                      (RW)
 0009           PRT2DM1:      equ 09h          ; Port 2 Drive Mode 1                      (RW)
 000A           PRT2IC0:      equ 0Ah          ; Port 2 Interrupt Control 0               (RW)
 000B           PRT2IC1:      equ 0Bh          ; Port 2 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 3
 000C           PRT3DM0:      equ 0Ch          ; Port 3 Drive Mode 0                      (RW)
 000D           PRT3DM1:      equ 0Dh          ; Port 3 Drive Mode 1                      (RW)
 000E           PRT3IC0:      equ 0Eh          ; Port 3 Interrupt Control 0               (RW)
 000F           PRT3IC1:      equ 0Fh          ; Port 3 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 4
 0010           PRT4DM0:      equ 10h          ; Port 4 Drive Mode 0                      (RW)
 0011           PRT4DM1:      equ 11h          ; Port 4 Drive Mode 1                      (RW)
 0012           PRT4IC0:      equ 12h          ; Port 4 Interrupt Control 0               (RW)
 0013           PRT4IC1:      equ 13h          ; Port 4 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 5
 0014           PRT5DM0:      equ 14h          ; Port 5 Drive Mode 0                      (RW)
 0015           PRT5DM1:      equ 15h          ; Port 5 Drive Mode 1                      (RW)
 0016           PRT5IC0:      equ 16h          ; Port 5 Interrupt Control 0               (RW)
 0017           PRT5IC1:      equ 17h          ; Port 5 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 6
 0018           PRT6DM0:      equ 18h          ; Port 6 Drive Mode 0                      (RW)
 0019           PRT6DM1:      equ 19h          ; Port 6 Drive Mode 1                      (RW)
 001A           PRT6IC0:      equ 1Ah          ; Port 6 Interrupt Control 0               (RW)
 001B           PRT6IC1:      equ 1Bh          ; Port 6 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 7
 001C           PRT7DM0:      equ 1Ch          ; Port 7 Drive Mode 0                      (RW)
 001D           PRT7DM1:      equ 1Dh          ; Port 7 Drive Mode 1                      (RW)
 001E           PRT7IC0:      equ 1Eh          ; Port 7 Interrupt Control 0               (RW)
 001F           PRT7IC1:      equ 1Fh          ; Port 7 Interrupt Control 1               (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Digital PSoC(tm) block Registers
 0000           ;  Note: Also see this address range in Bank 0.
 0000           ;------------------------------------------------
 0000           
 0000           ; Digital PSoC block 00, Basic Type B
 0020           DBB00FN:      equ 20h          ; Function Register                        (RW)
 0021           DBB00IN:      equ 21h          ;    Input Register                        (RW)
 0022           DBB00OU:      equ 22h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 01, Basic Type B
 0024           DBB01FN:      equ 24h          ; Function Register                        (RW)
 0025           DBB01IN:      equ 25h          ;    Input Register                        (RW)
 0026           DBB01OU:      equ 26h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 02, Communications Type B
 0028           DCB02FN:      equ 28h          ; Function Register                        (RW)
 0029           DCB02IN:      equ 29h          ;    Input Register                        (RW)
 002A           DCB02OU:      equ 2Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 03, Communications Type B
 002C           DCB03FN:      equ 2Ch          ; Function Register                        (RW)
 002D           DCB03IN:      equ 2Dh          ;    Input Register                        (RW)
 002E           DCB03OU:      equ 2Eh          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 10, Basic Type B
 0030           DBB10FN:      equ 30h          ; Function Register                        (RW)
 0031           DBB10IN:      equ 31h          ;    Input Register                        (RW)
 0032           DBB10OU:      equ 32h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 11, Basic Type B
 0034           DBB11FN:      equ 34h          ; Function Register                        (RW)
 0035           DBB11IN:      equ 35h          ;    Input Register                        (RW)
 0036           DBB11OU:      equ 36h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 12, Communications Type B
 0038           DCB12FN:      equ 38h          ; Function Register                        (RW)
 0039           DCB12IN:      equ 39h          ;    Input Register                        (RW)
 003A           DCB12OU:      equ 3Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 13, Communications Type B
 003C           DCB13FN:      equ 3Ch          ; Function Register                        (RW)
 003D           DCB13IN:      equ 3Dh          ;    Input Register                        (RW)
 003E           DCB13OU:      equ 3Eh          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 20, Basic Type B
 0040           DBB20FN:      equ 40h          ; Function Register                        (RW)
 0041           DBB20IN:      equ 41h          ;    Input Register                        (RW)
 0042           DBB20OU:      equ 42h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 21, Basic Type B
 0044           DBB21FN:      equ 44h          ; Function Register                        (RW)
 0045           DBB21IN:      equ 45h          ;    Input Register                        (RW)
 0046           DBB21OU:      equ 46h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 22, Communications Type B
 0048           DCB22FN:      equ 48h          ; Function Register                        (RW)
 0049           DCB22IN:      equ 49h          ;    Input Register                        (RW)
 004A           DCB22OU:      equ 4Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 23, Communications Type B
 004C           DCB23FN:      equ 4Ch          ; Function Register                        (RW)
 004D           DCB23IN:      equ 4Dh          ;    Input Register                        (RW)
 004E           DCB23OU:      equ 4Eh          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 30, Basic Type B
 0050           DBB30FN:      equ 50h          ; Function Register                        (RW)
 0051           DBB30IN:      equ 51h          ;    Input Register                        (RW)
 0052           DBB30OU:      equ 52h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 31, Basic Type B
 0054           DBB31FN:      equ 54h          ; Function Register                        (RW)
 0055           DBB31IN:      equ 55h          ;    Input Register                        (RW)
 0056           DBB31OU:      equ 56h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 32, Communications Type B
 0058           DCB32FN:      equ 58h          ; Function Register                        (RW)
 0059           DCB32IN:      equ 59h          ;    Input Register                        (RW)
 005A           DCB32OU:      equ 5Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 33, Communications Type B
 005C           DCB33FN:      equ 5Ch          ; Function Register                        (RW)
 005D           DCB33IN:      equ 5Dh          ;    Input Register                        (RW)
 005E           DCB33OU:      equ 5Eh          ;   Output Register                        (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  System and Global Resource Registers
 0000           ;  Note: Also see this address range in Bank 0.
 0000           ;------------------------------------------------
 0000           
 0060           CLK_CR0:      equ 60h          ; Analog Column Clock Select Register 0    (RW)
 00C0           CLK_CR0_ACOLUMN_3:    equ 0C0h    ; MASK: Specify clock for analog cloumn
 0030           CLK_CR0_ACOLUMN_2:    equ 30h    ; MASK: Specify clock for analog cloumn
 000C           CLK_CR0_ACOLUMN_1:    equ 0Ch    ; MASK: Specify clock for analog cloumn
 0003           CLK_CR0_ACOLUMN_0:    equ 03h    ; MASK: Specify clock for analog cloumn
 0000           
 0061           CLK_CR1:      equ 61h          ; Analog Clock Source Select Register 1    (RW)
 0040           CLK_CR1_SHDIS:        equ 40h    ; MASK: Sample and Hold Disable (all Columns)
 0038           CLK_CR1_ACLK1:        equ 38h    ; MASK: Digital PSoC block for analog source
 0007           CLK_CR1_ACLK2:        equ 07h    ; MASK: Digital PSoC block for analog source
 0000           
 0062           ABF_CR0:      equ 62h          ; Analog Output Buffer Control Register 0  (RW)
 0080           ABF_CR0_ACOL1MUX:     equ 80h    ; MASK: Analog Column 1 Mux control
 0040           ABF_CR0_ACOL2MUX:     equ 40h    ; MASK: Analog Column 2 Mux control
 0020           ABF_CR0_ABUF1EN:      equ 20h    ; MASK: Enable ACol 1 analog buffer (P0[5])
 0010           ABF_CR0_ABUF2EN:      equ 10h    ; MASK: Enable ACol 2 analog buffer (P0[4])
 0008           ABF_CR0_ABUF0EN:      equ 08h    ; MASK: Enable ACol 0 analog buffer (P0[3])
 0004           ABF_CR0_ABUF3EN:      equ 04h    ; MASK: Enable ACol 3 analog buffer (P0[2])
 0002           ABF_CR0_BYPASS:       equ 02h    ; MASK: Bypass the analog buffers
 0001           ABF_CR0_PWR:          equ 01h    ; MASK: High power mode on all analog buffers
 0000           
 0063           AMD_CR0:      equ 63h          ; Analog Modulator Control Register 0      (RW)
 0070           AMD_CR0_AMOD2:        equ 70h    ; MASK: Modulation source for analog column 2
 0007           AMD_CR0_AMOD0:        equ 07h    ; MASK: Modulation source for analog column 1
 0000           
 0066           AMD_CR1:      equ 66h          ; Analog Modulator Control Register 1      (RW)
 0070           AMD_CR1_AMOD3:        equ 70h    ; MASK: Modulation ctrl for analog column 3
 0007           AMD_CR1_AMOD1:        equ 07h    ; MASK: Modulation ctrl for analog column 1
 0000           
 0067           ALT_CR0:      equ 67h          ; Analog Look Up Table (LUT) Register 0    (RW)
 00F0           ALT_CR0_LUT1:         equ 0F0h    ; MASK: Look up table 1 selection
 000F           ALT_CR0_LUT0:         equ 0Fh    ; MASK: Look up table 0 selection
 0000           
 0068           ALT_CR1:      equ 68h          ; Analog Look Up Table (LUT) Register 1    (RW)
 00F0           ALT_CR1_LUT3:         equ 0F0h    ; MASK: Look up table 3 selection
 000F           ALT_CR1_LUT2:         equ 0Fh    ; MASK: Look up table 2 selection
 0000           
 0069           CLK_CR2:      equ 69h          ; Analog Clock Source Control Register 2   (RW)
 0008           CLK_CR2_ACLK1R:       equ 08h    ; MASK: Analog Clock 1 selection range
 0001           CLK_CR2_ACLK0R:       equ 01h    ; MASK: Analog Clock 0 selection range
 0000           
 0000           ;------------------------------------------------
 0000           ;  Global Digital Interconnects
 0000           ;------------------------------------------------
 0000           
 00D0           GDI_O_IN:     equ 0D0h          ; Global Dig Interconnect Odd Inputs Reg   (RW)
 00D1           GDI_E_IN:     equ 0D1h          ; Global Dig Interconnect Even Inputs Reg  (RW)
 00D2           GDI_O_OU:     equ 0D2h          ; Global Dig Interconnect Odd Outputs Reg  (RW)
 00D3           GDI_E_OU:     equ 0D3h          ; Global Dig Interconnect Even Outputs Reg (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Clock and System Control Registers
 0000           ;------------------------------------------------
 0000           
 00DD           OSC_GO_EN:    equ 0DDh          ; Oscillator to Global Outputs Enable Register (RW)
 0080           OSC_GOEN_SLPINT:      equ 80h	 ; Enable Sleep Timer onto GOE[7]
 0040           OSC_GOEN_VC3:         equ 40h    ; Enable VC3 onto GOE[6]
 0020           OSC_GOEN_VC2:         equ 20h    ; Enable VC2 onto GOE[5]
 0010           OSC_GOEN_VC1:         equ 10h    ; Enable VC1 onto GOE[4]
 0008           OSC_GOEN_SYSCLKX2:    equ 08h    ; Enable 2X SysClk onto GOE[3]
 0004           OSC_GOEN_SYSCLK:      equ 04h    ; Enable 1X SysClk onto GOE[2]
 0002           OSC_GOEN_CLK24M:      equ 02h    ; Enable 24 MHz clock onto GOE[1]
 0001           OSC_GOEN_CLK32K:      equ 01h    ; Enable 32 kHz clock onto GOE[0]
 0000           
 00DE           OSC_CR4:      equ 0DEh          ; Oscillator Control Register 4            (RW)
 0003           OSC_CR4_VC3:          equ 03h    ; MASK: System VC3 Clock source
 0000           
 00DF           OSC_CR3:      equ 0DFh          ; Oscillator Control Register 3            (RW)
 0000           
 00E0           OSC_CR0:      equ 0E0h          ; System Oscillator Control Register 0     (RW)
 0080           OSC_CR0_32K_SELECT:   equ 80h    ; MASK: Enable/Disable External XTAL Osc
 0040           OSC_CR0_PLL_MODE:     equ 40h    ; MASK: Enable/Disable PLL
 0020           OSC_CR0_NO_BUZZ:      equ 20h    ; MASK: Bandgap always powered/BUZZ bandgap
 0018           OSC_CR0_SLEEP:        equ 18h    ; MASK: Set Sleep timer freq/period
 0000           OSC_CR0_SLEEP_512Hz:  equ 00h    ;     Set sleep bits for 1.95ms period
 0008           OSC_CR0_SLEEP_64Hz:   equ 08h    ;     Set sleep bits for 15.6ms period
 0010           OSC_CR0_SLEEP_8Hz:    equ 10h    ;     Set sleep bits for 125ms period
 0018           OSC_CR0_SLEEP_1Hz:    equ 18h    ;     Set sleep bits for 1 sec period
 0007           OSC_CR0_CPU:          equ 07h    ; MASK: Set CPU Frequency
 0000           OSC_CR0_CPU_3MHz:     equ 00h    ;     set CPU Freq bits for 3MHz Operation
 0001           OSC_CR0_CPU_6MHz:     equ 01h    ;     set CPU Freq bits for 6MHz Operation
 0002           OSC_CR0_CPU_12MHz:    equ 02h    ;     set CPU Freq bits for 12MHz Operation
 0003           OSC_CR0_CPU_24MHz:    equ 03h    ;     set CPU Freq bits for 24MHz Operation
 0004           OSC_CR0_CPU_1d5MHz:   equ 04h    ;     set CPU Freq bits for 1.5MHz Operation
 0005           OSC_CR0_CPU_750kHz:   equ 05h    ;     set CPU Freq bits for 750kHz Operation
 0006           OSC_CR0_CPU_187d5kHz: equ 06h    ;     set CPU Freq bits for 187.5kHz Operation
 0007           OSC_CR0_CPU_93d7kHz:  equ 07h    ;     set CPU Freq bits for 93.7kHz Operation
 0000           
 00E1           OSC_CR1:      equ 0E1h          ; System VC1/VC2 Divider Control Register  (RW)
 00F0           OSC_CR1_VC1:          equ 0F0h    ; MASK: System VC1 24MHz/External Clk divider
 000F           OSC_CR1_VC2:          equ 0Fh    ; MASK: System VC2 24MHz/External Clk divider
 0000           
 00E2           OSC_CR2:      equ 0E2h          ; Oscillator Control Register 2            (RW)
 0004           OSC_CR2_EXTCLKEN:     equ 04h    ; MASK: Enable/Disable External Clock
 0001           OSC_CR2_SYSCLKX2DIS:  equ 01h    ; MASK: Enable/Disable 48MHz clock source
 0000           
 00E3           VLT_CR:       equ 0E3h          ; Voltage Monitor Control Register         (RW)
 0080           VLT_CR_SMP:           equ 80h    ; MASK: Enable Switch Mode Pump
 0030           VLT_CR_PORLEV:        equ 30h    ; MASK: Mask for Power on Reset level control
 0000           VLT_CR_POR_LOW:       equ 00h    ;   Lowest  Precision Power-on Reset trip point
 0010           VLT_CR_POR_MID:       equ 10h    ;   Middle  Precision Power-on Reset trip point
 0020           VLT_CR_POR_HIGH:      equ 20h    ;   Highest Precision Power-on Reset trip point
 0008           VLT_CR_LVDTBEN:       equ 08h    ; MASK: Enable the CPU Throttle Back on LVD
 0007           VLT_CR_VM:            equ 07h    ; MASK: Mask for Voltage Monitor level setting
 0000           VLT_CR_3V0_POR:       equ 00h    ; -- deprecated symbols --
 0010           VLT_CR_4V5_POR:       equ 10h    ;    deprecated
 0020           VLT_CR_4V75_POR:      equ 20h    ;    deprecated
 0030           VLT_CR_DISABLE:       equ 30h    ;    deprecated
 0000           
 00E4           VLT_CMP:      equ 0E4h          ; Voltage Monitor Comparators Register     (R)
 0004           VLT_CMP_PUMP:         equ 04h    ; MASK: Vcc below SMP trip level
 0002           VLT_CMP_LVD:          equ 02h    ; MASK: Vcc below LVD trip level
 0001           VLT_CMP_PPOR:         equ 01h    ; MASK: Vcc below PPOR trip level
 0000           
 00E7           DEC_CR2:      equ 0E7h          ; Decimator Control Register 2             (RW)
 00E8           IMO_TR:       equ 0E8h          ; Internal Main Oscillator Trim Register   (W)
 00E9           ILO_TR:       equ 0E9h          ; Internal Low-speed Oscillator Trim       (W)
 00EA           BDG_TR:       equ 0EAh          ; Band Gap Trim Register                   (W)
 00EB           ECO_TR:       equ 0EBh          ; External Oscillator Trim Register        (W)
 0000           
 0000           ;;=============================================================================
 0000           ;;      M8C System Macros
 0000           ;;  These macros should be used when their functions are needed.
 0000           ;;=============================================================================
 0000           
 0000           ;----------------------------------------------------
 0000           ;  Swapping Register Banks
 0000           ;----------------------------------------------------
 0000               macro M8C_SetBank0
 0000               and   F, ~FLAG_XIO_MASK
 0000               macro M8C_SetBank1
 0000               or    F, FLAG_XIO_MASK
 0000               macro M8C_EnableGInt
 0000               or    F, FLAG_GLOBAL_IE
 0000               macro M8C_DisableGInt
 0000               and   F, ~FLAG_GLOBAL_IE
 0000               macro M8C_DisableIntMask
 0000               and   reg[@0], ~@1              ; disable specified interrupt enable bit
 0000               macro M8C_EnableIntMask
 0000               or    reg[@0], @1               ; enable specified interrupt enable bit
 0000               macro M8C_ClearIntFlag
 0000               mov   reg[@0], ~@1              ; clear specified interrupt enable bit
 0000               macro M8C_EnableWatchDog
 0000               and   reg[CPU_SCR0], ~CPU_SCR0_PORS_MASK
 0000               macro M8C_ClearWDT
 0000               mov   reg[RES_WDT], 00h
 0000               macro M8C_ClearWDTAndSleep
 0000               mov   reg[RES_WDT], 38h
 0000               macro M8C_Stall
 0000               or    reg[ASY_CR], ASY_CR_SYNCEN
 0000               macro M8C_Unstall
 0000               and   reg[ASY_CR], ~ASY_CR_SYNCEN
 0000               macro M8C_Sleep
 0000               or    reg[CPU_SCR0], CPU_SCR0_SLEEP_MASK
 0000               ; The next instruction to be executed depends on the state of the
 0000               ; various interrupt enable bits. If some interrupts are enabled
 0000               ; and the global interrupts are disabled, the next instruction will
 0000               ; be the one that follows the invocation of this macro. If global
 0000               ; interrupts are also enabled then the next instruction will be
 0000               ; from the interrupt vector table. If no interrupts are enabled
 0000               ; then the CPU sleeps forever.
 0000               macro M8C_Stop
 0000               ; In general, you probably don't want to do this, but here's how:
 0000               or    reg[CPU_SCR0], CPU_SCR0_STOP_MASK
 0000               ; Next instruction to be executed is located in the interrupt
 0000               ; vector table entry for Power-On Reset.
 0000               macro M8C_Reset
 0000               ; Restore CPU to the power-on reset state.
 0000               mov A, 0
 0000               SSC
 0000               ; Next non-supervisor instruction will be at interrupt vector 0.
 0000               macro Suspend_CodeCompressor
 0000               or   F, 0
 0000               macro Resume_CodeCompressor
 0000               add  SP, 0
 0000           LPF2_1_OFF:                                      equ 0
 0001           LPF2_1_LOWPOWER:                                 equ 1
 0002           LPF2_1_MEDPOWER:                                 equ 2
 0003           LPF2_1_HIGHPOWER:                                equ 3
 0000           
 0000           LPF2_1_FEEDBACK_16:                              equ 0
 0001           LPF2_1_FEEDBACK_32:                              equ 1
 0000           
 0000           LPF2_1_POLARITY_INVERTING:                       equ 0
 0001           LPF2_1_POLARITY_NON_INVERTING:                   equ 1
 0000           
 0007           LPF2_1_AMD_MSK:         equ 0x7
 0000           LPF2_1_AMD_VAL:         equ 0x0
 0000           
 0000           ;--------------------------------------------------
 0000           ; Registers used by LPF2_1
 0000           ;--------------------------------------------------
 0000           
 0080           LPF2_1_FLIN_CR0:    equ 80h                      ; SCA Block Control Register 0
 0081           LPF2_1_FLIN_CR1:    equ 81h                      ; SCA Block Control Register 1
 0082           LPF2_1_FLIN_CR2:    equ 82h                      ; SCA Block Control Register 2
 0083           LPF2_1_FLIN_CR3:    equ 83h                      ; SCA Block Control Register 3
 0084           LPF2_1_FLOUT_CR0:   equ 84h                      ; SCA Block Control Register 0
 0085           LPF2_1_FLOUT_CR1:   equ 85h                      ; SCA Block Control Register 1
 0086           LPF2_1_FLOUT_CR2:   equ 86h                      ; SCA Block Control Register 2
 0087           LPF2_1_FLOUT_CR3:   equ 87h                      ; SCA Block Control Register 3
 0000           
 0000           ; UM Cap naming convention per Gregorian and Temes, p293
 0000           
 0080           LPF2_1_FILT_C1_REG: equ 80h
 0081           LPF2_1_FILT_C2_REG: equ 81h
 0084           LPF2_1_FILT_C3_REG: equ 84h
 0086           LPF2_1_FILT_C4_REG: equ 86h
 0080           LPF2_1_FILT_CA_REG: equ 80h
 0084           LPF2_1_FILT_CB_REG: equ 84h
 0000           
 0063           LPF2_1_AMD_REG:         equ 63h
 0000           
 0000           ; end of file LPF2_1.inc
 00C0           FLAG_PGMODE_MASK:  equ 0C0h     ; Paging control for > 256 bytes of RAM
 0000           FLAG_PGMODE_0:     equ 00h       ; Direct to Page 0,      indexed to Page 0
 0040           FLAG_PGMODE_1:     equ 40h       ; Direct to Page 0,      indexed to STK_PP page
 0080           FLAG_PGMODE_2:     equ 80h       ; Direct to CUR_PP page, indexed to IDX_PP page
 00C0           FLAG_PGMODE_3:     equ 0C0h       ; Direct to CUR_PP page, indexed to STK_PP page
 0000           FLAG_PGMODE_00b:   equ 00h       ; Same as PGMODE_0
 0040           FLAG_PGMODE_01b:   equ 40h       ; Same as PGMODE_1
 0080           FLAG_PGMODE_10b:   equ 80h       ; Same as PGMODE_2
 00C0           FLAG_PGMODE_11b:   equ 0C0h       ; Same as PGMODE_3
 0010           FLAG_XIO_MASK:     equ 10h     ; I/O Bank select for register space
 0008           FLAG_SUPER:        equ 08h     ; Supervisor Mode
 0004           FLAG_CARRY:        equ 04h     ; Carry Condition Flag
 0002           FLAG_ZERO:         equ 02h     ; Zero  Condition Flag
 0001           FLAG_GLOBAL_IE:    equ 01h     ; Glogal Interrupt Enable
 0000           
 0000           
 0000           ;;=============================================================================
 0000           ;;      Register Space, Bank 0
 0000           ;;=============================================================================
 0000           
 0000           ;------------------------------------------------
 0000           ;  Port Registers
 0000           ;  Note: Also see this address range in Bank 1.
 0000           ;------------------------------------------------
 0000           ; Port 0
 0000           PRT0DR:       equ 00h          ; Port 0 Data Register                     (RW)
 0001           PRT0IE:       equ 01h          ; Port 0 Interrupt Enable Register         (RW)
 0002           PRT0GS:       equ 02h          ; Port 0 Global Select Register            (RW)
 0003           PRT0DM2:      equ 03h          ; Port 0 Drive Mode 2                      (RW)
 0000           ; Port 1
 0004           PRT1DR:       equ 04h          ; Port 1 Data Register                     (RW)
 0005           PRT1IE:       equ 05h          ; Port 1 Interrupt Enable Register         (RW)
 0006           PRT1GS:       equ 06h          ; Port 1 Global Select Register            (RW)
 0007           PRT1DM2:      equ 07h          ; Port 1 Drive Mode 2                      (RW)
 0000           ; Port 2
 0008           PRT2DR:       equ 08h          ; Port 2 Data Register                     (RW)
 0009           PRT2IE:       equ 09h          ; Port 2 Interrupt Enable Register         (RW)
 000A           PRT2GS:       equ 0Ah          ; Port 2 Global Select Register            (RW)
 000B           PRT2DM2:      equ 0Bh          ; Port 2 Drive Mode 2                      (RW)
 0000           ; Port 3
 000C           PRT3DR:       equ 0Ch          ; Port 3 Data Register                     (RW)
 000D           PRT3IE:       equ 0Dh          ; Port 3 Interrupt Enable Register         (RW)
 000E           PRT3GS:       equ 0Eh          ; Port 3 Global Select Register            (RW)
 000F           PRT3DM2:      equ 0Fh          ; Port 3 Drive Mode 2                      (RW)
 0000           ; Port 4
 0010           PRT4DR:       equ 10h          ; Port 4 Data Register                     (RW)
 0011           PRT4IE:       equ 11h          ; Port 4 Interrupt Enable Register         (RW)
 0012           PRT4GS:       equ 12h          ; Port 4 Global Select Register            (RW)
 0013           PRT4DM2:      equ 13h          ; Port 4 Drive Mode 2                      (RW)
 0000           ; Port 5
 0014           PRT5DR:       equ 14h          ; Port 5 Data Register                     (RW)
 0015           PRT5IE:       equ 15h          ; Port 5 Interrupt Enable Register         (RW)
 0016           PRT5GS:       equ 16h          ; Port 5 Global Select Register            (RW)
 0017           PRT5DM2:      equ 17h          ; Port 5 Drive Mode 2                      (RW)
 0000           ; Port 6
 0018           PRT6DR:       equ 18h          ; Port 6 Data Register                     (RW)
 0019           PRT6IE:       equ 19h          ; Port 6 Interrupt Enable Register         (RW)
 001A           PRT6GS:       equ 1Ah          ; Port 6 Global Select Register            (RW)
 001B           PRT6DM2:      equ 1Bh          ; Port 6 Drive Mode 2                      (RW)
 0000           ; Port 7
 001C           PRT7DR:       equ 1Ch          ; Port 7 Data Register                     (RW)
 001D           PRT7IE:       equ 1Dh          ; Port 7 Interrupt Enable Register         (RW)
 001E           PRT7GS:       equ 1Eh          ; Port 7 Global Select Register            (RW)
 001F           PRT7DM2:      equ 1Fh          ; Port 7 Drive Mode 2                      (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Digital PSoC(tm) block Registers
 0000           ;  Note: Also see this address range in Bank 1.
 0000           ;------------------------------------------------
 0000           ; Digital PSoC block 00, Basic Type B
 0020           DBB00DR0:     equ 20h          ; data register 0                          (#)
 0021           DBB00DR1:     equ 21h          ; data register 1                          (W)
 0022           DBB00DR2:     equ 22h          ; data register 2                          (RW)
 0023           DBB00CR0:     equ 23h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 01, Basic Type B
 0024           DBB01DR0:     equ 24h          ; data register 0                          (#)
 0025           DBB01DR1:     equ 25h          ; data register 1                          (W)
 0026           DBB01DR2:     equ 26h          ; data register 2                          (RW)
 0027           DBB01CR0:     equ 27h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 02, Communications Type B
 0028           DCB02DR0:     equ 28h          ; data register 0                          (#)
 0029           DCB02DR1:     equ 29h          ; data register 1                          (W)
 002A           DCB02DR2:     equ 2Ah          ; data register 2                          (RW)
 002B           DCB02CR0:     equ 2Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 03, Communications Type B
 002C           DCB03DR0:     equ 2Ch          ; data register 0                          (#)
 002D           DCB03DR1:     equ 2Dh          ; data register 1                          (W)
 002E           DCB03DR2:     equ 2Eh          ; data register 2                          (RW)
 002F           DCB03CR0:     equ 2Fh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 10, Basic Type B
 0030           DBB10DR0:     equ 30h          ; data register 0                          (#)
 0031           DBB10DR1:     equ 31h          ; data register 1                          (W)
 0032           DBB10DR2:     equ 32h          ; data register 2                          (RW)
 0033           DBB10CR0:     equ 33h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 11, Basic Type B
 0034           DBB11DR0:     equ 34h          ; data register 0                          (#)
 0035           DBB11DR1:     equ 35h          ; data register 1                          (W)
 0036           DBB11DR2:     equ 36h          ; data register 2                          (RW)
 0037           DBB11CR0:     equ 37h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 12, Communications Type B
 0038           DCB12DR0:     equ 38h          ; data register 0                          (#)
 0039           DCB12DR1:     equ 39h          ; data register 1                          (W)
 003A           DCB12DR2:     equ 3Ah          ; data register 2                          (RW)
 003B           DCB12CR0:     equ 3Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 13, Communications Type B
 003C           DCB13DR0:     equ 3Ch          ; data register 0                          (#)
 003D           DCB13DR1:     equ 3Dh          ; data register 1                          (W)
 003E           DCB13DR2:     equ 3Eh          ; data register 2                          (RW)
 003F           DCB13CR0:     equ 3Fh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 20, Basic Type B
 0040           DBB20DR0:     equ 40h          ; data register 0                          (#)
 0041           DBB20DR1:     equ 41h          ; data register 1                          (W)
 0042           DBB20DR2:     equ 42h          ; data register 2                          (RW)
 0043           DBB20CR0:     equ 43h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 21, Basic Type B
 0044           DBB21DR0:     equ 44h          ; data register 0                          (#)
 0045           DBB21DR1:     equ 45h          ; data register 1                          (W)
 0046           DBB21DR2:     equ 46h          ; data register 2                          (RW)
 0047           DBB21CR0:     equ 47h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 22, Communications Type B
 0048           DCB22DR0:     equ 48h          ; data register 0                          (#)
 0049           DCB22DR1:     equ 49h          ; data register 1                          (W)
 004A           DCB22DR2:     equ 4Ah          ; data register 2                          (RW)
 004B           DCB22CR0:     equ 4Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 23, Communications Type B
 004C           DCB23DR0:     equ 4Ch          ; data register 0                          (#)
 004D           DCB23DR1:     equ 4Dh          ; data register 1                          (W)
 004E           DCB23DR2:     equ 4Eh          ; data register 2                          (RW)
 004F           DCB23CR0:     equ 4Fh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 30, Basic Type B
 0050           DBB30DR0:     equ 50h          ; data register 0                          (#)
 0051           DBB30DR1:     equ 51h          ; data register 1                          (W)
 0052           DBB30DR2:     equ 52h          ; data register 2                          (RW)
 0053           DBB30CR0:     equ 53h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 31, Basic Type B
 0054           DBB31DR0:     equ 54h          ; data register 0                          (#)
 0055           DBB31DR1:     equ 55h          ; data register 1                          (W)
 0056           DBB31DR2:     equ 56h          ; data register 2                          (RW)
 0057           DBB31CR0:     equ 57h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 32, Communications Type B
 0058           DCB32DR0:     equ 58h          ; data register 0                          (#)
 0059           DCB32DR1:     equ 59h          ; data register 1                          (W)
 005A           DCB32DR2:     equ 5Ah          ; data register 2                          (RW)
 005B           DCB32CR0:     equ 5Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 33, Communications Type B
 005C           DCB33DR0:     equ 5Ch          ; data register 0                          (#)
 005D           DCB33DR1:     equ 5Dh          ; data register 1                          (W)
 005E           DCB33DR2:     equ 5Eh          ; data register 2                          (RW)
 005F           DCB33CR0:     equ 5Fh          ; control & status register 0              (#)
 0000           
 0000           ;-------------------------------------
 0000           ;  Analog Resource Control Registers
 0000           ;-------------------------------------
 0060           AMX_IN:       equ 60h          ; Analog Input Multiplexor Control         (RW)
 00C0           AMX_IN_ACI3:          equ 0C0h    ; MASK: column 3 input mux
 0030           AMX_IN_ACI2:          equ 30h    ; MASK: column 2 input mux
 000C           AMX_IN_ACI1:          equ 0Ch    ; MASK: column 1 input mux
 0003           AMX_IN_ACI0:          equ 03h    ; MASK: column 0 input mux
 0000           
 0063           ARF_CR:       equ 63h          ; Analog Reference Control Register        (RW)
 0040           ARF_CR_HBE:           equ 40h    ; MASK: Bias level control
 0038           ARF_CR_REF:           equ 38h    ; MASK: Analog Reference controls
 0007           ARF_CR_REFPWR:        equ 07h    ; MASK: Analog Reference power
 0004           ARF_CR_APWR:          equ 04h    ; MASK: use deprecated; see datasheet
 0003           ARF_CR_SCPWR:         equ 03h    ; MASK: Switched Cap block power
 0000           
 0064           CMP_CR0:      equ 64h          ; Analog Comparator Bus 0 Register         (#)
 0080           CMP_CR0_COMP3:        equ 80h    ; MASK: Column 3 comparator state        (R)
 0040           CMP_CR0_COMP2:        equ 40h    ; MASK: Column 2 comparator state        (R)
 0020           CMP_CR0_COMP1:        equ 20h    ; MASK: Column 1 comparator state        (R)
 0010           CMP_CR0_COMP0:        equ 10h    ; MASK: Column 0 comparator state        (R)
 0008           CMP_CR0_AINT3:        equ 08h    ; MASK: Column 3 interrupt source        (RW)
 0004           CMP_CR0_AINT2:        equ 04h    ; MASK: Column 2 interrupt source        (RW)
 0002           CMP_CR0_AINT1:        equ 02h    ; MASK: Column 1 interrupt source        (RW)
 0001           CMP_CR0_AINT0:        equ 01h    ; MASK: Column 0 interrupt source        (RW)
 0000           
 0065           ASY_CR:       equ 65h          ; Analog Synchronizaton Control            (#)
 0070           ASY_CR_SARCOUNT:      equ 70h    ; MASK: SAR support: resolution count    (W)
 0008           ASY_CR_SARSIGN:       equ 08h    ; MASK: SAR support: sign                (RW)
 0006           ASY_CR_SARCOL:        equ 06h    ; MASK: SAR support: column spec         (RW)
 0001           ASY_CR_SYNCEN:        equ 01h    ; MASK: Stall bit                        (RW)
 0000           
 0066           CMP_CR1:      equ 66h          ; Analog Comparator Bus 1 Register         (RW)
 0080           CMP_CR1_ASYNCH3:      equ 80h    ; MASK: Column 3 comparator bus synch
 0040           CMP_CR1_ASYNCH2:      equ 40h    ; MASK: Column 2 comparator bus synch
 0020           CMP_CR1_ASYNCH1:      equ 20h    ; MASK: Column 1 comparator bus synch
 0010           CMP_CR1_ASYNCH0:      equ 10h    ; MASK: Column 0 comparator bus synch
 0000           
 0000           ;---------------------------------------------------
 0000           ;  Analog PSoC block Registers
 0000           ;
 0000           ;  Note: the following registers are mapped into
 0000           ;  both register bank 0 AND register bank 1.
 0000           ;---------------------------------------------------
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 0
 0070           ACB00CR3:     equ 70h          ; Control register 3                       (RW)
 0071           ACB00CR0:     equ 71h          ; Control register 0                       (RW)
 0072           ACB00CR1:     equ 72h          ; Control register 1                       (RW)
 0073           ACB00CR2:     equ 73h          ; Control register 2                       (RW)
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 1
 0074           ACB01CR3:     equ 74h          ; Control register 3                       (RW)
 0075           ACB01CR0:     equ 75h          ; Control register 0                       (RW)
 0076           ACB01CR1:     equ 76h          ; Control register 1                       (RW)
 0077           ACB01CR2:     equ 77h          ; Control register 2                       (RW)
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 2
 0078           ACB02CR3:     equ 78h          ; Control register 3                       (RW)
 0079           ACB02CR0:     equ 79h          ; Control register 0                       (RW)
 007A           ACB02CR1:     equ 7Ah          ; Control register 1                       (RW)
 007B           ACB02CR2:     equ 7Bh          ; Control register 2                       (RW)
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 3
 007C           ACB03CR3:     equ 7Ch          ; Control register 3                       (RW)
 007D           ACB03CR0:     equ 7Dh          ; Control register 0                       (RW)
 007E           ACB03CR1:     equ 7Eh          ; Control register 1                       (RW)
 007F           ACB03CR2:     equ 7Fh          ; Control register 2                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 1 Col 0
 0080           ASC10CR0:     equ 80h          ; Control register 0                       (RW)
 0081           ASC10CR1:     equ 81h          ; Control register 1                       (RW)
 0082           ASC10CR2:     equ 82h          ; Control register 2                       (RW)
 0083           ASC10CR3:     equ 83h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 1 Col 1
 0084           ASD11CR0:     equ 84h          ; Control register 0                       (RW)
 0085           ASD11CR1:     equ 85h          ; Control register 1                       (RW)
 0086           ASD11CR2:     equ 86h          ; Control register 2                       (RW)
 0087           ASD11CR3:     equ 87h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 1 Col 2
 0088           ASC12CR0:     equ 88h          ; Control register 0                       (RW)
 0089           ASC12CR1:     equ 89h          ; Control register 1                       (RW)
 008A           ASC12CR2:     equ 8Ah          ; Control register 2                       (RW)
 008B           ASC12CR3:     equ 8Bh          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 1 Col 3
 008C           ASD13CR0:     equ 8Ch          ; Control register 0                       (RW)
 008D           ASD13CR1:     equ 8Dh          ; Control register 1                       (RW)
 008E           ASD13CR2:     equ 8Eh          ; Control register 2                       (RW)
 008F           ASD13CR3:     equ 8Fh          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 2 Col 0
 0090           ASD20CR0:     equ 90h          ; Control register 0                       (RW)
 0091           ASD20CR1:     equ 91h          ; Control register 1                       (RW)
 0092           ASD20CR2:     equ 92h          ; Control register 2                       (RW)
 0093           ASD20CR3:     equ 93h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 2 Col 1
 0094           ASC21CR0:     equ 94h          ; Control register 0                       (RW)
 0095           ASC21CR1:     equ 95h          ; Control register 1                       (RW)
 0096           ASC21CR2:     equ 96h          ; Control register 2                       (RW)
 0097           ASC21CR3:     equ 97h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 2 Col 2
 0098           ASD22CR0:     equ 98h          ; Control register 0                       (RW)
 0099           ASD22CR1:     equ 99h          ; Control register 1                       (RW)
 009A           ASD22CR2:     equ 9Ah          ; Control register 2                       (RW)
 009B           ASD22CR3:     equ 9Bh          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 2 Col 3
 009C           ASC23CR0:     equ 9Ch          ; Control register 0                       (RW)
 009D           ASC23CR1:     equ 9Dh          ; Control register 1                       (RW)
 009E           ASC23CR2:     equ 9Eh          ; Control register 2                       (RW)
 009F           ASC23CR3:     equ 9Fh          ; Control register 3                       (RW)
 0000           
 0000           ;-----------------------------------------------
 0000           ;  Global General Purpose Data Registers
 0000           ;-----------------------------------------------
 006C           TMP0_DR:      equ 6Ch          ; deprecated do not use
 006D           TMP1_DR:      equ 6Dh          ; deprecated do not use
 006E           TMP2_DR:      equ 6Eh          ; deprecated do not use
 006F           TMP3_DR:      equ 6Fh          ; deprecated do not use
 0000           
 006C           TMP_DR0:      equ 6Ch          ; Temporary Data Register 0                (RW)
 006D           TMP_DR1:      equ 6Dh          ; Temporary Data Register 1                (RW)
 006E           TMP_DR2:      equ 6Eh          ; Temporary Data Register 2                (RW)
 006F           TMP_DR3:      equ 6Fh          ; Temporary Data Register 3                (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Row Digital Interconnects
 0000           ;
 0000           ;  Note: the following registers are mapped into
 0000           ;  both register bank 0 AND register bank 1.
 0000           ;------------------------------------------------
 0000           
 00B0           RDI0RI:       equ 0B0h          ; Row Digital Interconnect Row 0 Input Reg (RW)
 00B1           RDI0SYN:      equ 0B1h          ; Row Digital Interconnect Row 0 Sync Reg  (RW)
 00B2           RDI0IS:       equ 0B2h          ; Row 0 Input Select Register              (RW)
 00B3           RDI0LT0:      equ 0B3h          ; Row 0 Look Up Table Register 0           (RW)
 00B4           RDI0LT1:      equ 0B4h          ; Row 0 Look Up Table Register 1           (RW)
 00B5           RDI0RO0:      equ 0B5h          ; Row 0 Output Register 0                  (RW)
 00B6           RDI0RO1:      equ 0B6h          ; Row 0 Output Register 1                  (RW)
 0000           
 00B8           RDI1RI:       equ 0B8h          ; Row Digital Interconnect Row 1 Input Reg (RW)
 00B9           RDI1SYN:      equ 0B9h          ; Row Digital Interconnect Row 1 Sync Reg  (RW)
 00BA           RDI1IS:       equ 0BAh          ; Row 1 Input Select Register              (RW)
 00BB           RDI1LT0:      equ 0BBh          ; Row 1 Look Up Table Register 0           (RW)
 00BC           RDI1LT1:      equ 0BCh          ; Row 1 Look Up Table Register 1           (RW)
 00BD           RDI1RO0:      equ 0BDh          ; Row 1 Output Register 0                  (RW)
 00BE           RDI1RO1:      equ 0BEh          ; Row 1 Output Register 1                  (RW)
 0000           
 00C0           RDI2RI:       equ 0C0h          ; Row Digital Interconnect Row 2 Input Reg (RW)
 00C1           RDI2SYN:      equ 0C1h          ; Row Digital Interconnect Row 2 Sync Reg  (RW)
 00C2           RDI2IS:       equ 0C2h          ; Row 2 Input Select Register              (RW)
 00C3           RDI2LT0:      equ 0C3h          ; Row 2 Look Up Table Register 0           (RW)
 00C4           RDI2LT1:      equ 0C4h          ; Row 2 Look Up Table Register 1           (RW)
 00C5           RDI2RO0:      equ 0C5h          ; Row 2 Output Register 0                  (RW)
 00C6           RDI2RO1:      equ 0C6h          ; Row 2 Output Register 1                  (RW)
 0000           
 00C8           RDI3RI:       equ 0C8h          ; Row Digital Interconnect Row 3 Input Reg (RW)
 00C9           RDI3SYN:      equ 0C9h          ; Row Digital Interconnect Row 3 Sync Reg  (RW)
 00CA           RDI3IS:       equ 0CAh          ; Row 3 Input Select Register              (RW)
 00CB           RDI3LT0:      equ 0CBh          ; Row 3 Look Up Table Register 0           (RW)
 00CC           RDI3LT1:      equ 0CCh          ; Row 3 Look Up Table Register 1           (RW)
 00CD           RDI3RO0:      equ 0CDh          ; Row 3 Output Register 0                  (RW)
 00CE           RDI3RO1:      equ 0CEh          ; Row 3 Output Register 1                  (RW)
 0000           
 0000           ;-----------------------------------------------
 0000           ;  Ram Page Pointers
 0000           ;-----------------------------------------------
 00D0           CUR_PP:      equ 0D0h           ; Current   Page Pointer
 00D1           STK_PP:      equ 0D1h           ; Stack     Page Pointer
 00D3           IDX_PP:      equ 0D3h           ; Index     Page Pointer
 00D4           MVR_PP:      equ 0D4h           ; MVI Read  Page Pointer
 00D5           MVW_PP:      equ 0D5h           ; MVI Write Page Pointer
 0000           
 0000           ;------------------------------------------------
 0000           ;  I2C Configuration Registers
 0000           ;------------------------------------------------
 00D6           I2C_CFG:      equ 0D6h          ; I2C Configuration Register               (RW)
 0040           I2C_CFG_PINSEL:         equ 40h  ; MASK: Select P1[0] and P1[1] for I2C
 0020           I2C_CFG_BUSERR_IE:      equ 20h  ; MASK: Enable interrupt on Bus Error
 0010           I2C_CFG_STOP_IE:        equ 10h  ; MASK: Enable interrupt on Stop
 0000           I2C_CFG_CLK_RATE_100K:  equ 00h  ; MASK: I2C clock set at 100K
 0004           I2C_CFG_CLK_RATE_400K:  equ 04h  ; MASK: I2C clock set at 400K
 0008           I2C_CFG_CLK_RATE_50K:   equ 08h  ; MASK: I2C clock set at 50K
 000C           I2C_CFG_CLK_RATE_1M6:   equ 0Ch  ; MASK: I2C clock set at 1.6M
 000C           I2C_CFG_CLK_RATE:       equ 0Ch  ; MASK: I2C clock rate setting mask
 0002           I2C_CFG_PSELECT_MASTER: equ 02h  ; MASK: Enable I2C Master
 0001           I2C_CFG_PSELECT_SLAVE:  equ 01h  ; MASK: Enable I2C Slave
 0000           
 00D7           I2C_SCR:      equ 0D7h          ; I2C Status and Control Register          (#)
 0080           I2C_SCR_BUSERR:        equ 80h   ; MASK: I2C Bus Error detected           (RC)
 0040           I2C_SCR_LOSTARB:       equ 40h   ; MASK: I2C Arbitration lost             (RC)
 0020           I2C_SCR_STOP:          equ 20h   ; MASK: I2C Stop detected                (RC)
 0010           I2C_SCR_ACK:           equ 10h   ; MASK: ACK the last byte                (RW)
 0008           I2C_SCR_ADDR:          equ 08h   ; MASK: Address rcv'd is Slave address   (RC)
 0004           I2C_SCR_XMIT:          equ 04h   ; MASK: Set transfer to tranmit mode     (RW)
 0002           I2C_SCR_LRB:           equ 02h   ; MASK: Last recieved bit                (RC)
 0001           I2C_SCR_BYTECOMPLETE:  equ 01h   ; MASK: Transfer of byte complete        (RC)
 0000           
 00D8           I2C_DR:       equ 0D8h          ; I2C Data Register                        (RW)
 0000           
 00D9           I2C_MSCR:     equ 0D9h          ; I2C Master Status and Control Register   (#)
 0008           I2C_MSCR_BUSY:         equ 08h   ; MASK: I2C Busy (Start detected)        (R)
 0004           I2C_MSCR_MODE:         equ 04h   ; MASK: Start has been generated         (R)
 0002           I2C_MSCR_RESTART:      equ 02h   ; MASK: Generate a Restart condition     (RW)
 0001           I2C_MSCR_START:        equ 01h   ; MASK: Generate a Start condition       (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  System and Global Resource Registers
 0000           ;------------------------------------------------
 00DA           INT_CLR0:     equ 0DAh          ; Interrupt Clear Register 0               (RW)
 0000                                          ; Use INT_MSK0 bit field masks
 00DB           INT_CLR1:     equ 0DBh          ; Interrupt Clear Register 1               (RW)
 0000                                          ; Use INT_MSK1 bit field masks
 00DC           INT_CLR2:     equ 0DCh          ; Interrupt Clear Register 2               (RW)
 0000                                          ; Use INT_MSK2 bit field masks
 00DD           INT_CLR3:     equ 0DDh          ; Interrupt Clear Register 3               (RW)
 0000                                          ; Use INT_MSK3 bit field masks
 0000           
 00DE           INT_MSK3:     equ 0DEh          ; I2C and Software Mask Register           (RW)
 0080           INT_MSK3_ENSWINT:          equ 80h ; MASK: enable/disable SW interrupt
 0001           INT_MSK3_I2C:              equ 01h ; MASK: enable/disable I2C interrupt
 0000           
 00DF           INT_MSK2:     equ 0DFh          ; Digital PSoC block Mask Register         (RW)
 0080           INT_MSK2_DCB33:            equ 80h ; MASK: enable/disable DCB33 block interrupt
 0040           INT_MSK2_DCB32:            equ 40h ; MASK: enable/disable DCB32 block interrupt
 0020           INT_MSK2_DBB31:            equ 20h ; MASK: enable/disable DBB31 block interrupt
 0010           INT_MSK2_DBB30:            equ 10h ; MASK: enable/disable DBB30 block interrupt
 0008           INT_MSK2_DCB23:            equ 08h ; MASK: enable/disable DCB23 block interrupt
 0004           INT_MSK2_DCB22:            equ 04h ; MASK: enable/disable DCB22 block interrupt
 0002           INT_MSK2_DBB21:            equ 02h ; MASK: enable/disable DBB21 block interrupt
 0001           INT_MSK2_DBB20:            equ 01h ; MASK: enable/disable DBB20 block interrupt
 0000           
 00E0           INT_MSK0:     equ 0E0h          ; General Interrupt Mask Register          (RW)
 0080           INT_MSK0_VC3:              equ 80h ; MASK: enable/disable VC3 interrupt
 0040           INT_MSK0_SLEEP:            equ 40h ; MASK: enable/disable sleep interrupt
 0020           INT_MSK0_GPIO:             equ 20h ; MASK: enable/disable GPIO  interrupt
 0010           INT_MSK0_ACOLUMN_3:        equ 10h ; MASK: enable/disable Analog col 3 interrupt
 0008           INT_MSK0_ACOLUMN_2:        equ 08h ; MASK: enable/disable Analog col 2 interrupt
 0004           INT_MSK0_ACOLUMN_1:        equ 04h ; MASK: enable/disable Analog col 1 interrupt
 0002           INT_MSK0_ACOLUMN_0:        equ 02h ; MASK: enable/disable Analog col 0 interrupt
 0001           INT_MSK0_VOLTAGE_MONITOR:  equ 01h ; MASK: enable/disable Volts interrupt
 0000           
 00E1           INT_MSK1:     equ 0E1h          ; Digital PSoC block Mask Register         (RW)
 0080           INT_MSK1_DCB13:            equ 80h ; MASK: enable/disable DCB13 block interrupt
 0040           INT_MSK1_DCB12:            equ 40h ; MASK: enable/disable DCB12 block interrupt
 0020           INT_MSK1_DBB11:            equ 20h ; MASK: enable/disable DBB11 block interrupt
 0010           INT_MSK1_DBB10:            equ 10h ; MASK: enable/disable DBB10 block interrupt
 0008           INT_MSK1_DCB03:            equ 08h ; MASK: enable/disable DCB03 block interrupt
 0004           INT_MSK1_DCB02:            equ 04h ; MASK: enable/disable DCB02 block interrupt
 0002           INT_MSK1_DBB01:            equ 02h ; MASK: enable/disable DBB01 block interrupt
 0001           INT_MSK1_DBB00:            equ 01h ; MASK: enable/disable DBB00 block interrupt
 0000           
 00E2           INT_VC:       equ 0E2h          ; Interrupt vector register                (RC)
 00E3           RES_WDT:      equ 0E3h          ; Watch Dog Timer Register                 (W)
 0000           
 0000           ; DECIMATOR Registers
 00E4           DEC_DH:       equ 0E4h          ; Data Register (high byte)                (RC)
 00E5           DEC_DL:       equ 0E5h          ; Data Register ( low byte)                (RC)
 00E6           DEC_CR0:      equ 0E6h          ; Data Control Register 0                  (RW)
 00E7           DEC_CR1:      equ 0E7h          ; Data Control Register 1                  (RW)
 0000                                          ; Also see DEC_CR2 in bank 1
 0000           
 0000           ; Multiplier and MAC (Multiply/Accumulate) Unit
 0000           //   Compatibility Set: Maps onto MAC0
 00E8           MUL_X:        equ 0E8h          ; Multiplier X Register (write)            (W)
 00E9           MUL_Y:        equ 0E9h          ; Multiplier Y Register (write)            (W)
 00EA           MUL_DH:       equ 0EAh          ; Multiplier Result Data (high byte read)  (R)
 00EB           MUL_DL:       equ 0EBh          ; Multiplier Result Data ( low byte read)  (R)
 00EC           MAC_X:        equ 0ECh          ; write = MAC X register [also see ACC_DR1]
 00EC           ACC_DR1:      equ MAC_X        ; read =  MAC Accumulator, byte 1          (RW)
 00ED           MAC_Y:        equ 0EDh          ; write = MAC Y register [also see ACC_DR0]
 00ED           ACC_DR0:      equ MAC_Y        ; read =  MAC Accumulator, byte 0          (RW)
 00EE           MAC_CL0:      equ 0EEh          ; write = MAC Clear Accum [also see ACC_DR3]
 00EE           ACC_DR3:      equ MAC_CL0      ; read =  MAC Accumulator, byte 3          (RW)
 00EF           MAC_CL1:      equ 0EFh          ; write = MAC Clear Accum [also see ACC_DR2]
 00EF           ACC_DR2:      equ MAC_CL1      ; read =  MAC Accumulator, byte 2          (RW)
 0000           
 0000           // Multiply/Accumulate Unit 0
 00E8           MUL0_X:       equ 0E8h          ; Multiplier 0 X Register (write)          (W)
 00E9           MUL0_Y:       equ 0E9h          ; Multiplier 0 Y Register (write)          (W)
 00EA           MUL0_DH:      equ 0EAh          ; Multiplier 0 Result Data (high byte read)(R)
 00EB           MUL0_DL:      equ 0EBh          ; Multiplier 0 Result Data ( low byte read)(R)
 00EC           MAC0_X:       equ 0ECh          ; write = MAC 0 X register [also see ACC_DR1]
 00EC           ACC0_DR1:     equ MAC0_X       ; read =  MAC 0 Accumulator, byte 1        (RW)
 00ED           MAC0_Y:       equ 0EDh          ; write = MAC 0 Y register [also see ACC_DR0]
 00ED           ACC0_DR0:     equ MAC0_Y       ; read =  MAC 0 Accumulator, byte 0        (RW)
 00EE           MAC0_CL0:     equ 0EEh          ; write = MAC 0 Clear Accum [also see ACC_DR3]
 00EE           ACC0_DR3:     equ MAC0_CL0     ; read =  MAC 0 Accumulator, byte 3        (RW)
 00EF           MAC0_CL1:     equ 0EFh          ; write = MAC 0 Clear Accum [also see ACC_DR2]
 00EF           ACC0_DR2:     equ MAC0_CL1     ; read =  MAC 0 Accumulator, byte 2        (RW)
 0000           
 0000           // Multiply/Accumulate Unit 1
 00A8           MUL1_X:       equ 0A8h          ; Multiplier 1 X Register (write)          (W)
 00A9           MUL1_Y:       equ 0A9h          ; Multiplier 1 Y Register (write)          (W)
 00AA           MUL1_DH:      equ 0AAh          ; Multiplier 1 Result Data (high byte read)(R)
 00AB           MUL1_DL:      equ 0ABh          ; Multiplier 1 Result Data ( low byte read)(R)
 00AC           MAC1_X:       equ 0ACh          ; write = MAC 1 X register [also see ACC_DR1]
 00AC           ACC1_DR1:     equ MAC1_X       ; read =  MAC 1 Accumulator, byte 1        (RW)
 00AD           MAC1_Y:       equ 0ADh          ; write = MAC 1 Y register [also see ACC_DR0]
 00AD           ACC1_DR0:     equ MAC1_Y       ; read =  MAC 1 Accumulator, byte 0        (RW)
 00AE           MAC1_CL0:     equ 0AEh          ; write = MAC 1 Clear Accum [also see ACC_DR3]
 00AE           ACC1_DR3:     equ MAC1_CL0     ; read =  MAC 1 Accumulator, byte 3        (RW)
 00AF           MAC1_CL1:     equ 0AFh          ; write = MAC 1 Clear Accum [also see ACC_DR2]
 00AF           ACC1_DR2:     equ MAC1_CL1     ; read =  MAC 1 Accumulator, byte 2        (RW)
 0000           
 0000           ;------------------------------------------------------
 0000           ;  System Status and Control Registers
 0000           ;
 0000           ;  Note: The following registers are mapped into both
 0000           ;        register bank 0 AND register bank 1.
 0000           ;------------------------------------------------------
 00F7           CPU_F:        equ 0F7h          ; CPU Flag Register Access                 (RO)
 0000                                              ; Use FLAG_ masks defined at top of file
 0000           
 00FE           CPU_SCR1:     equ 0FEh          ; CPU Status and Control Register #1       (#)
 0080           CPU_SCR1_IRESS:         equ 80h    ; MASK: Boot Phase Re-entry bit
 0010           CPU_SCR1_SLIMO:         equ 10h    ; MASK: Slow Main Oscillator Mode
 0008           CPU_SCR1_ECO_ALWD_WR:   equ 08h    ; MASK: flag, ECO allowed has been written
 0004           CPU_SCR1_ECO_ALLOWED:   equ 04h    ; MASK: ECO allowed to be enabled
 0001           CPU_SCR1_IRAMDIS:       equ 01h    ; MASK: Disable RAM initialization on WDR
 0000           
 00FF           CPU_SCR0:     equ 0FFh          ; CPU Status and Control Register #2       (#)
 0080           CPU_SCR0_GIE_MASK:      equ 80h    ; MASK: Global Interrupt Enable shadow
 0020           CPU_SCR0_WDRS_MASK:     equ 20h    ; MASK: Watch Dog Timer Reset
 0010           CPU_SCR0_PORS_MASK:     equ 10h    ; MASK: power-on reset bit PORS
 0008           CPU_SCR0_SLEEP_MASK:    equ 08h    ; MASK: Enable Sleep
 0001           CPU_SCR0_STOP_MASK:     equ 01h    ; MASK: Halt CPU bit
 0000           
 0000           
 0000           ;;=============================================================================
 0000           ;;      Register Space, Bank 1
 0000           ;;=============================================================================
 0000           
 0000           ;------------------------------------------------
 0000           ;  Port Registers
 0000           ;  Note: Also see this address range in Bank 0.
 0000           ;------------------------------------------------
 0000           ; Port 0
 0000           PRT0DM0:      equ 00h          ; Port 0 Drive Mode 0                      (RW)
 0001           PRT0DM1:      equ 01h          ; Port 0 Drive Mode 1                      (RW)
 0002           PRT0IC0:      equ 02h          ; Port 0 Interrupt Control 0               (RW)
 0003           PRT0IC1:      equ 03h          ; Port 0 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 1
 0004           PRT1DM0:      equ 04h          ; Port 1 Drive Mode 0                      (RW)
 0005           PRT1DM1:      equ 05h          ; Port 1 Drive Mode 1                      (RW)
 0006           PRT1IC0:      equ 06h          ; Port 1 Interrupt Control 0               (RW)
 0007           PRT1IC1:      equ 07h          ; Port 1 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 2
 0008           PRT2DM0:      equ 08h          ; Port 2 Drive Mode 0                      (RW)
 0009           PRT2DM1:      equ 09h          ; Port 2 Drive Mode 1                      (RW)
 000A           PRT2IC0:      equ 0Ah          ; Port 2 Interrupt Control 0               (RW)
 000B           PRT2IC1:      equ 0Bh          ; Port 2 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 3
 000C           PRT3DM0:      equ 0Ch          ; Port 3 Drive Mode 0                      (RW)
 000D           PRT3DM1:      equ 0Dh          ; Port 3 Drive Mode 1                      (RW)
 000E           PRT3IC0:      equ 0Eh          ; Port 3 Interrupt Control 0               (RW)
 000F           PRT3IC1:      equ 0Fh          ; Port 3 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 4
 0010           PRT4DM0:      equ 10h          ; Port 4 Drive Mode 0                      (RW)
 0011           PRT4DM1:      equ 11h          ; Port 4 Drive Mode 1                      (RW)
 0012           PRT4IC0:      equ 12h          ; Port 4 Interrupt Control 0               (RW)
 0013           PRT4IC1:      equ 13h          ; Port 4 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 5
 0014           PRT5DM0:      equ 14h          ; Port 5 Drive Mode 0                      (RW)
 0015           PRT5DM1:      equ 15h          ; Port 5 Drive Mode 1                      (RW)
 0016           PRT5IC0:      equ 16h          ; Port 5 Interrupt Control 0               (RW)
 0017           PRT5IC1:      equ 17h          ; Port 5 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 6
 0018           PRT6DM0:      equ 18h          ; Port 6 Drive Mode 0                      (RW)
 0019           PRT6DM1:      equ 19h          ; Port 6 Drive Mode 1                      (RW)
 001A           PRT6IC0:      equ 1Ah          ; Port 6 Interrupt Control 0               (RW)
 001B           PRT6IC1:      equ 1Bh          ; Port 6 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 7
 001C           PRT7DM0:      equ 1Ch          ; Port 7 Drive Mode 0                      (RW)
 001D           PRT7DM1:      equ 1Dh          ; Port 7 Drive Mode 1                      (RW)
 001E           PRT7IC0:      equ 1Eh          ; Port 7 Interrupt Control 0               (RW)
 001F           PRT7IC1:      equ 1Fh          ; Port 7 Interrupt Control 1               (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Digital PSoC(tm) block Registers
 0000           ;  Note: Also see this address range in Bank 0.
 0000           ;------------------------------------------------
 0000           
 0000           ; Digital PSoC block 00, Basic Type B
 0020           DBB00FN:      equ 20h          ; Function Register                        (RW)
 0021           DBB00IN:      equ 21h          ;    Input Register                        (RW)
 0022           DBB00OU:      equ 22h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 01, Basic Type B
 0024           DBB01FN:      equ 24h          ; Function Register                        (RW)
 0025           DBB01IN:      equ 25h          ;    Input Register                        (RW)
 0026           DBB01OU:      equ 26h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 02, Communications Type B
 0028           DCB02FN:      equ 28h          ; Function Register                        (RW)
 0029           DCB02IN:      equ 29h          ;    Input Register                        (RW)
 002A           DCB02OU:      equ 2Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 03, Communications Type B
 002C           DCB03FN:      equ 2Ch          ; Function Register                        (RW)
 002D           DCB03IN:      equ 2Dh          ;    Input Register                        (RW)
 002E           DCB03OU:      equ 2Eh          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 10, Basic Type B
 0030           DBB10FN:      equ 30h          ; Function Register                        (RW)
 0031           DBB10IN:      equ 31h          ;    Input Register                        (RW)
 0032           DBB10OU:      equ 32h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 11, Basic Type B
 0034           DBB11FN:      equ 34h          ; Function Register                        (RW)
 0035           DBB11IN:      equ 35h          ;    Input Register                        (RW)
 0036           DBB11OU:      equ 36h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 12, Communications Type B
 0038           DCB12FN:      equ 38h          ; Function Register                        (RW)
 0039           DCB12IN:      equ 39h          ;    Input Register                        (RW)
 003A           DCB12OU:      equ 3Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 13, Communications Type B
 003C           DCB13FN:      equ 3Ch          ; Function Register                        (RW)
 003D           DCB13IN:      equ 3Dh          ;    Input Register                        (RW)
 003E           DCB13OU:      equ 3Eh          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 20, Basic Type B
 0040           DBB20FN:      equ 40h          ; Function Register                        (RW)
 0041           DBB20IN:      equ 41h          ;    Input Register                        (RW)
 0042           DBB20OU:      equ 42h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 21, Basic Type B
 0044           DBB21FN:      equ 44h          ; Function Register                        (RW)
 0045           DBB21IN:      equ 45h          ;    Input Register                        (RW)
 0046           DBB21OU:      equ 46h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 22, Communications Type B
 0048           DCB22FN:      equ 48h          ; Function Register                        (RW)
 0049           DCB22IN:      equ 49h          ;    Input Register                        (RW)
 004A           DCB22OU:      equ 4Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 23, Communications Type B
 004C           DCB23FN:      equ 4Ch          ; Function Register                        (RW)
 004D           DCB23IN:      equ 4Dh          ;    Input Register                        (RW)
 004E           DCB23OU:      equ 4Eh          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 30, Basic Type B
 0050           DBB30FN:      equ 50h          ; Function Register                        (RW)
 0051           DBB30IN:      equ 51h          ;    Input Register                        (RW)
 0052           DBB30OU:      equ 52h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 31, Basic Type B
 0054           DBB31FN:      equ 54h          ; Function Register                        (RW)
 0055           DBB31IN:      equ 55h          ;    Input Register                        (RW)
 0056           DBB31OU:      equ 56h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 32, Communications Type B
 0058           DCB32FN:      equ 58h          ; Function Register                        (RW)
 0059           DCB32IN:      equ 59h          ;    Input Register                        (RW)
 005A           DCB32OU:      equ 5Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 33, Communications Type B
 005C           DCB33FN:      equ 5Ch          ; Function Register                        (RW)
 005D           DCB33IN:      equ 5Dh          ;    Input Register                        (RW)
 005E           DCB33OU:      equ 5Eh          ;   Output Register                        (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  System and Global Resource Registers
 0000           ;  Note: Also see this address range in Bank 0.
 0000           ;------------------------------------------------
 0000           
 0060           CLK_CR0:      equ 60h          ; Analog Column Clock Select Register 0    (RW)
 00C0           CLK_CR0_ACOLUMN_3:    equ 0C0h    ; MASK: Specify clock for analog cloumn
 0030           CLK_CR0_ACOLUMN_2:    equ 30h    ; MASK: Specify clock for analog cloumn
 000C           CLK_CR0_ACOLUMN_1:    equ 0Ch    ; MASK: Specify clock for analog cloumn
 0003           CLK_CR0_ACOLUMN_0:    equ 03h    ; MASK: Specify clock for analog cloumn
 0000           
 0061           CLK_CR1:      equ 61h          ; Analog Clock Source Select Register 1    (RW)
 0040           CLK_CR1_SHDIS:        equ 40h    ; MASK: Sample and Hold Disable (all Columns)
 0038           CLK_CR1_ACLK1:        equ 38h    ; MASK: Digital PSoC block for analog source
 0007           CLK_CR1_ACLK2:        equ 07h    ; MASK: Digital PSoC block for analog source
 0000           
 0062           ABF_CR0:      equ 62h          ; Analog Output Buffer Control Register 0  (RW)
 0080           ABF_CR0_ACOL1MUX:     equ 80h    ; MASK: Analog Column 1 Mux control
 0040           ABF_CR0_ACOL2MUX:     equ 40h    ; MASK: Analog Column 2 Mux control
 0020           ABF_CR0_ABUF1EN:      equ 20h    ; MASK: Enable ACol 1 analog buffer (P0[5])
 0010           ABF_CR0_ABUF2EN:      equ 10h    ; MASK: Enable ACol 2 analog buffer (P0[4])
 0008           ABF_CR0_ABUF0EN:      equ 08h    ; MASK: Enable ACol 0 analog buffer (P0[3])
 0004           ABF_CR0_ABUF3EN:      equ 04h    ; MASK: Enable ACol 3 analog buffer (P0[2])
 0002           ABF_CR0_BYPASS:       equ 02h    ; MASK: Bypass the analog buffers
 0001           ABF_CR0_PWR:          equ 01h    ; MASK: High power mode on all analog buffers
 0000           
 0063           AMD_CR0:      equ 63h          ; Analog Modulator Control Register 0      (RW)
 0070           AMD_CR0_AMOD2:        equ 70h    ; MASK: Modulation source for analog column 2
 0007           AMD_CR0_AMOD0:        equ 07h    ; MASK: Modulation source for analog column 1
 0000           
 0066           AMD_CR1:      equ 66h          ; Analog Modulator Control Register 1      (RW)
 0070           AMD_CR1_AMOD3:        equ 70h    ; MASK: Modulation ctrl for analog column 3
 0007           AMD_CR1_AMOD1:        equ 07h    ; MASK: Modulation ctrl for analog column 1
 0000           
 0067           ALT_CR0:      equ 67h          ; Analog Look Up Table (LUT) Register 0    (RW)
 00F0           ALT_CR0_LUT1:         equ 0F0h    ; MASK: Look up table 1 selection
 000F           ALT_CR0_LUT0:         equ 0Fh    ; MASK: Look up table 0 selection
 0000           
 0068           ALT_CR1:      equ 68h          ; Analog Look Up Table (LUT) Register 1    (RW)
 00F0           ALT_CR1_LUT3:         equ 0F0h    ; MASK: Look up table 3 selection
 000F           ALT_CR1_LUT2:         equ 0Fh    ; MASK: Look up table 2 selection
 0000           
 0069           CLK_CR2:      equ 69h          ; Analog Clock Source Control Register 2   (RW)
 0008           CLK_CR2_ACLK1R:       equ 08h    ; MASK: Analog Clock 1 selection range
 0001           CLK_CR2_ACLK0R:       equ 01h    ; MASK: Analog Clock 0 selection range
 0000           
 0000           ;------------------------------------------------
 0000           ;  Global Digital Interconnects
 0000           ;------------------------------------------------
 0000           
 00D0           GDI_O_IN:     equ 0D0h          ; Global Dig Interconnect Odd Inputs Reg   (RW)
 00D1           GDI_E_IN:     equ 0D1h          ; Global Dig Interconnect Even Inputs Reg  (RW)
 00D2           GDI_O_OU:     equ 0D2h          ; Global Dig Interconnect Odd Outputs Reg  (RW)
 00D3           GDI_E_OU:     equ 0D3h          ; Global Dig Interconnect Even Outputs Reg (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Clock and System Control Registers
 0000           ;------------------------------------------------
 0000           
 00DD           OSC_GO_EN:    equ 0DDh          ; Oscillator to Global Outputs Enable Register (RW)
 0080           OSC_GOEN_SLPINT:      equ 80h	 ; Enable Sleep Timer onto GOE[7]
 0040           OSC_GOEN_VC3:         equ 40h    ; Enable VC3 onto GOE[6]
 0020           OSC_GOEN_VC2:         equ 20h    ; Enable VC2 onto GOE[5]
 0010           OSC_GOEN_VC1:         equ 10h    ; Enable VC1 onto GOE[4]
 0008           OSC_GOEN_SYSCLKX2:    equ 08h    ; Enable 2X SysClk onto GOE[3]
 0004           OSC_GOEN_SYSCLK:      equ 04h    ; Enable 1X SysClk onto GOE[2]
 0002           OSC_GOEN_CLK24M:      equ 02h    ; Enable 24 MHz clock onto GOE[1]
 0001           OSC_GOEN_CLK32K:      equ 01h    ; Enable 32 kHz clock onto GOE[0]
 0000           
 00DE           OSC_CR4:      equ 0DEh          ; Oscillator Control Register 4            (RW)
 0003           OSC_CR4_VC3:          equ 03h    ; MASK: System VC3 Clock source
 0000           
 00DF           OSC_CR3:      equ 0DFh          ; Oscillator Control Register 3            (RW)
 0000           
 00E0           OSC_CR0:      equ 0E0h          ; System Oscillator Control Register 0     (RW)
 0080           OSC_CR0_32K_SELECT:   equ 80h    ; MASK: Enable/Disable External XTAL Osc
 0040           OSC_CR0_PLL_MODE:     equ 40h    ; MASK: Enable/Disable PLL
 0020           OSC_CR0_NO_BUZZ:      equ 20h    ; MASK: Bandgap always powered/BUZZ bandgap
 0018           OSC_CR0_SLEEP:        equ 18h    ; MASK: Set Sleep timer freq/period
 0000           OSC_CR0_SLEEP_512Hz:  equ 00h    ;     Set sleep bits for 1.95ms period
 0008           OSC_CR0_SLEEP_64Hz:   equ 08h    ;     Set sleep bits for 15.6ms period
 0010           OSC_CR0_SLEEP_8Hz:    equ 10h    ;     Set sleep bits for 125ms period
 0018           OSC_CR0_SLEEP_1Hz:    equ 18h    ;     Set sleep bits for 1 sec period
 0007           OSC_CR0_CPU:          equ 07h    ; MASK: Set CPU Frequency
 0000           OSC_CR0_CPU_3MHz:     equ 00h    ;     set CPU Freq bits for 3MHz Operation
 0001           OSC_CR0_CPU_6MHz:     equ 01h    ;     set CPU Freq bits for 6MHz Operation
 0002           OSC_CR0_CPU_12MHz:    equ 02h    ;     set CPU Freq bits for 12MHz Operation
 0003           OSC_CR0_CPU_24MHz:    equ 03h    ;     set CPU Freq bits for 24MHz Operation
 0004           OSC_CR0_CPU_1d5MHz:   equ 04h    ;     set CPU Freq bits for 1.5MHz Operation
 0005           OSC_CR0_CPU_750kHz:   equ 05h    ;     set CPU Freq bits for 750kHz Operation
 0006           OSC_CR0_CPU_187d5kHz: equ 06h    ;     set CPU Freq bits for 187.5kHz Operation
 0007           OSC_CR0_CPU_93d7kHz:  equ 07h    ;     set CPU Freq bits for 93.7kHz Operation
 0000           
 00E1           OSC_CR1:      equ 0E1h          ; System VC1/VC2 Divider Control Register  (RW)
 00F0           OSC_CR1_VC1:          equ 0F0h    ; MASK: System VC1 24MHz/External Clk divider
 000F           OSC_CR1_VC2:          equ 0Fh    ; MASK: System VC2 24MHz/External Clk divider
 0000           
 00E2           OSC_CR2:      equ 0E2h          ; Oscillator Control Register 2            (RW)
 0004           OSC_CR2_EXTCLKEN:     equ 04h    ; MASK: Enable/Disable External Clock
 0001           OSC_CR2_SYSCLKX2DIS:  equ 01h    ; MASK: Enable/Disable 48MHz clock source
 0000           
 00E3           VLT_CR:       equ 0E3h          ; Voltage Monitor Control Register         (RW)
 0080           VLT_CR_SMP:           equ 80h    ; MASK: Enable Switch Mode Pump
 0030           VLT_CR_PORLEV:        equ 30h    ; MASK: Mask for Power on Reset level control
 0000           VLT_CR_POR_LOW:       equ 00h    ;   Lowest  Precision Power-on Reset trip point
 0010           VLT_CR_POR_MID:       equ 10h    ;   Middle  Precision Power-on Reset trip point
 0020           VLT_CR_POR_HIGH:      equ 20h    ;   Highest Precision Power-on Reset trip point
 0008           VLT_CR_LVDTBEN:       equ 08h    ; MASK: Enable the CPU Throttle Back on LVD
 0007           VLT_CR_VM:            equ 07h    ; MASK: Mask for Voltage Monitor level setting
 0000           VLT_CR_3V0_POR:       equ 00h    ; -- deprecated symbols --
 0010           VLT_CR_4V5_POR:       equ 10h    ;    deprecated
 0020           VLT_CR_4V75_POR:      equ 20h    ;    deprecated
 0030           VLT_CR_DISABLE:       equ 30h    ;    deprecated
 0000           
 00E4           VLT_CMP:      equ 0E4h          ; Voltage Monitor Comparators Register     (R)
 0004           VLT_CMP_PUMP:         equ 04h    ; MASK: Vcc below SMP trip level
 0002           VLT_CMP_LVD:          equ 02h    ; MASK: Vcc below LVD trip level
 0001           VLT_CMP_PPOR:         equ 01h    ; MASK: Vcc below PPOR trip level
 0000           
 00E7           DEC_CR2:      equ 0E7h          ; Decimator Control Register 2             (RW)
 00E8           IMO_TR:       equ 0E8h          ; Internal Main Oscillator Trim Register   (W)
 00E9           ILO_TR:       equ 0E9h          ; Internal Low-speed Oscillator Trim       (W)
 00EA           BDG_TR:       equ 0EAh          ; Band Gap Trim Register                   (W)
 00EB           ECO_TR:       equ 0EBh          ; External Oscillator Trim Register        (W)
 0000           
 0000           ;;=============================================================================
 0000           ;;      M8C System Macros
 0000           ;;  These macros should be used when their functions are needed.
 0000           ;;=============================================================================
 0000           
 0000           ;----------------------------------------------------
 0000           ;  Swapping Register Banks
 0000           ;----------------------------------------------------
 0000               macro M8C_SetBank0
 0000               and   F, ~FLAG_XIO_MASK
 0000               macro M8C_SetBank1
 0000               or    F, FLAG_XIO_MASK
 0000               macro M8C_EnableGInt
 0000               or    F, FLAG_GLOBAL_IE
 0000               macro M8C_DisableGInt
 0000               and   F, ~FLAG_GLOBAL_IE
 0000               macro M8C_DisableIntMask
 0000               and   reg[@0], ~@1              ; disable specified interrupt enable bit
 0000               macro M8C_EnableIntMask
 0000               or    reg[@0], @1               ; enable specified interrupt enable bit
 0000               macro M8C_ClearIntFlag
 0000               mov   reg[@0], ~@1              ; clear specified interrupt enable bit
 0000               macro M8C_EnableWatchDog
 0000               and   reg[CPU_SCR0], ~CPU_SCR0_PORS_MASK
 0000               macro M8C_ClearWDT
 0000               mov   reg[RES_WDT], 00h
 0000               macro M8C_ClearWDTAndSleep
 0000               mov   reg[RES_WDT], 38h
 0000               macro M8C_Stall
 0000               or    reg[ASY_CR], ASY_CR_SYNCEN
 0000               macro M8C_Unstall
 0000               and   reg[ASY_CR], ~ASY_CR_SYNCEN
 0000               macro M8C_Sleep
 0000               or    reg[CPU_SCR0], CPU_SCR0_SLEEP_MASK
 0000               ; The next instruction to be executed depends on the state of the
 0000               ; various interrupt enable bits. If some interrupts are enabled
 0000               ; and the global interrupts are disabled, the next instruction will
 0000               ; be the one that follows the invocation of this macro. If global
 0000               ; interrupts are also enabled then the next instruction will be
 0000               ; from the interrupt vector table. If no interrupts are enabled
 0000               ; then the CPU sleeps forever.
 0000               macro M8C_Stop
 0000               ; In general, you probably don't want to do this, but here's how:
 0000               or    reg[CPU_SCR0], CPU_SCR0_STOP_MASK
 0000               ; Next instruction to be executed is located in the interrupt
 0000               ; vector table entry for Power-On Reset.
 0000               macro M8C_Reset
 0000               ; Restore CPU to the power-on reset state.
 0000               mov A, 0
 0000               SSC
 0000               ; Next non-supervisor instruction will be at interrupt vector 0.
 0000               macro Suspend_CodeCompressor
 0000               or   F, 0
 0000               macro Resume_CodeCompressor
 0000               add  SP, 0
 0000           LPF2_2_OFF:                                      equ 0
 0001           LPF2_2_LOWPOWER:                                 equ 1
 0002           LPF2_2_MEDPOWER:                                 equ 2
 0003           LPF2_2_HIGHPOWER:                                equ 3
 0000           
 0000           LPF2_2_FEEDBACK_16:                              equ 0
 0001           LPF2_2_FEEDBACK_32:                              equ 1
 0000           
 0000           LPF2_2_POLARITY_INVERTING:                       equ 0
 0001           LPF2_2_POLARITY_NON_INVERTING:                   equ 1
 0000           
 0070           LPF2_2_AMD_MSK:         equ 0x70
 0000           LPF2_2_AMD_VAL:         equ 0x0
 0000           
 0000           ;--------------------------------------------------
 0000           ; Registers used by LPF2_2
 0000           ;--------------------------------------------------
 0000           
 0088           LPF2_2_FLIN_CR0:    equ 88h                      ; SCA Block Control Register 0
 0089           LPF2_2_FLIN_CR1:    equ 89h                      ; SCA Block Control Register 1
 008A           LPF2_2_FLIN_CR2:    equ 8ah                      ; SCA Block Control Register 2
 008B           LPF2_2_FLIN_CR3:    equ 8bh                      ; SCA Block Control Register 3
 008C           LPF2_2_FLOUT_CR0:   equ 8ch                      ; SCA Block Control Register 0
 008D           LPF2_2_FLOUT_CR1:   equ 8dh                      ; SCA Block Control Register 1
 008E           LPF2_2_FLOUT_CR2:   equ 8eh                      ; SCA Block Control Register 2
 008F           LPF2_2_FLOUT_CR3:   equ 8fh                      ; SCA Block Control Register 3
 0000           
 0000           ; UM Cap naming convention per Gregorian and Temes, p293
 0000           
 0088           LPF2_2_FILT_C1_REG: equ 88h
 0089           LPF2_2_FILT_C2_REG: equ 89h
 008C           LPF2_2_FILT_C3_REG: equ 8ch
 008E           LPF2_2_FILT_C4_REG: equ 8eh
 0088           LPF2_2_FILT_CA_REG: equ 88h
 008C           LPF2_2_FILT_CB_REG: equ 8ch
 0000           
 0063           LPF2_2_AMD_REG:         equ 63h
 0000           
 0000           ; end of file LPF2_2.inc
 0000           PGA_1_OFF:         equ 0
 0001           PGA_1_LOWPOWER:    equ 1
 0002           PGA_1_MEDPOWER:    equ 2
 0003           PGA_1_HIGHPOWER:   equ 3
 0000           
 000C           PGA_1_G48_0:       equ 0Ch
 001C           PGA_1_G24_0:       equ 1Ch
 0008           PGA_1_G16_0:       equ 08h
 0018           PGA_1_G8_00:       equ 18h
 0028           PGA_1_G5_33:       equ 28h
 0038           PGA_1_G4_00:       equ 38h
 0048           PGA_1_G3_20:       equ 48h
 0058           PGA_1_G2_67:       equ 58h
 0068           PGA_1_G2_27:       equ 68h
 0078           PGA_1_G2_00:       equ 78h
 0088           PGA_1_G1_78:       equ 88h
 0098           PGA_1_G1_60:       equ 98h
 00A8           PGA_1_G1_46:       equ A8h
 00B8           PGA_1_G1_33:       equ B8h
 00C8           PGA_1_G1_23:       equ C8h
 00D8           PGA_1_G1_14:       equ D8h
 00E8           PGA_1_G1_06:       equ E8h
 00F8           PGA_1_G1_00:       equ F8h
 00E0           PGA_1_G0_93:       equ E0h
 00D0           PGA_1_G0_87:       equ D0h
 00C0           PGA_1_G0_81:       equ C0h
 00B0           PGA_1_G0_75:       equ B0h
 00A0           PGA_1_G0_68:       equ A0h
 0090           PGA_1_G0_62:       equ 90h
 0080           PGA_1_G0_56:       equ 80h
 0070           PGA_1_G0_50:       equ 70h
 0060           PGA_1_G0_43:       equ 60h
 0050           PGA_1_G0_37:       equ 50h
 0040           PGA_1_G0_31:       equ 40h
 0030           PGA_1_G0_25:       equ 30h
 0020           PGA_1_G0_18:       equ 20h
 0010           PGA_1_G0_12:       equ 10h
 0000           PGA_1_G0_06:       equ 00h
 0000           
 0000           PGA_1_AGNDBUFAPI:  equ 0
 0000           
 0000           ;--------------------------------------------------
 0000           ; Register Address Constants used by PGA_1
 0000           ;--------------------------------------------------
 0071           PGA_1_GAIN_CR0: equ 71h
 0072           PGA_1_GAIN_CR1: equ 72h
 0073           PGA_1_GAIN_CR2: equ 73h
 0070           PGA_1_GAIN_CR3: equ 70h
 0000           
 0000           PGA_2_OFF:         equ 0
 0001           PGA_2_LOWPOWER:    equ 1
 0002           PGA_2_MEDPOWER:    equ 2
 0003           PGA_2_HIGHPOWER:   equ 3
 0000           
 000C           PGA_2_G48_0:       equ 0Ch
 001C           PGA_2_G24_0:       equ 1Ch
 0008           PGA_2_G16_0:       equ 08h
 0018           PGA_2_G8_00:       equ 18h
 0028           PGA_2_G5_33:       equ 28h
 0038           PGA_2_G4_00:       equ 38h
 0048           PGA_2_G3_20:       equ 48h
 0058           PGA_2_G2_67:       equ 58h
 0068           PGA_2_G2_27:       equ 68h
 0078           PGA_2_G2_00:       equ 78h
 0088           PGA_2_G1_78:       equ 88h
 0098           PGA_2_G1_60:       equ 98h
 00A8           PGA_2_G1_46:       equ A8h
 00B8           PGA_2_G1_33:       equ B8h
 00C8           PGA_2_G1_23:       equ C8h
 00D8           PGA_2_G1_14:       equ D8h
 00E8           PGA_2_G1_06:       equ E8h
 00F8           PGA_2_G1_00:       equ F8h
 00E0           PGA_2_G0_93:       equ E0h
 00D0           PGA_2_G0_87:       equ D0h
 00C0           PGA_2_G0_81:       equ C0h
 00B0           PGA_2_G0_75:       equ B0h
 00A0           PGA_2_G0_68:       equ A0h
 0090           PGA_2_G0_62:       equ 90h
 0080           PGA_2_G0_56:       equ 80h
 0070           PGA_2_G0_50:       equ 70h
 0060           PGA_2_G0_43:       equ 60h
 0050           PGA_2_G0_37:       equ 50h
 0040           PGA_2_G0_31:       equ 40h
 0030           PGA_2_G0_25:       equ 30h
 0020           PGA_2_G0_18:       equ 20h
 0010           PGA_2_G0_12:       equ 10h
 0000           PGA_2_G0_06:       equ 00h
 0000           
 0000           PGA_2_AGNDBUFAPI:  equ 0
 0000           
 0000           ;--------------------------------------------------
 0000           ; Register Address Constants used by PGA_2
 0000           ;--------------------------------------------------
 0075           PGA_2_GAIN_CR0: equ 75h
 0076           PGA_2_GAIN_CR1: equ 76h
 0077           PGA_2_GAIN_CR2: equ 77h
 0074           PGA_2_GAIN_CR3: equ 74h
 0000           
 0000           PGA_3_OFF:         equ 0
 0001           PGA_3_LOWPOWER:    equ 1
 0002           PGA_3_MEDPOWER:    equ 2
 0003           PGA_3_HIGHPOWER:   equ 3
 0000           
 000C           PGA_3_G48_0:       equ 0Ch
 001C           PGA_3_G24_0:       equ 1Ch
 0008           PGA_3_G16_0:       equ 08h
 0018           PGA_3_G8_00:       equ 18h
 0028           PGA_3_G5_33:       equ 28h
 0038           PGA_3_G4_00:       equ 38h
 0048           PGA_3_G3_20:       equ 48h
 0058           PGA_3_G2_67:       equ 58h
 0068           PGA_3_G2_27:       equ 68h
 0078           PGA_3_G2_00:       equ 78h
 0088           PGA_3_G1_78:       equ 88h
 0098           PGA_3_G1_60:       equ 98h
 00A8           PGA_3_G1_46:       equ A8h
 00B8           PGA_3_G1_33:       equ B8h
 00C8           PGA_3_G1_23:       equ C8h
 00D8           PGA_3_G1_14:       equ D8h
 00E8           PGA_3_G1_06:       equ E8h
 00F8           PGA_3_G1_00:       equ F8h
 00E0           PGA_3_G0_93:       equ E0h
 00D0           PGA_3_G0_87:       equ D0h
 00C0           PGA_3_G0_81:       equ C0h
 00B0           PGA_3_G0_75:       equ B0h
 00A0           PGA_3_G0_68:       equ A0h
 0090           PGA_3_G0_62:       equ 90h
 0080           PGA_3_G0_56:       equ 80h
 0070           PGA_3_G0_50:       equ 70h
 0060           PGA_3_G0_43:       equ 60h
 0050           PGA_3_G0_37:       equ 50h
 0040           PGA_3_G0_31:       equ 40h
 0030           PGA_3_G0_25:       equ 30h
 0020           PGA_3_G0_18:       equ 20h
 0010           PGA_3_G0_12:       equ 10h
 0000           PGA_3_G0_06:       equ 00h
 0000           
 0000           PGA_3_AGNDBUFAPI:  equ 0
 0000           
 0000           ;--------------------------------------------------
 0000           ; Register Address Constants used by PGA_3
 0000           ;--------------------------------------------------
 0079           PGA_3_GAIN_CR0: equ 79h
 007A           PGA_3_GAIN_CR1: equ 7ah
 007B           PGA_3_GAIN_CR2: equ 7bh
 0078           PGA_3_GAIN_CR3: equ 78h
 0000           
 0000           PGA_4_OFF:         equ 0
 0001           PGA_4_LOWPOWER:    equ 1
 0002           PGA_4_MEDPOWER:    equ 2
 0003           PGA_4_HIGHPOWER:   equ 3
 0000           
 000C           PGA_4_G48_0:       equ 0Ch
 001C           PGA_4_G24_0:       equ 1Ch
 0008           PGA_4_G16_0:       equ 08h
 0018           PGA_4_G8_00:       equ 18h
 0028           PGA_4_G5_33:       equ 28h
 0038           PGA_4_G4_00:       equ 38h
 0048           PGA_4_G3_20:       equ 48h
 0058           PGA_4_G2_67:       equ 58h
 0068           PGA_4_G2_27:       equ 68h
 0078           PGA_4_G2_00:       equ 78h
 0088           PGA_4_G1_78:       equ 88h
 0098           PGA_4_G1_60:       equ 98h
 00A8           PGA_4_G1_46:       equ A8h
 00B8           PGA_4_G1_33:       equ B8h
 00C8           PGA_4_G1_23:       equ C8h
 00D8           PGA_4_G1_14:       equ D8h
 00E8           PGA_4_G1_06:       equ E8h
 00F8           PGA_4_G1_00:       equ F8h
 00E0           PGA_4_G0_93:       equ E0h
 00D0           PGA_4_G0_87:       equ D0h
 00C0           PGA_4_G0_81:       equ C0h
 00B0           PGA_4_G0_75:       equ B0h
 00A0           PGA_4_G0_68:       equ A0h
 0090           PGA_4_G0_62:       equ 90h
 0080           PGA_4_G0_56:       equ 80h
 0070           PGA_4_G0_50:       equ 70h
 0060           PGA_4_G0_43:       equ 60h
 0050           PGA_4_G0_37:       equ 50h
 0040           PGA_4_G0_31:       equ 40h
 0030           PGA_4_G0_25:       equ 30h
 0020           PGA_4_G0_18:       equ 20h
 0010           PGA_4_G0_12:       equ 10h
 0000           PGA_4_G0_06:       equ 00h
 0000           
 0000           PGA_4_AGNDBUFAPI:  equ 0
 0000           
 0000           ;--------------------------------------------------
 0000           ; Register Address Constants used by PGA_4
 0000           ;--------------------------------------------------
 007D           PGA_4_GAIN_CR0: equ 7dh
 007E           PGA_4_GAIN_CR1: equ 7eh
 007F           PGA_4_GAIN_CR2: equ 7fh
 007C           PGA_4_GAIN_CR3: equ 7ch
 0000           
 00C0           FLAG_PGMODE_MASK:  equ 0C0h     ; Paging control for > 256 bytes of RAM
 0000           FLAG_PGMODE_0:     equ 00h       ; Direct to Page 0,      indexed to Page 0
 0040           FLAG_PGMODE_1:     equ 40h       ; Direct to Page 0,      indexed to STK_PP page
 0080           FLAG_PGMODE_2:     equ 80h       ; Direct to CUR_PP page, indexed to IDX_PP page
 00C0           FLAG_PGMODE_3:     equ 0C0h       ; Direct to CUR_PP page, indexed to STK_PP page
 0000           FLAG_PGMODE_00b:   equ 00h       ; Same as PGMODE_0
 0040           FLAG_PGMODE_01b:   equ 40h       ; Same as PGMODE_1
 0080           FLAG_PGMODE_10b:   equ 80h       ; Same as PGMODE_2
 00C0           FLAG_PGMODE_11b:   equ 0C0h       ; Same as PGMODE_3
 0010           FLAG_XIO_MASK:     equ 10h     ; I/O Bank select for register space
 0008           FLAG_SUPER:        equ 08h     ; Supervisor Mode
 0004           FLAG_CARRY:        equ 04h     ; Carry Condition Flag
 0002           FLAG_ZERO:         equ 02h     ; Zero  Condition Flag
 0001           FLAG_GLOBAL_IE:    equ 01h     ; Glogal Interrupt Enable
 0000           
 0000           
 0000           ;;=============================================================================
 0000           ;;      Register Space, Bank 0
 0000           ;;=============================================================================
 0000           
 0000           ;------------------------------------------------
 0000           ;  Port Registers
 0000           ;  Note: Also see this address range in Bank 1.
 0000           ;------------------------------------------------
 0000           ; Port 0
 0000           PRT0DR:       equ 00h          ; Port 0 Data Register                     (RW)
 0001           PRT0IE:       equ 01h          ; Port 0 Interrupt Enable Register         (RW)
 0002           PRT0GS:       equ 02h          ; Port 0 Global Select Register            (RW)
 0003           PRT0DM2:      equ 03h          ; Port 0 Drive Mode 2                      (RW)
 0000           ; Port 1
 0004           PRT1DR:       equ 04h          ; Port 1 Data Register                     (RW)
 0005           PRT1IE:       equ 05h          ; Port 1 Interrupt Enable Register         (RW)
 0006           PRT1GS:       equ 06h          ; Port 1 Global Select Register            (RW)
 0007           PRT1DM2:      equ 07h          ; Port 1 Drive Mode 2                      (RW)
 0000           ; Port 2
 0008           PRT2DR:       equ 08h          ; Port 2 Data Register                     (RW)
 0009           PRT2IE:       equ 09h          ; Port 2 Interrupt Enable Register         (RW)
 000A           PRT2GS:       equ 0Ah          ; Port 2 Global Select Register            (RW)
 000B           PRT2DM2:      equ 0Bh          ; Port 2 Drive Mode 2                      (RW)
 0000           ; Port 3
 000C           PRT3DR:       equ 0Ch          ; Port 3 Data Register                     (RW)
 000D           PRT3IE:       equ 0Dh          ; Port 3 Interrupt Enable Register         (RW)
 000E           PRT3GS:       equ 0Eh          ; Port 3 Global Select Register            (RW)
 000F           PRT3DM2:      equ 0Fh          ; Port 3 Drive Mode 2                      (RW)
 0000           ; Port 4
 0010           PRT4DR:       equ 10h          ; Port 4 Data Register                     (RW)
 0011           PRT4IE:       equ 11h          ; Port 4 Interrupt Enable Register         (RW)
 0012           PRT4GS:       equ 12h          ; Port 4 Global Select Register            (RW)
 0013           PRT4DM2:      equ 13h          ; Port 4 Drive Mode 2                      (RW)
 0000           ; Port 5
 0014           PRT5DR:       equ 14h          ; Port 5 Data Register                     (RW)
 0015           PRT5IE:       equ 15h          ; Port 5 Interrupt Enable Register         (RW)
 0016           PRT5GS:       equ 16h          ; Port 5 Global Select Register            (RW)
 0017           PRT5DM2:      equ 17h          ; Port 5 Drive Mode 2                      (RW)
 0000           ; Port 6
 0018           PRT6DR:       equ 18h          ; Port 6 Data Register                     (RW)
 0019           PRT6IE:       equ 19h          ; Port 6 Interrupt Enable Register         (RW)
 001A           PRT6GS:       equ 1Ah          ; Port 6 Global Select Register            (RW)
 001B           PRT6DM2:      equ 1Bh          ; Port 6 Drive Mode 2                      (RW)
 0000           ; Port 7
 001C           PRT7DR:       equ 1Ch          ; Port 7 Data Register                     (RW)
 001D           PRT7IE:       equ 1Dh          ; Port 7 Interrupt Enable Register         (RW)
 001E           PRT7GS:       equ 1Eh          ; Port 7 Global Select Register            (RW)
 001F           PRT7DM2:      equ 1Fh          ; Port 7 Drive Mode 2                      (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Digital PSoC(tm) block Registers
 0000           ;  Note: Also see this address range in Bank 1.
 0000           ;------------------------------------------------
 0000           ; Digital PSoC block 00, Basic Type B
 0020           DBB00DR0:     equ 20h          ; data register 0                          (#)
 0021           DBB00DR1:     equ 21h          ; data register 1                          (W)
 0022           DBB00DR2:     equ 22h          ; data register 2                          (RW)
 0023           DBB00CR0:     equ 23h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 01, Basic Type B
 0024           DBB01DR0:     equ 24h          ; data register 0                          (#)
 0025           DBB01DR1:     equ 25h          ; data register 1                          (W)
 0026           DBB01DR2:     equ 26h          ; data register 2                          (RW)
 0027           DBB01CR0:     equ 27h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 02, Communications Type B
 0028           DCB02DR0:     equ 28h          ; data register 0                          (#)
 0029           DCB02DR1:     equ 29h          ; data register 1                          (W)
 002A           DCB02DR2:     equ 2Ah          ; data register 2                          (RW)
 002B           DCB02CR0:     equ 2Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 03, Communications Type B
 002C           DCB03DR0:     equ 2Ch          ; data register 0                          (#)
 002D           DCB03DR1:     equ 2Dh          ; data register 1                          (W)
 002E           DCB03DR2:     equ 2Eh          ; data register 2                          (RW)
 002F           DCB03CR0:     equ 2Fh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 10, Basic Type B
 0030           DBB10DR0:     equ 30h          ; data register 0                          (#)
 0031           DBB10DR1:     equ 31h          ; data register 1                          (W)
 0032           DBB10DR2:     equ 32h          ; data register 2                          (RW)
 0033           DBB10CR0:     equ 33h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 11, Basic Type B
 0034           DBB11DR0:     equ 34h          ; data register 0                          (#)
 0035           DBB11DR1:     equ 35h          ; data register 1                          (W)
 0036           DBB11DR2:     equ 36h          ; data register 2                          (RW)
 0037           DBB11CR0:     equ 37h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 12, Communications Type B
 0038           DCB12DR0:     equ 38h          ; data register 0                          (#)
 0039           DCB12DR1:     equ 39h          ; data register 1                          (W)
 003A           DCB12DR2:     equ 3Ah          ; data register 2                          (RW)
 003B           DCB12CR0:     equ 3Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 13, Communications Type B
 003C           DCB13DR0:     equ 3Ch          ; data register 0                          (#)
 003D           DCB13DR1:     equ 3Dh          ; data register 1                          (W)
 003E           DCB13DR2:     equ 3Eh          ; data register 2                          (RW)
 003F           DCB13CR0:     equ 3Fh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 20, Basic Type B
 0040           DBB20DR0:     equ 40h          ; data register 0                          (#)
 0041           DBB20DR1:     equ 41h          ; data register 1                          (W)
 0042           DBB20DR2:     equ 42h          ; data register 2                          (RW)
 0043           DBB20CR0:     equ 43h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 21, Basic Type B
 0044           DBB21DR0:     equ 44h          ; data register 0                          (#)
 0045           DBB21DR1:     equ 45h          ; data register 1                          (W)
 0046           DBB21DR2:     equ 46h          ; data register 2                          (RW)
 0047           DBB21CR0:     equ 47h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 22, Communications Type B
 0048           DCB22DR0:     equ 48h          ; data register 0                          (#)
 0049           DCB22DR1:     equ 49h          ; data register 1                          (W)
 004A           DCB22DR2:     equ 4Ah          ; data register 2                          (RW)
 004B           DCB22CR0:     equ 4Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 23, Communications Type B
 004C           DCB23DR0:     equ 4Ch          ; data register 0                          (#)
 004D           DCB23DR1:     equ 4Dh          ; data register 1                          (W)
 004E           DCB23DR2:     equ 4Eh          ; data register 2                          (RW)
 004F           DCB23CR0:     equ 4Fh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 30, Basic Type B
 0050           DBB30DR0:     equ 50h          ; data register 0                          (#)
 0051           DBB30DR1:     equ 51h          ; data register 1                          (W)
 0052           DBB30DR2:     equ 52h          ; data register 2                          (RW)
 0053           DBB30CR0:     equ 53h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 31, Basic Type B
 0054           DBB31DR0:     equ 54h          ; data register 0                          (#)
 0055           DBB31DR1:     equ 55h          ; data register 1                          (W)
 0056           DBB31DR2:     equ 56h          ; data register 2                          (RW)
 0057           DBB31CR0:     equ 57h          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 32, Communications Type B
 0058           DCB32DR0:     equ 58h          ; data register 0                          (#)
 0059           DCB32DR1:     equ 59h          ; data register 1                          (W)
 005A           DCB32DR2:     equ 5Ah          ; data register 2                          (RW)
 005B           DCB32CR0:     equ 5Bh          ; control & status register 0              (#)
 0000           
 0000           ; Digital PSoC block 33, Communications Type B
 005C           DCB33DR0:     equ 5Ch          ; data register 0                          (#)
 005D           DCB33DR1:     equ 5Dh          ; data register 1                          (W)
 005E           DCB33DR2:     equ 5Eh          ; data register 2                          (RW)
 005F           DCB33CR0:     equ 5Fh          ; control & status register 0              (#)
 0000           
 0000           ;-------------------------------------
 0000           ;  Analog Resource Control Registers
 0000           ;-------------------------------------
 0060           AMX_IN:       equ 60h          ; Analog Input Multiplexor Control         (RW)
 00C0           AMX_IN_ACI3:          equ 0C0h    ; MASK: column 3 input mux
 0030           AMX_IN_ACI2:          equ 30h    ; MASK: column 2 input mux
 000C           AMX_IN_ACI1:          equ 0Ch    ; MASK: column 1 input mux
 0003           AMX_IN_ACI0:          equ 03h    ; MASK: column 0 input mux
 0000           
 0063           ARF_CR:       equ 63h          ; Analog Reference Control Register        (RW)
 0040           ARF_CR_HBE:           equ 40h    ; MASK: Bias level control
 0038           ARF_CR_REF:           equ 38h    ; MASK: Analog Reference controls
 0007           ARF_CR_REFPWR:        equ 07h    ; MASK: Analog Reference power
 0004           ARF_CR_APWR:          equ 04h    ; MASK: use deprecated; see datasheet
 0003           ARF_CR_SCPWR:         equ 03h    ; MASK: Switched Cap block power
 0000           
 0064           CMP_CR0:      equ 64h          ; Analog Comparator Bus 0 Register         (#)
 0080           CMP_CR0_COMP3:        equ 80h    ; MASK: Column 3 comparator state        (R)
 0040           CMP_CR0_COMP2:        equ 40h    ; MASK: Column 2 comparator state        (R)
 0020           CMP_CR0_COMP1:        equ 20h    ; MASK: Column 1 comparator state        (R)
 0010           CMP_CR0_COMP0:        equ 10h    ; MASK: Column 0 comparator state        (R)
 0008           CMP_CR0_AINT3:        equ 08h    ; MASK: Column 3 interrupt source        (RW)
 0004           CMP_CR0_AINT2:        equ 04h    ; MASK: Column 2 interrupt source        (RW)
 0002           CMP_CR0_AINT1:        equ 02h    ; MASK: Column 1 interrupt source        (RW)
 0001           CMP_CR0_AINT0:        equ 01h    ; MASK: Column 0 interrupt source        (RW)
 0000           
 0065           ASY_CR:       equ 65h          ; Analog Synchronizaton Control            (#)
 0070           ASY_CR_SARCOUNT:      equ 70h    ; MASK: SAR support: resolution count    (W)
 0008           ASY_CR_SARSIGN:       equ 08h    ; MASK: SAR support: sign                (RW)
 0006           ASY_CR_SARCOL:        equ 06h    ; MASK: SAR support: column spec         (RW)
 0001           ASY_CR_SYNCEN:        equ 01h    ; MASK: Stall bit                        (RW)
 0000           
 0066           CMP_CR1:      equ 66h          ; Analog Comparator Bus 1 Register         (RW)
 0080           CMP_CR1_ASYNCH3:      equ 80h    ; MASK: Column 3 comparator bus synch
 0040           CMP_CR1_ASYNCH2:      equ 40h    ; MASK: Column 2 comparator bus synch
 0020           CMP_CR1_ASYNCH1:      equ 20h    ; MASK: Column 1 comparator bus synch
 0010           CMP_CR1_ASYNCH0:      equ 10h    ; MASK: Column 0 comparator bus synch
 0000           
 0000           ;---------------------------------------------------
 0000           ;  Analog PSoC block Registers
 0000           ;
 0000           ;  Note: the following registers are mapped into
 0000           ;  both register bank 0 AND register bank 1.
 0000           ;---------------------------------------------------
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 0
 0070           ACB00CR3:     equ 70h          ; Control register 3                       (RW)
 0071           ACB00CR0:     equ 71h          ; Control register 0                       (RW)
 0072           ACB00CR1:     equ 72h          ; Control register 1                       (RW)
 0073           ACB00CR2:     equ 73h          ; Control register 2                       (RW)
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 1
 0074           ACB01CR3:     equ 74h          ; Control register 3                       (RW)
 0075           ACB01CR0:     equ 75h          ; Control register 0                       (RW)
 0076           ACB01CR1:     equ 76h          ; Control register 1                       (RW)
 0077           ACB01CR2:     equ 77h          ; Control register 2                       (RW)
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 2
 0078           ACB02CR3:     equ 78h          ; Control register 3                       (RW)
 0079           ACB02CR0:     equ 79h          ; Control register 0                       (RW)
 007A           ACB02CR1:     equ 7Ah          ; Control register 1                       (RW)
 007B           ACB02CR2:     equ 7Bh          ; Control register 2                       (RW)
 0000           
 0000           ; Continuous Time PSoC block Type B Row 0 Col 3
 007C           ACB03CR3:     equ 7Ch          ; Control register 3                       (RW)
 007D           ACB03CR0:     equ 7Dh          ; Control register 0                       (RW)
 007E           ACB03CR1:     equ 7Eh          ; Control register 1                       (RW)
 007F           ACB03CR2:     equ 7Fh          ; Control register 2                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 1 Col 0
 0080           ASC10CR0:     equ 80h          ; Control register 0                       (RW)
 0081           ASC10CR1:     equ 81h          ; Control register 1                       (RW)
 0082           ASC10CR2:     equ 82h          ; Control register 2                       (RW)
 0083           ASC10CR3:     equ 83h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 1 Col 1
 0084           ASD11CR0:     equ 84h          ; Control register 0                       (RW)
 0085           ASD11CR1:     equ 85h          ; Control register 1                       (RW)
 0086           ASD11CR2:     equ 86h          ; Control register 2                       (RW)
 0087           ASD11CR3:     equ 87h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 1 Col 2
 0088           ASC12CR0:     equ 88h          ; Control register 0                       (RW)
 0089           ASC12CR1:     equ 89h          ; Control register 1                       (RW)
 008A           ASC12CR2:     equ 8Ah          ; Control register 2                       (RW)
 008B           ASC12CR3:     equ 8Bh          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 1 Col 3
 008C           ASD13CR0:     equ 8Ch          ; Control register 0                       (RW)
 008D           ASD13CR1:     equ 8Dh          ; Control register 1                       (RW)
 008E           ASD13CR2:     equ 8Eh          ; Control register 2                       (RW)
 008F           ASD13CR3:     equ 8Fh          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 2 Col 0
 0090           ASD20CR0:     equ 90h          ; Control register 0                       (RW)
 0091           ASD20CR1:     equ 91h          ; Control register 1                       (RW)
 0092           ASD20CR2:     equ 92h          ; Control register 2                       (RW)
 0093           ASD20CR3:     equ 93h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 2 Col 1
 0094           ASC21CR0:     equ 94h          ; Control register 0                       (RW)
 0095           ASC21CR1:     equ 95h          ; Control register 1                       (RW)
 0096           ASC21CR2:     equ 96h          ; Control register 2                       (RW)
 0097           ASC21CR3:     equ 97h          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType D Row 2 Col 2
 0098           ASD22CR0:     equ 98h          ; Control register 0                       (RW)
 0099           ASD22CR1:     equ 99h          ; Control register 1                       (RW)
 009A           ASD22CR2:     equ 9Ah          ; Control register 2                       (RW)
 009B           ASD22CR3:     equ 9Bh          ; Control register 3                       (RW)
 0000           
 0000           ; Switched Cap PSoC blockType C Row 2 Col 3
 009C           ASC23CR0:     equ 9Ch          ; Control register 0                       (RW)
 009D           ASC23CR1:     equ 9Dh          ; Control register 1                       (RW)
 009E           ASC23CR2:     equ 9Eh          ; Control register 2                       (RW)
 009F           ASC23CR3:     equ 9Fh          ; Control register 3                       (RW)
 0000           
 0000           ;-----------------------------------------------
 0000           ;  Global General Purpose Data Registers
 0000           ;-----------------------------------------------
 006C           TMP0_DR:      equ 6Ch          ; deprecated do not use
 006D           TMP1_DR:      equ 6Dh          ; deprecated do not use
 006E           TMP2_DR:      equ 6Eh          ; deprecated do not use
 006F           TMP3_DR:      equ 6Fh          ; deprecated do not use
 0000           
 006C           TMP_DR0:      equ 6Ch          ; Temporary Data Register 0                (RW)
 006D           TMP_DR1:      equ 6Dh          ; Temporary Data Register 1                (RW)
 006E           TMP_DR2:      equ 6Eh          ; Temporary Data Register 2                (RW)
 006F           TMP_DR3:      equ 6Fh          ; Temporary Data Register 3                (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Row Digital Interconnects
 0000           ;
 0000           ;  Note: the following registers are mapped into
 0000           ;  both register bank 0 AND register bank 1.
 0000           ;------------------------------------------------
 0000           
 00B0           RDI0RI:       equ 0B0h          ; Row Digital Interconnect Row 0 Input Reg (RW)
 00B1           RDI0SYN:      equ 0B1h          ; Row Digital Interconnect Row 0 Sync Reg  (RW)
 00B2           RDI0IS:       equ 0B2h          ; Row 0 Input Select Register              (RW)
 00B3           RDI0LT0:      equ 0B3h          ; Row 0 Look Up Table Register 0           (RW)
 00B4           RDI0LT1:      equ 0B4h          ; Row 0 Look Up Table Register 1           (RW)
 00B5           RDI0RO0:      equ 0B5h          ; Row 0 Output Register 0                  (RW)
 00B6           RDI0RO1:      equ 0B6h          ; Row 0 Output Register 1                  (RW)
 0000           
 00B8           RDI1RI:       equ 0B8h          ; Row Digital Interconnect Row 1 Input Reg (RW)
 00B9           RDI1SYN:      equ 0B9h          ; Row Digital Interconnect Row 1 Sync Reg  (RW)
 00BA           RDI1IS:       equ 0BAh          ; Row 1 Input Select Register              (RW)
 00BB           RDI1LT0:      equ 0BBh          ; Row 1 Look Up Table Register 0           (RW)
 00BC           RDI1LT1:      equ 0BCh          ; Row 1 Look Up Table Register 1           (RW)
 00BD           RDI1RO0:      equ 0BDh          ; Row 1 Output Register 0                  (RW)
 00BE           RDI1RO1:      equ 0BEh          ; Row 1 Output Register 1                  (RW)
 0000           
 00C0           RDI2RI:       equ 0C0h          ; Row Digital Interconnect Row 2 Input Reg (RW)
 00C1           RDI2SYN:      equ 0C1h          ; Row Digital Interconnect Row 2 Sync Reg  (RW)
 00C2           RDI2IS:       equ 0C2h          ; Row 2 Input Select Register              (RW)
 00C3           RDI2LT0:      equ 0C3h          ; Row 2 Look Up Table Register 0           (RW)
 00C4           RDI2LT1:      equ 0C4h          ; Row 2 Look Up Table Register 1           (RW)
 00C5           RDI2RO0:      equ 0C5h          ; Row 2 Output Register 0                  (RW)
 00C6           RDI2RO1:      equ 0C6h          ; Row 2 Output Register 1                  (RW)
 0000           
 00C8           RDI3RI:       equ 0C8h          ; Row Digital Interconnect Row 3 Input Reg (RW)
 00C9           RDI3SYN:      equ 0C9h          ; Row Digital Interconnect Row 3 Sync Reg  (RW)
 00CA           RDI3IS:       equ 0CAh          ; Row 3 Input Select Register              (RW)
 00CB           RDI3LT0:      equ 0CBh          ; Row 3 Look Up Table Register 0           (RW)
 00CC           RDI3LT1:      equ 0CCh          ; Row 3 Look Up Table Register 1           (RW)
 00CD           RDI3RO0:      equ 0CDh          ; Row 3 Output Register 0                  (RW)
 00CE           RDI3RO1:      equ 0CEh          ; Row 3 Output Register 1                  (RW)
 0000           
 0000           ;-----------------------------------------------
 0000           ;  Ram Page Pointers
 0000           ;-----------------------------------------------
 00D0           CUR_PP:      equ 0D0h           ; Current   Page Pointer
 00D1           STK_PP:      equ 0D1h           ; Stack     Page Pointer
 00D3           IDX_PP:      equ 0D3h           ; Index     Page Pointer
 00D4           MVR_PP:      equ 0D4h           ; MVI Read  Page Pointer
 00D5           MVW_PP:      equ 0D5h           ; MVI Write Page Pointer
 0000           
 0000           ;------------------------------------------------
 0000           ;  I2C Configuration Registers
 0000           ;------------------------------------------------
 00D6           I2C_CFG:      equ 0D6h          ; I2C Configuration Register               (RW)
 0040           I2C_CFG_PINSEL:         equ 40h  ; MASK: Select P1[0] and P1[1] for I2C
 0020           I2C_CFG_BUSERR_IE:      equ 20h  ; MASK: Enable interrupt on Bus Error
 0010           I2C_CFG_STOP_IE:        equ 10h  ; MASK: Enable interrupt on Stop
 0000           I2C_CFG_CLK_RATE_100K:  equ 00h  ; MASK: I2C clock set at 100K
 0004           I2C_CFG_CLK_RATE_400K:  equ 04h  ; MASK: I2C clock set at 400K
 0008           I2C_CFG_CLK_RATE_50K:   equ 08h  ; MASK: I2C clock set at 50K
 000C           I2C_CFG_CLK_RATE_1M6:   equ 0Ch  ; MASK: I2C clock set at 1.6M
 000C           I2C_CFG_CLK_RATE:       equ 0Ch  ; MASK: I2C clock rate setting mask
 0002           I2C_CFG_PSELECT_MASTER: equ 02h  ; MASK: Enable I2C Master
 0001           I2C_CFG_PSELECT_SLAVE:  equ 01h  ; MASK: Enable I2C Slave
 0000           
 00D7           I2C_SCR:      equ 0D7h          ; I2C Status and Control Register          (#)
 0080           I2C_SCR_BUSERR:        equ 80h   ; MASK: I2C Bus Error detected           (RC)
 0040           I2C_SCR_LOSTARB:       equ 40h   ; MASK: I2C Arbitration lost             (RC)
 0020           I2C_SCR_STOP:          equ 20h   ; MASK: I2C Stop detected                (RC)
 0010           I2C_SCR_ACK:           equ 10h   ; MASK: ACK the last byte                (RW)
 0008           I2C_SCR_ADDR:          equ 08h   ; MASK: Address rcv'd is Slave address   (RC)
 0004           I2C_SCR_XMIT:          equ 04h   ; MASK: Set transfer to tranmit mode     (RW)
 0002           I2C_SCR_LRB:           equ 02h   ; MASK: Last recieved bit                (RC)
 0001           I2C_SCR_BYTECOMPLETE:  equ 01h   ; MASK: Transfer of byte complete        (RC)
 0000           
 00D8           I2C_DR:       equ 0D8h          ; I2C Data Register                        (RW)
 0000           
 00D9           I2C_MSCR:     equ 0D9h          ; I2C Master Status and Control Register   (#)
 0008           I2C_MSCR_BUSY:         equ 08h   ; MASK: I2C Busy (Start detected)        (R)
 0004           I2C_MSCR_MODE:         equ 04h   ; MASK: Start has been generated         (R)
 0002           I2C_MSCR_RESTART:      equ 02h   ; MASK: Generate a Restart condition     (RW)
 0001           I2C_MSCR_START:        equ 01h   ; MASK: Generate a Start condition       (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  System and Global Resource Registers
 0000           ;------------------------------------------------
 00DA           INT_CLR0:     equ 0DAh          ; Interrupt Clear Register 0               (RW)
 0000                                          ; Use INT_MSK0 bit field masks
 00DB           INT_CLR1:     equ 0DBh          ; Interrupt Clear Register 1               (RW)
 0000                                          ; Use INT_MSK1 bit field masks
 00DC           INT_CLR2:     equ 0DCh          ; Interrupt Clear Register 2               (RW)
 0000                                          ; Use INT_MSK2 bit field masks
 00DD           INT_CLR3:     equ 0DDh          ; Interrupt Clear Register 3               (RW)
 0000                                          ; Use INT_MSK3 bit field masks
 0000           
 00DE           INT_MSK3:     equ 0DEh          ; I2C and Software Mask Register           (RW)
 0080           INT_MSK3_ENSWINT:          equ 80h ; MASK: enable/disable SW interrupt
 0001           INT_MSK3_I2C:              equ 01h ; MASK: enable/disable I2C interrupt
 0000           
 00DF           INT_MSK2:     equ 0DFh          ; Digital PSoC block Mask Register         (RW)
 0080           INT_MSK2_DCB33:            equ 80h ; MASK: enable/disable DCB33 block interrupt
 0040           INT_MSK2_DCB32:            equ 40h ; MASK: enable/disable DCB32 block interrupt
 0020           INT_MSK2_DBB31:            equ 20h ; MASK: enable/disable DBB31 block interrupt
 0010           INT_MSK2_DBB30:            equ 10h ; MASK: enable/disable DBB30 block interrupt
 0008           INT_MSK2_DCB23:            equ 08h ; MASK: enable/disable DCB23 block interrupt
 0004           INT_MSK2_DCB22:            equ 04h ; MASK: enable/disable DCB22 block interrupt
 0002           INT_MSK2_DBB21:            equ 02h ; MASK: enable/disable DBB21 block interrupt
 0001           INT_MSK2_DBB20:            equ 01h ; MASK: enable/disable DBB20 block interrupt
 0000           
 00E0           INT_MSK0:     equ 0E0h          ; General Interrupt Mask Register          (RW)
 0080           INT_MSK0_VC3:              equ 80h ; MASK: enable/disable VC3 interrupt
 0040           INT_MSK0_SLEEP:            equ 40h ; MASK: enable/disable sleep interrupt
 0020           INT_MSK0_GPIO:             equ 20h ; MASK: enable/disable GPIO  interrupt
 0010           INT_MSK0_ACOLUMN_3:        equ 10h ; MASK: enable/disable Analog col 3 interrupt
 0008           INT_MSK0_ACOLUMN_2:        equ 08h ; MASK: enable/disable Analog col 2 interrupt
 0004           INT_MSK0_ACOLUMN_1:        equ 04h ; MASK: enable/disable Analog col 1 interrupt
 0002           INT_MSK0_ACOLUMN_0:        equ 02h ; MASK: enable/disable Analog col 0 interrupt
 0001           INT_MSK0_VOLTAGE_MONITOR:  equ 01h ; MASK: enable/disable Volts interrupt
 0000           
 00E1           INT_MSK1:     equ 0E1h          ; Digital PSoC block Mask Register         (RW)
 0080           INT_MSK1_DCB13:            equ 80h ; MASK: enable/disable DCB13 block interrupt
 0040           INT_MSK1_DCB12:            equ 40h ; MASK: enable/disable DCB12 block interrupt
 0020           INT_MSK1_DBB11:            equ 20h ; MASK: enable/disable DBB11 block interrupt
 0010           INT_MSK1_DBB10:            equ 10h ; MASK: enable/disable DBB10 block interrupt
 0008           INT_MSK1_DCB03:            equ 08h ; MASK: enable/disable DCB03 block interrupt
 0004           INT_MSK1_DCB02:            equ 04h ; MASK: enable/disable DCB02 block interrupt
 0002           INT_MSK1_DBB01:            equ 02h ; MASK: enable/disable DBB01 block interrupt
 0001           INT_MSK1_DBB00:            equ 01h ; MASK: enable/disable DBB00 block interrupt
 0000           
 00E2           INT_VC:       equ 0E2h          ; Interrupt vector register                (RC)
 00E3           RES_WDT:      equ 0E3h          ; Watch Dog Timer Register                 (W)
 0000           
 0000           ; DECIMATOR Registers
 00E4           DEC_DH:       equ 0E4h          ; Data Register (high byte)                (RC)
 00E5           DEC_DL:       equ 0E5h          ; Data Register ( low byte)                (RC)
 00E6           DEC_CR0:      equ 0E6h          ; Data Control Register 0                  (RW)
 00E7           DEC_CR1:      equ 0E7h          ; Data Control Register 1                  (RW)
 0000                                          ; Also see DEC_CR2 in bank 1
 0000           
 0000           ; Multiplier and MAC (Multiply/Accumulate) Unit
 0000           //   Compatibility Set: Maps onto MAC0
 00E8           MUL_X:        equ 0E8h          ; Multiplier X Register (write)            (W)
 00E9           MUL_Y:        equ 0E9h          ; Multiplier Y Register (write)            (W)
 00EA           MUL_DH:       equ 0EAh          ; Multiplier Result Data (high byte read)  (R)
 00EB           MUL_DL:       equ 0EBh          ; Multiplier Result Data ( low byte read)  (R)
 00EC           MAC_X:        equ 0ECh          ; write = MAC X register [also see ACC_DR1]
 00EC           ACC_DR1:      equ MAC_X        ; read =  MAC Accumulator, byte 1          (RW)
 00ED           MAC_Y:        equ 0EDh          ; write = MAC Y register [also see ACC_DR0]
 00ED           ACC_DR0:      equ MAC_Y        ; read =  MAC Accumulator, byte 0          (RW)
 00EE           MAC_CL0:      equ 0EEh          ; write = MAC Clear Accum [also see ACC_DR3]
 00EE           ACC_DR3:      equ MAC_CL0      ; read =  MAC Accumulator, byte 3          (RW)
 00EF           MAC_CL1:      equ 0EFh          ; write = MAC Clear Accum [also see ACC_DR2]
 00EF           ACC_DR2:      equ MAC_CL1      ; read =  MAC Accumulator, byte 2          (RW)
 0000           
 0000           // Multiply/Accumulate Unit 0
 00E8           MUL0_X:       equ 0E8h          ; Multiplier 0 X Register (write)          (W)
 00E9           MUL0_Y:       equ 0E9h          ; Multiplier 0 Y Register (write)          (W)
 00EA           MUL0_DH:      equ 0EAh          ; Multiplier 0 Result Data (high byte read)(R)
 00EB           MUL0_DL:      equ 0EBh          ; Multiplier 0 Result Data ( low byte read)(R)
 00EC           MAC0_X:       equ 0ECh          ; write = MAC 0 X register [also see ACC_DR1]
 00EC           ACC0_DR1:     equ MAC0_X       ; read =  MAC 0 Accumulator, byte 1        (RW)
 00ED           MAC0_Y:       equ 0EDh          ; write = MAC 0 Y register [also see ACC_DR0]
 00ED           ACC0_DR0:     equ MAC0_Y       ; read =  MAC 0 Accumulator, byte 0        (RW)
 00EE           MAC0_CL0:     equ 0EEh          ; write = MAC 0 Clear Accum [also see ACC_DR3]
 00EE           ACC0_DR3:     equ MAC0_CL0     ; read =  MAC 0 Accumulator, byte 3        (RW)
 00EF           MAC0_CL1:     equ 0EFh          ; write = MAC 0 Clear Accum [also see ACC_DR2]
 00EF           ACC0_DR2:     equ MAC0_CL1     ; read =  MAC 0 Accumulator, byte 2        (RW)
 0000           
 0000           // Multiply/Accumulate Unit 1
 00A8           MUL1_X:       equ 0A8h          ; Multiplier 1 X Register (write)          (W)
 00A9           MUL1_Y:       equ 0A9h          ; Multiplier 1 Y Register (write)          (W)
 00AA           MUL1_DH:      equ 0AAh          ; Multiplier 1 Result Data (high byte read)(R)
 00AB           MUL1_DL:      equ 0ABh          ; Multiplier 1 Result Data ( low byte read)(R)
 00AC           MAC1_X:       equ 0ACh          ; write = MAC 1 X register [also see ACC_DR1]
 00AC           ACC1_DR1:     equ MAC1_X       ; read =  MAC 1 Accumulator, byte 1        (RW)
 00AD           MAC1_Y:       equ 0ADh          ; write = MAC 1 Y register [also see ACC_DR0]
 00AD           ACC1_DR0:     equ MAC1_Y       ; read =  MAC 1 Accumulator, byte 0        (RW)
 00AE           MAC1_CL0:     equ 0AEh          ; write = MAC 1 Clear Accum [also see ACC_DR3]
 00AE           ACC1_DR3:     equ MAC1_CL0     ; read =  MAC 1 Accumulator, byte 3        (RW)
 00AF           MAC1_CL1:     equ 0AFh          ; write = MAC 1 Clear Accum [also see ACC_DR2]
 00AF           ACC1_DR2:     equ MAC1_CL1     ; read =  MAC 1 Accumulator, byte 2        (RW)
 0000           
 0000           ;------------------------------------------------------
 0000           ;  System Status and Control Registers
 0000           ;
 0000           ;  Note: The following registers are mapped into both
 0000           ;        register bank 0 AND register bank 1.
 0000           ;------------------------------------------------------
 00F7           CPU_F:        equ 0F7h          ; CPU Flag Register Access                 (RO)
 0000                                              ; Use FLAG_ masks defined at top of file
 0000           
 00FE           CPU_SCR1:     equ 0FEh          ; CPU Status and Control Register #1       (#)
 0080           CPU_SCR1_IRESS:         equ 80h    ; MASK: Boot Phase Re-entry bit
 0010           CPU_SCR1_SLIMO:         equ 10h    ; MASK: Slow Main Oscillator Mode
 0008           CPU_SCR1_ECO_ALWD_WR:   equ 08h    ; MASK: flag, ECO allowed has been written
 0004           CPU_SCR1_ECO_ALLOWED:   equ 04h    ; MASK: ECO allowed to be enabled
 0001           CPU_SCR1_IRAMDIS:       equ 01h    ; MASK: Disable RAM initialization on WDR
 0000           
 00FF           CPU_SCR0:     equ 0FFh          ; CPU Status and Control Register #2       (#)
 0080           CPU_SCR0_GIE_MASK:      equ 80h    ; MASK: Global Interrupt Enable shadow
 0020           CPU_SCR0_WDRS_MASK:     equ 20h    ; MASK: Watch Dog Timer Reset
 0010           CPU_SCR0_PORS_MASK:     equ 10h    ; MASK: power-on reset bit PORS
 0008           CPU_SCR0_SLEEP_MASK:    equ 08h    ; MASK: Enable Sleep
 0001           CPU_SCR0_STOP_MASK:     equ 01h    ; MASK: Halt CPU bit
 0000           
 0000           
 0000           ;;=============================================================================
 0000           ;;      Register Space, Bank 1
 0000           ;;=============================================================================
 0000           
 0000           ;------------------------------------------------
 0000           ;  Port Registers
 0000           ;  Note: Also see this address range in Bank 0.
 0000           ;------------------------------------------------
 0000           ; Port 0
 0000           PRT0DM0:      equ 00h          ; Port 0 Drive Mode 0                      (RW)
 0001           PRT0DM1:      equ 01h          ; Port 0 Drive Mode 1                      (RW)
 0002           PRT0IC0:      equ 02h          ; Port 0 Interrupt Control 0               (RW)
 0003           PRT0IC1:      equ 03h          ; Port 0 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 1
 0004           PRT1DM0:      equ 04h          ; Port 1 Drive Mode 0                      (RW)
 0005           PRT1DM1:      equ 05h          ; Port 1 Drive Mode 1                      (RW)
 0006           PRT1IC0:      equ 06h          ; Port 1 Interrupt Control 0               (RW)
 0007           PRT1IC1:      equ 07h          ; Port 1 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 2
 0008           PRT2DM0:      equ 08h          ; Port 2 Drive Mode 0                      (RW)
 0009           PRT2DM1:      equ 09h          ; Port 2 Drive Mode 1                      (RW)
 000A           PRT2IC0:      equ 0Ah          ; Port 2 Interrupt Control 0               (RW)
 000B           PRT2IC1:      equ 0Bh          ; Port 2 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 3
 000C           PRT3DM0:      equ 0Ch          ; Port 3 Drive Mode 0                      (RW)
 000D           PRT3DM1:      equ 0Dh          ; Port 3 Drive Mode 1                      (RW)
 000E           PRT3IC0:      equ 0Eh          ; Port 3 Interrupt Control 0               (RW)
 000F           PRT3IC1:      equ 0Fh          ; Port 3 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 4
 0010           PRT4DM0:      equ 10h          ; Port 4 Drive Mode 0                      (RW)
 0011           PRT4DM1:      equ 11h          ; Port 4 Drive Mode 1                      (RW)
 0012           PRT4IC0:      equ 12h          ; Port 4 Interrupt Control 0               (RW)
 0013           PRT4IC1:      equ 13h          ; Port 4 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 5
 0014           PRT5DM0:      equ 14h          ; Port 5 Drive Mode 0                      (RW)
 0015           PRT5DM1:      equ 15h          ; Port 5 Drive Mode 1                      (RW)
 0016           PRT5IC0:      equ 16h          ; Port 5 Interrupt Control 0               (RW)
 0017           PRT5IC1:      equ 17h          ; Port 5 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 6
 0018           PRT6DM0:      equ 18h          ; Port 6 Drive Mode 0                      (RW)
 0019           PRT6DM1:      equ 19h          ; Port 6 Drive Mode 1                      (RW)
 001A           PRT6IC0:      equ 1Ah          ; Port 6 Interrupt Control 0               (RW)
 001B           PRT6IC1:      equ 1Bh          ; Port 6 Interrupt Control 1               (RW)
 0000           
 0000           ; Port 7
 001C           PRT7DM0:      equ 1Ch          ; Port 7 Drive Mode 0                      (RW)
 001D           PRT7DM1:      equ 1Dh          ; Port 7 Drive Mode 1                      (RW)
 001E           PRT7IC0:      equ 1Eh          ; Port 7 Interrupt Control 0               (RW)
 001F           PRT7IC1:      equ 1Fh          ; Port 7 Interrupt Control 1               (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Digital PSoC(tm) block Registers
 0000           ;  Note: Also see this address range in Bank 0.
 0000           ;------------------------------------------------
 0000           
 0000           ; Digital PSoC block 00, Basic Type B
 0020           DBB00FN:      equ 20h          ; Function Register                        (RW)
 0021           DBB00IN:      equ 21h          ;    Input Register                        (RW)
 0022           DBB00OU:      equ 22h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 01, Basic Type B
 0024           DBB01FN:      equ 24h          ; Function Register                        (RW)
 0025           DBB01IN:      equ 25h          ;    Input Register                        (RW)
 0026           DBB01OU:      equ 26h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 02, Communications Type B
 0028           DCB02FN:      equ 28h          ; Function Register                        (RW)
 0029           DCB02IN:      equ 29h          ;    Input Register                        (RW)
 002A           DCB02OU:      equ 2Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 03, Communications Type B
 002C           DCB03FN:      equ 2Ch          ; Function Register                        (RW)
 002D           DCB03IN:      equ 2Dh          ;    Input Register                        (RW)
 002E           DCB03OU:      equ 2Eh          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 10, Basic Type B
 0030           DBB10FN:      equ 30h          ; Function Register                        (RW)
 0031           DBB10IN:      equ 31h          ;    Input Register                        (RW)
 0032           DBB10OU:      equ 32h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 11, Basic Type B
 0034           DBB11FN:      equ 34h          ; Function Register                        (RW)
 0035           DBB11IN:      equ 35h          ;    Input Register                        (RW)
 0036           DBB11OU:      equ 36h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 12, Communications Type B
 0038           DCB12FN:      equ 38h          ; Function Register                        (RW)
 0039           DCB12IN:      equ 39h          ;    Input Register                        (RW)
 003A           DCB12OU:      equ 3Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 13, Communications Type B
 003C           DCB13FN:      equ 3Ch          ; Function Register                        (RW)
 003D           DCB13IN:      equ 3Dh          ;    Input Register                        (RW)
 003E           DCB13OU:      equ 3Eh          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 20, Basic Type B
 0040           DBB20FN:      equ 40h          ; Function Register                        (RW)
 0041           DBB20IN:      equ 41h          ;    Input Register                        (RW)
 0042           DBB20OU:      equ 42h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 21, Basic Type B
 0044           DBB21FN:      equ 44h          ; Function Register                        (RW)
 0045           DBB21IN:      equ 45h          ;    Input Register                        (RW)
 0046           DBB21OU:      equ 46h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 22, Communications Type B
 0048           DCB22FN:      equ 48h          ; Function Register                        (RW)
 0049           DCB22IN:      equ 49h          ;    Input Register                        (RW)
 004A           DCB22OU:      equ 4Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 23, Communications Type B
 004C           DCB23FN:      equ 4Ch          ; Function Register                        (RW)
 004D           DCB23IN:      equ 4Dh          ;    Input Register                        (RW)
 004E           DCB23OU:      equ 4Eh          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 30, Basic Type B
 0050           DBB30FN:      equ 50h          ; Function Register                        (RW)
 0051           DBB30IN:      equ 51h          ;    Input Register                        (RW)
 0052           DBB30OU:      equ 52h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 31, Basic Type B
 0054           DBB31FN:      equ 54h          ; Function Register                        (RW)
 0055           DBB31IN:      equ 55h          ;    Input Register                        (RW)
 0056           DBB31OU:      equ 56h          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 32, Communications Type B
 0058           DCB32FN:      equ 58h          ; Function Register                        (RW)
 0059           DCB32IN:      equ 59h          ;    Input Register                        (RW)
 005A           DCB32OU:      equ 5Ah          ;   Output Register                        (RW)
 0000           
 0000           ; Digital PSoC block 33, Communications Type B
 005C           DCB33FN:      equ 5Ch          ; Function Register                        (RW)
 005D           DCB33IN:      equ 5Dh          ;    Input Register                        (RW)
 005E           DCB33OU:      equ 5Eh          ;   Output Register                        (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  System and Global Resource Registers
 0000           ;  Note: Also see this address range in Bank 0.
 0000           ;------------------------------------------------
 0000           
 0060           CLK_CR0:      equ 60h          ; Analog Column Clock Select Register 0    (RW)
 00C0           CLK_CR0_ACOLUMN_3:    equ 0C0h    ; MASK: Specify clock for analog cloumn
 0030           CLK_CR0_ACOLUMN_2:    equ 30h    ; MASK: Specify clock for analog cloumn
 000C           CLK_CR0_ACOLUMN_1:    equ 0Ch    ; MASK: Specify clock for analog cloumn
 0003           CLK_CR0_ACOLUMN_0:    equ 03h    ; MASK: Specify clock for analog cloumn
 0000           
 0061           CLK_CR1:      equ 61h          ; Analog Clock Source Select Register 1    (RW)
 0040           CLK_CR1_SHDIS:        equ 40h    ; MASK: Sample and Hold Disable (all Columns)
 0038           CLK_CR1_ACLK1:        equ 38h    ; MASK: Digital PSoC block for analog source
 0007           CLK_CR1_ACLK2:        equ 07h    ; MASK: Digital PSoC block for analog source
 0000           
 0062           ABF_CR0:      equ 62h          ; Analog Output Buffer Control Register 0  (RW)
 0080           ABF_CR0_ACOL1MUX:     equ 80h    ; MASK: Analog Column 1 Mux control
 0040           ABF_CR0_ACOL2MUX:     equ 40h    ; MASK: Analog Column 2 Mux control
 0020           ABF_CR0_ABUF1EN:      equ 20h    ; MASK: Enable ACol 1 analog buffer (P0[5])
 0010           ABF_CR0_ABUF2EN:      equ 10h    ; MASK: Enable ACol 2 analog buffer (P0[4])
 0008           ABF_CR0_ABUF0EN:      equ 08h    ; MASK: Enable ACol 0 analog buffer (P0[3])
 0004           ABF_CR0_ABUF3EN:      equ 04h    ; MASK: Enable ACol 3 analog buffer (P0[2])
 0002           ABF_CR0_BYPASS:       equ 02h    ; MASK: Bypass the analog buffers
 0001           ABF_CR0_PWR:          equ 01h    ; MASK: High power mode on all analog buffers
 0000           
 0063           AMD_CR0:      equ 63h          ; Analog Modulator Control Register 0      (RW)
 0070           AMD_CR0_AMOD2:        equ 70h    ; MASK: Modulation source for analog column 2
 0007           AMD_CR0_AMOD0:        equ 07h    ; MASK: Modulation source for analog column 1
 0000           
 0066           AMD_CR1:      equ 66h          ; Analog Modulator Control Register 1      (RW)
 0070           AMD_CR1_AMOD3:        equ 70h    ; MASK: Modulation ctrl for analog column 3
 0007           AMD_CR1_AMOD1:        equ 07h    ; MASK: Modulation ctrl for analog column 1
 0000           
 0067           ALT_CR0:      equ 67h          ; Analog Look Up Table (LUT) Register 0    (RW)
 00F0           ALT_CR0_LUT1:         equ 0F0h    ; MASK: Look up table 1 selection
 000F           ALT_CR0_LUT0:         equ 0Fh    ; MASK: Look up table 0 selection
 0000           
 0068           ALT_CR1:      equ 68h          ; Analog Look Up Table (LUT) Register 1    (RW)
 00F0           ALT_CR1_LUT3:         equ 0F0h    ; MASK: Look up table 3 selection
 000F           ALT_CR1_LUT2:         equ 0Fh    ; MASK: Look up table 2 selection
 0000           
 0069           CLK_CR2:      equ 69h          ; Analog Clock Source Control Register 2   (RW)
 0008           CLK_CR2_ACLK1R:       equ 08h    ; MASK: Analog Clock 1 selection range
 0001           CLK_CR2_ACLK0R:       equ 01h    ; MASK: Analog Clock 0 selection range
 0000           
 0000           ;------------------------------------------------
 0000           ;  Global Digital Interconnects
 0000           ;------------------------------------------------
 0000           
 00D0           GDI_O_IN:     equ 0D0h          ; Global Dig Interconnect Odd Inputs Reg   (RW)
 00D1           GDI_E_IN:     equ 0D1h          ; Global Dig Interconnect Even Inputs Reg  (RW)
 00D2           GDI_O_OU:     equ 0D2h          ; Global Dig Interconnect Odd Outputs Reg  (RW)
 00D3           GDI_E_OU:     equ 0D3h          ; Global Dig Interconnect Even Outputs Reg (RW)
 0000           
 0000           ;------------------------------------------------
 0000           ;  Clock and System Control Registers
 0000           ;------------------------------------------------
 0000           
 00DD           OSC_GO_EN:    equ 0DDh          ; Oscillator to Global Outputs Enable Register (RW)
 0080           OSC_GOEN_SLPINT:      equ 80h	 ; Enable Sleep Timer onto GOE[7]
 0040           OSC_GOEN_VC3:         equ 40h    ; Enable VC3 onto GOE[6]
 0020           OSC_GOEN_VC2:         equ 20h    ; Enable VC2 onto GOE[5]
 0010           OSC_GOEN_VC1:         equ 10h    ; Enable VC1 onto GOE[4]
 0008           OSC_GOEN_SYSCLKX2:    equ 08h    ; Enable 2X SysClk onto GOE[3]
 0004           OSC_GOEN_SYSCLK:      equ 04h    ; Enable 1X SysClk onto GOE[2]
 0002           OSC_GOEN_CLK24M:      equ 02h    ; Enable 24 MHz clock onto GOE[1]
 0001           OSC_GOEN_CLK32K:      equ 01h    ; Enable 32 kHz clock onto GOE[0]
 0000           
 00DE           OSC_CR4:      equ 0DEh          ; Oscillator Control Register 4            (RW)
 0003           OSC_CR4_VC3:          equ 03h    ; MASK: System VC3 Clock source
 0000           
 00DF           OSC_CR3:      equ 0DFh          ; Oscillator Control Register 3            (RW)
 0000           
 00E0           OSC_CR0:      equ 0E0h          ; System Oscillator Control Register 0     (RW)
 0080           OSC_CR0_32K_SELECT:   equ 80h    ; MASK: Enable/Disable External XTAL Osc
 0040           OSC_CR0_PLL_MODE:     equ 40h    ; MASK: Enable/Disable PLL
 0020           OSC_CR0_NO_BUZZ:      equ 20h    ; MASK: Bandgap always powered/BUZZ bandgap
 0018           OSC_CR0_SLEEP:        equ 18h    ; MASK: Set Sleep timer freq/period
 0000           OSC_CR0_SLEEP_512Hz:  equ 00h    ;     Set sleep bits for 1.95ms period
 0008           OSC_CR0_SLEEP_64Hz:   equ 08h    ;     Set sleep bits for 15.6ms period
 0010           OSC_CR0_SLEEP_8Hz:    equ 10h    ;     Set sleep bits for 125ms period
 0018           OSC_CR0_SLEEP_1Hz:    equ 18h    ;     Set sleep bits for 1 sec period
 0007           OSC_CR0_CPU:          equ 07h    ; MASK: Set CPU Frequency
 0000           OSC_CR0_CPU_3MHz:     equ 00h    ;     set CPU Freq bits for 3MHz Operation
 0001           OSC_CR0_CPU_6MHz:     equ 01h    ;     set CPU Freq bits for 6MHz Operation
 0002           OSC_CR0_CPU_12MHz:    equ 02h    ;     set CPU Freq bits for 12MHz Operation
 0003           OSC_CR0_CPU_24MHz:    equ 03h    ;     set CPU Freq bits for 24MHz Operation
 0004           OSC_CR0_CPU_1d5MHz:   equ 04h    ;     set CPU Freq bits for 1.5MHz Operation
 0005           OSC_CR0_CPU_750kHz:   equ 05h    ;     set CPU Freq bits for 750kHz Operation
 0006           OSC_CR0_CPU_187d5kHz: equ 06h    ;     set CPU Freq bits for 187.5kHz Operation
 0007           OSC_CR0_CPU_93d7kHz:  equ 07h    ;     set CPU Freq bits for 93.7kHz Operation
 0000           
 00E1           OSC_CR1:      equ 0E1h          ; System VC1/VC2 Divider Control Register  (RW)
 00F0           OSC_CR1_VC1:          equ 0F0h    ; MASK: System VC1 24MHz/External Clk divider
 000F           OSC_CR1_VC2:          equ 0Fh    ; MASK: System VC2 24MHz/External Clk divider
 0000           
 00E2           OSC_CR2:      equ 0E2h          ; Oscillator Control Register 2            (RW)
 0004           OSC_CR2_EXTCLKEN:     equ 04h    ; MASK: Enable/Disable External Clock
 0001           OSC_CR2_SYSCLKX2DIS:  equ 01h    ; MASK: Enable/Disable 48MHz clock source
 0000           
 00E3           VLT_CR:       equ 0E3h          ; Voltage Monitor Control Register         (RW)
 0080           VLT_CR_SMP:           equ 80h    ; MASK: Enable Switch Mode Pump
 0030           VLT_CR_PORLEV:        equ 30h    ; MASK: Mask for Power on Reset level control
 0000           VLT_CR_POR_LOW:       equ 00h    ;   Lowest  Precision Power-on Reset trip point
 0010           VLT_CR_POR_MID:       equ 10h    ;   Middle  Precision Power-on Reset trip point
 0020           VLT_CR_POR_HIGH:      equ 20h    ;   Highest Precision Power-on Reset trip point
 0008           VLT_CR_LVDTBEN:       equ 08h    ; MASK: Enable the CPU Throttle Back on LVD
 0007           VLT_CR_VM:            equ 07h    ; MASK: Mask for Voltage Monitor level setting
 0000           VLT_CR_3V0_POR:       equ 00h    ; -- deprecated symbols --
 0010           VLT_CR_4V5_POR:       equ 10h    ;    deprecated
 0020           VLT_CR_4V75_POR:      equ 20h    ;    deprecated
 0030           VLT_CR_DISABLE:       equ 30h    ;    deprecated
 0000           
 00E4           VLT_CMP:      equ 0E4h          ; Voltage Monitor Comparators Register     (R)
 0004           VLT_CMP_PUMP:         equ 04h    ; MASK: Vcc below SMP trip level
 0002           VLT_CMP_LVD:          equ 02h    ; MASK: Vcc below LVD trip level
 0001           VLT_CMP_PPOR:         equ 01h    ; MASK: Vcc below PPOR trip level
 0000           
 00E7           DEC_CR2:      equ 0E7h          ; Decimator Control Register 2             (RW)
 00E8           IMO_TR:       equ 0E8h          ; Internal Main Oscillator Trim Register   (W)
 00E9           ILO_TR:       equ 0E9h          ; Internal Low-speed Oscillator Trim       (W)
 00EA           BDG_TR:       equ 0EAh          ; Band Gap Trim Register                   (W)
 00EB           ECO_TR:       equ 0EBh          ; External Oscillator Trim Register        (W)
 0000           
 0000           ;;=============================================================================
 0000           ;;      M8C System Macros
 0000           ;;  These macros should be used when their functions are needed.
 0000           ;;=============================================================================
 0000           
 0000           ;----------------------------------------------------
 0000           ;  Swapping Register Banks
 0000           ;----------------------------------------------------
 0000               macro M8C_SetBank0
 0000               and   F, ~FLAG_XIO_MASK
 0000               macro M8C_SetBank1
 0000               or    F, FLAG_XIO_MASK
 0000               macro M8C_EnableGInt
 0000               or    F, FLAG_GLOBAL_IE
 0000               macro M8C_DisableGInt
 0000               and   F, ~FLAG_GLOBAL_IE
 0000               macro M8C_DisableIntMask
 0000               and   reg[@0], ~@1              ; disable specified interrupt enable bit
 0000               macro M8C_EnableIntMask
 0000               or    reg[@0], @1               ; enable specified interrupt enable bit
 0000               macro M8C_ClearIntFlag
 0000               mov   reg[@0], ~@1              ; clear specified interrupt enable bit
 0000               macro M8C_EnableWatchDog
 0000               and   reg[CPU_SCR0], ~CPU_SCR0_PORS_MASK
 0000               macro M8C_ClearWDT
 0000               mov   reg[RES_WDT], 00h
 0000               macro M8C_ClearWDTAndSleep
 0000               mov   reg[RES_WDT], 38h
 0000               macro M8C_Stall
 0000               or    reg[ASY_CR], ASY_CR_SYNCEN
 0000               macro M8C_Unstall
 0000               and   reg[ASY_CR], ~ASY_CR_SYNCEN
 0000               macro M8C_Sleep
 0000               or    reg[CPU_SCR0], CPU_SCR0_SLEEP_MASK
 0000               ; The next instruction to be executed depends on the state of the
 0000               ; various interrupt enable bits. If some interrupts are enabled
 0000               ; and the global interrupts are disabled, the next instruction will
 0000               ; be the one that follows the invocation of this macro. If global
 0000               ; interrupts are also enabled then the next instruction will be
 0000               ; from the interrupt vector table. If no interrupts are enabled
 0000               ; then the CPU sleeps forever.
 0000               macro M8C_Stop
 0000               ; In general, you probably don't want to do this, but here's how:
 0000               or    reg[CPU_SCR0], CPU_SCR0_STOP_MASK
 0000               ; Next instruction to be executed is located in the interrupt
 0000               ; vector table entry for Power-On Reset.
 0000               macro M8C_Reset
 0000               ; Restore CPU to the power-on reset state.
 0000               mov A, 0
 0000               SSC
 0000               ; Next non-supervisor instruction will be at interrupt vector 0.
 0000               macro Suspend_CodeCompressor
 0000               or   F, 0
 0000               macro Resume_CodeCompressor
 0000               add  SP, 0
 0001           Timer16_1_CONTROL_REG_START_BIT:           equ 0x01    ; Control register start bit
 00E1           Timer16_1_INT_REG:                         equ 0x0e1
 0002           Timer16_1_INT_MASK:                        equ 0x02
 0000           
 0000           
 0000           ;--------------------------------------------------
 0000           ; Constants for Timer16_1 user defined values
 0000           ;--------------------------------------------------
 0000           
 3A98           Timer16_1_PERIOD:                          equ 0x3a98
 0000           Timer16_1_COMPARE_VALUE:                   equ 0x0
 0000           
 0000           
 0000           ;--------------------------------------------------
 0000           ; Register Address Constants for Timer16_1
 0000           ;--------------------------------------------------
 0000           
 0020           Timer16_1_COUNTER_LSB_REG:             equ 0x20   ; DR0 Counter register
 0024           Timer16_1_COUNTER_MSB_REG:             equ 0x24
 0021           Timer16_1_PERIOD_LSB_REG:              equ 0x21   ; DR1 Period register
 0025           Timer16_1_PERIOD_MSB_REG:              equ 0x25
 0022           Timer16_1_COMPARE_LSB_REG:             equ 0x22   ; DR2 CompareValue register
 0026           Timer16_1_COMPARE_MSB_REG:             equ 0x26
 0023           Timer16_1_CONTROL_LSB_REG:             equ 0x23   ; Control register
 0027           Timer16_1_CONTROL_MSB_REG:             equ 0x27
 0020           Timer16_1_FUNC_LSB_REG:                equ 0x20   ; Function register
 0024           Timer16_1_FUNC_MSB_REG:                equ 0x24
 0021           Timer16_1_INPUT_LSB_REG:               equ 0x21   ; Input register
 0025           Timer16_1_INPUT_MSB_REG:               equ 0x25
 0022           Timer16_1_OUTPUT_LSB_REG:              equ 0x22   ; Output register
 0026           Timer16_1_OUTPUT_MSB_REG:              equ 0x26
 0000           
 0000           
 0000           ;--------------------------------------------------
 0000           ; Timer16_1 Macro 'Functions'
 0000           ;--------------------------------------------------
 0000           
 0000              macro Timer16_1_Start_M
 0000              or    reg[Timer16_1_CONTROL_LSB_REG],  Timer16_1_CONTROL_REG_START_BIT
 0000              macro Timer16_1_Stop_M
 0000              and   reg[Timer16_1_CONTROL_LSB_REG], ~Timer16_1_CONTROL_REG_START_BIT
 0000              macro Timer16_1_EnableInt_M
 0000              M8C_EnableIntMask Timer16_1_INT_REG, Timer16_1_INT_MASK
 0000              macro Timer16_1_DisableInt_M
 0000              M8C_DisableIntMask Timer16_1_INT_REG, Timer16_1_INT_MASK
 0009           addr_internal_inc_ms: 	equ 09h
 0000           ;threshold_value:		equ 0Ah
 0000           
 0001           sec_mode: 				equ 01h
 0002           halfsec_mode: 			equ 02h
 0003           tenthsec_mode: 			equ 03h
 0000           
 0000           
 0000           ;addr_inc_ms: 			equ 10h
 0000           ;addr_inc_s: 			equ 11h
 0000           ;addr_inc_m: 			equ 12h
 0000           ;addr_inc_h: 			equ 13h
 0000           ;
 0000           ;read_addr_inc_ms: 		equ 04h
 0000           ;read_addr_inc_s: 		equ 05h
 0000           ;read_addr_inc_m: 		equ 06h
 0000           ;read_addr_inc_h: 		equ 07h
 0000           ;
 0000           ;addr_lng_p: 			equ 14h
 0000           ;addr_shrt_p: 			equ 15h
 0000           ;
 0000           ;addr_acc_mode: 		equ 16h
 0000           ;sec_mode: 				equ 01h
 0000           ;halfsec_mode: 			equ 02h
 0000           ;tenthsec_mode: 		equ 03h
 0000           ;
 0000           ;md_flg: 				equ 50h
 0000           ;
 0000           ;count_saved:			equ 30h
 0000           ;read_saved: 			equ 31h
 0000           ;save_time_index:		equ 40h
 0000           ;
 0000           ;ADC_value_0:			equ 50h
 0000           ;ADC_value_1:			equ 51h
 0000           ;ADC_value_2:			equ 52h
 0000           ;ADC_value_3:			equ 53h
 0000           ;	
 0000           
 0000           ;export addr_internal_inc_ms
 0000           ;export addr_inc_ms
 0000           ;export addr_inc_s
 0000           ;export addr_inc_m
 0000           ;export addr_inc_h
 0000           ;
 0000           ;export read_addr_inc_ms
 0000           ;export read_addr_inc_s
 0000           ;export read_addr_inc_m
 0000           ;export read_addr_inc_h
 0000           ;
 0000           ;export addr_lng_p
 0000           ;export addr_shrt_p
 0000           ;
 0000           ;export addr_acc_mode
 0000           ;;export sec_mode
 0000           ;;export halfsec_mode
 0000           ;;export tenthsec_mode
 0000           ;
 0000           ;export md_flg
 0000           ;
 0000           ;export count_saved
 0000           ;export read_saved
 0000           ;export save_time_index
 0000           ;
 0000           ;export ADC_value_0
 0000           ;export ADC_value_1
 0000           ;export ADC_value_2
 0000           ;export ADC_value_3
 0000           	
 0001           sec_mode: 				equ 01h
 0002           halfsec_mode: 			equ 02h
 0003           tenthsec_mode: 			equ 03h
 0001           max_mode:				equ 01h			;for memory mode
 0002           min_mode:				equ 02h			;for memory mode
 0060           mem_mode:				equ 60h
 0000           
 0000           ;References from the memory module
 0000           
 0040           pg6_reference: equ 40h
 0000           
 0041           sum_hr: equ 41h
 0042           sum_min_LSB: equ 42h
 0043           sum_min_MSB: equ 43h
 0044           sum_sec_LSB: equ 44h
 0045           sum_sec_MSB: equ 45h
 0046           sum_ms: equ 46h
 0000           
 0047           avg_hr: equ 47h
 0048           avg_min: equ 48h
 0049           avg_sec: equ 49h
 0050           avg_ms: equ 50h
 0000           
 0051           max_hr: equ 51h
 0052           max_min: equ 52h
 0053           max_sec: equ 53h
 0054           max_ms: equ 54h
 0000           
 0055           min_hr: equ 55h
 0056           min_min: equ 56h
 0057           min_sec: equ 57h
 0058           min_ms: equ 58h
 0000           
 0059           flag_val: equ 59h
 0000           
 0062           input_count: equ 62h	;71h
 0063           counter_sum: equ 63h	;69h
 0064           counting_adds: equ 64h	;70h
 0065           operand_2:equ 65h		;40h
 00A7           counter_input: equ A7h	
 0077           result_avg: equ 77h		;68h
 0011           quotient_val: equ 11h	;11h
 0000           
 0000           
 0000           
 0000           
                export _main
                ;export addr_internal_inc_ms
                export addr_pin_inc_ms
                export addr_adc_inc_ms
                export addr_timer_inc_ms
                export addr_inc_ms
                export addr_inc_s
                export addr_inc_m
                export addr_inc_h
                
                export addr_timer_flag
                
                export read_addr_inc_ms
                export read_addr_inc_s
                export read_addr_inc_m
                export read_addr_inc_h
                
                export addr_lng_p
                export addr_shrt_p
                
                export addr_acc_mode
                
                export md_flg
                
                export count_saved
                export read_saved
                export save_time_index
                
                export iResult1  
                export iResult_count
                export iResult_Total
                export dOpr2
                export dOpr1
                export dRes
                export threshold_value
                 
                export sound_timer_running
                
                export debug_register
                
                
                
                area var(RAM)                     
                ;addr_internal_inc_ms:  blk 1
 0000           addr_timer_inc_ms:              blk 1
 0001           addr_pin_inc_ms:                blk 1
 0002           addr_adc_inc_ms:                blk 1
 0003           addr_inc_ms:                    blk 1
 0004           addr_inc_s:                     blk 1
 0005           addr_inc_m:                     blk 1
 0006           addr_inc_h:                     blk 1
 0007           addr_timer_flag:                blk 1
 0008           
 0008           read_addr_inc_ms:               blk 1
 0009           read_addr_inc_s:                blk 1
 000A           read_addr_inc_m:                blk 1
 000B           read_addr_inc_h:                blk 1
 000C           
 000C           addr_lng_p:                     blk 1
 000D           addr_shrt_p:                    blk 1
 000E           
 000E           addr_acc_mode:                  blk 1
 000F           
 000F           md_flg:                                 blk 1
 0010           
 0010           count_saved:                    blk 1
 0011           read_saved:                     blk 1
 0012           save_time_index:                blk 1
 0013           
 0013           iResult_Total:                  blk     4
 0017           iResult1:                       blk 4  ; ADC1 result storage
 001B           iResult_count:                  blk 4
 001F           dOpr2:                                  blk     4
 0023           dOpr1:                                  blk     4
 0027           dRes:                                   blk 4
 002B           
 002B           threshold_value:                blk 2
 002D           incoming_value:                 blk 2
 002F           sound_timer_running:    blk 1
 0030           
 0030           debug_register:                 blk 1
 0031           
 0031           
                area text(ROM,REL)
                ;export time_counter
 0000           _main:
 0000           
 0000 7C0000            lcall LCD_Start
 0003           
 0003           
 0003           Initialize_Interrupt:
 0003 43E102        or    reg[INT_MSK1], INT_MSK1_DBB01               ; enable specified interrupt enable bit
 0006 43E020        or    reg[INT_MSK0], INT_MSK0_GPIO               ; enable specified interrupt enable bit
 0009 7101          or    F, FLAG_GLOBAL_IE
 000B           
 000B           Initialize_Variables:
 000B 550900            mov [addr_internal_inc_ms],00h
 000E 550100            mov [addr_pin_inc_ms], 00h
 0011 550200            mov [addr_adc_inc_ms], 00h
 0014 550000            mov [addr_timer_inc_ms],00h
 0017 550300            mov [addr_inc_ms],00h
 001A 550400            mov [addr_inc_s],00h
 001D 550500            mov [addr_inc_m],00h
 0020 550600            mov [addr_inc_h],00h
 0023 550F01            mov [md_flg],01h
 0026 553000            mov [debug_register], 00h
 0029 551200            mov [save_time_index], 00h
 002C 555900            mov [flag_val], 00h
 002F           
 002F           Set_Up_Anolog:
 002F 5003              mov   A, PGA_1_HIGHPOWER
 0031 7C0000        lcall PGA_1_Start           ;offset
 0034                   
 0034 5003              mov   A, PGA_2_HIGHPOWER 
 0036 7C0000        lcall PGA_2_Start
 0039                   
 0039 5003          mov   A, LPF2_1_HIGHPOWER
 003B 7C0000        lcall LPF2_1_Start
 003E                   
 003E 5007          mov   A, 7                    ; Set resolution to 7 Bits -- I think this gets set in GUI? LS
 0040 7C0000        lcall  DUALADC_1_SetResolution
 0043           
 0043 5003          mov   A, DUALADC_1_HIGHPOWER     ; Set Power and Enable A/D
 0045 7C0000        lcall  DUALADC_1_Start
 0048           
 0048 5000          mov   A, 00h                   ; Start A/D in continuous sampling mode - or put 20 to get 20 cycles in A
 004A 7C0000        lcall  DUALADC_1_GetSamples
 004D                   
 004D                   
 004D 7C0000            lcall Timer16_1_Start
 0050                   
 0050 62D506            mov reg[MVW_PP], 6                              ;writing on memory page 6
 0053 62D406            mov reg[MVR_PP], 6                              ;reading from memory page 6
 0056                   
 0056 62D006            mov reg[CUR_PP], 06h
 0059                   
 0059 550000            mov [00h], 00h
 005C 550100            mov [01h], 00h
 005F 550205            mov [02h], 05h
 0062 550342            mov [03h], 42h
 0065                   
 0065 550400            mov [04h], 00h
 0068 550500            mov [05h], 00h
 006B 550608            mov [06h], 08h
 006E 550756            mov [07h], 56h
 0071           
 0071 550800            mov [08h], 00h
 0074 550900            mov [09h], 00h
 0077 550A01            mov [0Ah], 01h
 007A 550B00            mov [0Bh], 00h
 007D                   
 007D 550C00            mov [0Ch], 00h
 0080 550D00            mov [0Dh], 00h
 0083 550E00            mov [0Eh], 00h
 0086 550F00            mov [0Fh], 00h
 0089                   
 0089 551000            mov [10h], 00h
 008C 551100            mov [11h], 00h
 008F 551200            mov [12h], 00h
 0092 551300            mov [13h], 00h
 0095                   
 0095 551400            mov [14h], 00h
 0098 551500            mov [15h], 00h
 009B 551600            mov [16h], 00h
 009E 551700            mov [17h], 00h
 00A1                   
 00A1 551800            mov [18h], 00h
 00A4 551900            mov [19h], 00h
 00A7 551A00            mov [1Ah], 00h
 00AA 551B00            mov [1Bh], 00h
 00AD                   
 00AD 551C00            mov [1Ch], 00h
 00B0 551D00            mov [1Dh], 00h
 00B3 551E00            mov [1Eh], 00h
 00B6 551F00            mov [1Fh], 00h
 00B9                   
 00B9 552000            mov [20h], 00h
 00BC 552100            mov [21h], 00h
 00BF 552200            mov [22h], 00h
 00C2 552300            mov [23h], 00h
 00C5                   
 00C5 552400            mov [24h], 00h
 00C8 552500            mov [25h], 00h
 00CB 552600            mov [26h], 00h
 00CE 552700            mov [27h], 00h
 00D1                   
 00D1 62D000            mov reg[CUR_PP], 00h
 00D4           
 00D4           loop:
 00D4           
 00D4 5000              mov A, 00h
 00D6 570E              mov X, 0Eh
 00D8 7C0000            lcall LCD_Position
 00DB 510D              mov A, [addr_shrt_p]
 00DD 7C0000            lcall LCD_PrHexByte
 00E0           ;       
 00E0           ;       mov A, 01h
 00E0           ;       mov X, 03h
 00E0           ;       lcall LCD_Position
 00E0           ;       mov A, [md_flg]
 00E0           ;       lcall LCD_PrHexByte
 00E0           ;       
 00E0           ;       mov A, 01h
 00E0           ;       mov X, 07h
 00E0           ;       lcall LCD_Position
 00E0           ;       mov A, [debug_register]
 00E0           ;       lcall LCD_PrHexByte
 00E0           ;
 00E0           ;       mov A, 01h
 00E0           ;       mov X, 06h
 00E0           ;       lcall LCD_Position
 00E0           ;       mov A, [addr_pin_inc_ms]
 00E0           ;       lcall LCD_PrHexByte
 00E0           ;       
 00E0           ;       mov A, 01h
 00E0           ;       mov X, 09h
 00E0           ;       lcall LCD_Position
 00E0           ;       mov A, [addr_adc_inc_ms]
 00E0           ;       lcall LCD_PrHexByte
 00E0           
 00E0           ;       mov A, 01h
 00E0           ;       mov X, 0Ch
 00E0           ;       lcall LCD_Position
 00E0           ;       mov A, [threshold_value+1]
 00E0           ;       lcall LCD_PrHexByte
 00E0           ;       
 00E0           ;       mov A, 01h
 00E0           ;       mov X, 0Eh
 00E0           ;       lcall LCD_Position
 00E0           ;       mov A, [addr_timer_inc_ms]
 00E0           ;       lcall LCD_PrHexByte
 00E0           
 00E0           Chcklngp:
 00E0 3C0C01        cmp [addr_lng_p],01h 
 00E3 B013              jnz StaySameMode                ;if its not set stay in same mode
 00E5           
 00E5           ;       ;toggle if you get long press
 00E5           ;       mov A, reg[PRT1DR]
 00E5           ;       xor A, FFh
 00E5           ;       mov reg[PRT1DR], A
 00E5                   
 00E5 550C00            mov [addr_lng_p],00h    ;reset long press value
 00E8 550D00            mov [addr_shrt_p],00h   ;reset short press value
 00EB                   
 00EB           
 00EB           
 00EB           next_Mode:
 00EB 70FB          and F, FBh                  ;clear CF
 00ED 650F              asl [md_flg]
 00EF                   
 00EF           
 00EF 3C0F20            cmp [md_flg],20h
 00F2 B004              jnz StaySameMode
 00F4 550F01            mov [md_flg],01h
 00F7           
 00F7           StaySameMode:
 00F7 3C0F01            cmp [md_flg],01h
 00FA A015              jz Accuracy_m          
 00FC 3C0F02            cmp [md_flg],02h
 00FF A07F              jz Threshold_m
 0101 3C0F04            cmp [md_flg],04h
 0104 A154              jz Button_m
 0106 3C0F08            cmp [md_flg],08h
 0109 A2B7              jz Sound_m
 010B 3C0F10            cmp [md_flg],10h
 010E A4B1              jz Mem_Display
 0110                   
 0110                   
 0110           
 0110           ;---------------------MODES-----------------------------------------------------
 0110           ;-------------------------------------------------------------------------------
 0110           ;---------------------START ACCURACY MODE---------------------------------------
 0110           
 0110           Accuracy_m:
 0110 3C0D00       cmp [addr_shrt_p], 00h
 0113 B015              jnz check_acc_ms
 0115 5000              mov A, 00h
 0117 5700              mov X, 00h
 0119 7C0000            lcall LCD_Position
 011C 509B              mov A, >ACCURACY_MODE
 011E 579B              mov X, <ACCURACY_MODE
 0120 7C0000            lcall LCD_PrCString
 0123                   
 0123 551000            mov [count_saved], 00h
 0126                   
 0126 7D00D4            ljmp loop
 0129           
 0129           check_acc_ms:
 0129 3C0D01            cmp [addr_shrt_p], 01h
 012C B015              jnz check_acc_halfsec
 012E 550E03            mov [addr_acc_mode], tenthsec_mode      ;tenth second mode by default
 0131 5000              mov A, 00h
 0133 5700              mov X, 00h
 0135 7C0000            lcall LCD_Position
 0138 506B              mov A, >TENTHSEC_MODE
 013A 576B              mov X, <TENTHSEC_MODE
 013C 7C0000            lcall LCD_PrCString
 013F 7D00D4            ljmp loop
 0142           
 0142           check_acc_halfsec:
 0142 3C0D02            cmp [addr_shrt_p] , 02h
 0145 B015              jnz check_acc_sec
 0147 550E02            mov [addr_acc_mode], halfsec_mode
 014A 5000              mov A, 00h
 014C 5700              mov X, 00h
 014E 7C0000            lcall LCD_Position
 0151 507C              mov A, >HALFSEC_MODE
 0153 577C              mov X, <HALFSEC_MODE
 0155 7C0000            lcall LCD_PrCString
 0158 7D00D4            ljmp loop
 015B                   
 015B           check_acc_sec:
 015B 3C0D03            cmp [addr_shrt_p] , 03h
 015E B015              jnz check_acc_end
 0160 550E01            mov [addr_acc_mode], sec_mode
 0163 5000              mov A, 00h
 0165 5700              mov X, 00h
 0167 7C0000            lcall LCD_Position
 016A 508B              mov A, >SEC_MODE
 016C 578B              mov X, <SEC_MODE
 016E 7C0000            lcall LCD_PrCString
 0171 7D00D4            ljmp loop
 0174           
 0174           check_acc_end:
 0174 3C0D04            cmp [addr_shrt_p], 04h
 0177 CF5C              jc loop                         ;make sure SP presses is less than 5 in button mode
 0179 550D00            mov [addr_shrt_p], 00h
 017C                   
 017C 7D00D4            ljmp loop
 017F                   
 017F           ;---------------------END ACCURACY MODE--------------------------------------
 017F                   
 017F           ;---------------------START THRESHOLD MODE-----------------------------------
 017F                   
 017F           Threshold_m:
 017F 3C0D00            cmp [addr_shrt_p], 00h
 0182 B012              jnz check_input_sensitivity
 0184 5000              mov A, 00h
 0186 5700              mov X, 00h
 0188 7C0000            lcall LCD_Position
 018B 50ED              mov A, >THRESHOLD_MODE
 018D 57ED              mov X, <THRESHOLD_MODE
 018F 7C0000            lcall LCD_PrCString
 0192                   
 0192                   
 0192                   
 0192 7D00D4            ljmp loop
 0195                   
 0195           check_input_sensitivity:
 0195 3C0D01            cmp [addr_shrt_p], 01h
 0198 B012              jnz calculate_threshold                 ;this may just exit without short button press 
 019A 5000              mov A, 00h
 019C 5700              mov X, 00h
 019E 7C0000            lcall LCD_Position
 01A1 5053              mov A, >CLEAN_LCD
 01A3 5753              mov X, <CLEAN_LCD
 01A5 7C0000            lcall LCD_PrCString
 01A8 7D00D4            ljmp loop
 01AB                   
 01AB           calculate_threshold:	
 01AB           	;clear iresult_total
 01AB 3C0D02            cmp [addr_shrt_p], 02h
 01AE BFFC              jnz calculate_threshold                 ;this may just exit without short button press
 01B0                   
 01B0 551600            mov [iResult_Total+3], 00h
 01B3 551500            mov [iResult_Total+2], 00h
 01B6 551400            mov [iResult_Total+1], 00h
 01B9 551300            mov [iResult_Total+0], 00h
 01BC                   
 01BC 551E00            mov [iResult_count+3], 00h
 01BF 551D00            mov [iResult_count+2], 00h
 01C2 551C00            mov [iResult_count+1], 00h
 01C5 551B00            mov [iResult_count+0], 00h
 01C8                   
 01C8 550200            mov [addr_adc_inc_ms],00h       ;reset our little timer - not being used by any routine
 01CB           wait_1_ADC:                              ; Poll until data is complete
 01CB 7C0000        lcall  DUALADC_1_fIsDataAvailable
 01CE AFFC          jz    wait_1_ADC
 01D0 70FE          and   F, ~FLAG_GLOBAL_IE
 01D2           
 01D2 7C0000        lcall  DUALADC_1_iGetData1        ; Get ADC1 Data (X=MSB A=LSB)
 01D5 7101          or    F, FLAG_GLOBAL_IE
 01D7           
 01D7                   ; Reset flag
 01D7 7C0000            lcall  DUALADC_1_ClearFlag 
 01DA                   ;add the received iResult to total results
 01DA 70FB              and F, FBh
 01DC                   
 01DC 0416              add     [iResult_Total+3], A    ;save LSB
 01DE 5B                mov A, X
 01DF 0C15              adc [iResult_Total+2], A        ;save MSB
 01E1 0E1400            adc [iResult_Total+1], 00h
 01E4 0E1300            adc [iResult_Total+0], 00h
 01E7                   
 01E7 761E              inc [iResult_count+3]
 01E9 0E1D00            adc [iResult_count+2],00h
 01EC 0E1C00            adc [iResult_count+1],00h
 01EF 0E1B00            adc [iResult_count+0],00h
 01F2                   
 01F2 3C0228            cmp [addr_adc_inc_ms], 28h
 01F5 BFD5              jnz wait_1_ADC
 01F7                   
 01F7 5F2313            mov [dOpr1+0], [iResult_Total+0]
 01FA 5F2414            mov [dOpr1+1], [iResult_Total+1]
 01FD 5F2515            mov [dOpr1+2], [iResult_Total+2]
 0200 5F2616            mov [dOpr1+3], [iResult_Total+3]
 0203                   
 0203 5F1F1B            mov [dOpr2+0], [iResult_count+0]
 0206 5F201C            mov [dOpr2+1], [iResult_count+1]
 0209 5F211D            mov [dOpr2+2], [iResult_count+2]
 020C 5F221E            mov [dOpr2+3], [iResult_count+3]
 020F                   
 020F 7C09A8            lcall divide_32_routine
 0212 5F1A2A            mov [iResult1+3], [dRes+3]
 0215 5F1929            mov [iResult1+2], [dRes+2]
 0218 5F1828            mov [iResult1+1], [dRes+1]
 021B 5F1727            mov [iResult1+0], [dRes+0]
 021E                   
 021E                   ;save to threshold value
 021E 5F2C1A            mov [threshold_value+1], [iResult1+3]
 0221 5F2B19            mov [threshold_value+0], [iResult1+2]
 0224                   ;shift threshold value to make whistle trigger when it's 2x higher
 0224 652C              asl [threshold_value+1]
 0226 652B              asl [threshold_value+0]
 0228                   
 0228 5000              mov A, 00h
 022A 5700              mov X, 00h
 022C 7C0000            lcall LCD_Position
 022F 50FE              mov A, >CALC_THRESH_MODE
 0231 57FE              mov X, <CALC_THRESH_MODE
 0233 7C0000            lcall LCD_PrCString
 0236                   
 0236 5000              mov A, 00h
 0238 570B              mov X, 0Bh
 023A 7C0000            lcall LCD_Position
 023D 511A              mov A, [iResult1+3]
 023F 7C0000            lcall LCD_PrHexByte
 0242                   
 0242 5000              mov A, 00h
 0244 570D              mov X, 0Dh
 0246 7C0000            lcall LCD_Position
 0249 512C              mov A, [threshold_value+1]
 024B 7C0000            lcall LCD_PrHexByte
 024E                   
 024E           end_input_sensitivity:
 024E 3C0D03            cmp [addr_shrt_p], 03h  
 0251 CE82              jc loop                         ;make sure SP presses is less than 5 in button mode
 0253 550D00            mov [addr_shrt_p], 00h
 0256                   
 0256 7D00D4            ljmp loop
 0259                   
 0259           ;---------------------END THRESHOLD MODE--------------------------------------
 0259                   
 0259           ;---------------------START BUTTON MODE---------------------------------------
 0259           
 0259           Button_m:
 0259 3C0D00        cmp [addr_shrt_p], 00h
 025C B00F              jnz check_but_clear
 025E 5000              mov A, 00h
 0260 5700              mov X, 00h
 0262 7C0000            lcall LCD_Position
 0265 50AA              mov A, >BUTTON_MODE
 0267 57AA              mov X, <BUTTON_MODE
 0269 7C0000            lcall LCD_PrCString
 026C           
 026C           check_but_clear:
 026C 3C0D01            cmp [addr_shrt_p], 01h
 026F B021              jnz check_but_start
 0271 550300            mov [addr_inc_ms], 00h
 0274 550400            mov [addr_inc_s], 00h
 0277 550500            mov [addr_inc_m], 00h
 027A 550600            mov [addr_inc_h], 00h
 027D 550701            mov [addr_timer_flag], 01h                      ;new count is starting
 0280                   
 0280                   
 0280 5000              mov A, 00h
 0282 5700              mov X, 00h
 0284 7C0000            lcall LCD_Position
 0287 50CB              mov A, >CLEAR_TIME
 0289 57CB              mov X, <CLEAR_TIME
 028B 7C0000            lcall LCD_PrCString
 028E                   ;lcall Display_Time_LCD
 028E 7D00D4            ljmp loop
 0291                   
 0291           check_but_start:
 0291 3C0D02            cmp [addr_shrt_p], 02h
 0294 B09A              jnz check_but_stop
 0296           
 0296                   ;check if first entry to timer then reset timer
 0296 3C0701            cmp [addr_timer_flag], 01h
 0299 B007              jnz button_timer_routine
 029B                   ;else restart timer
 029B 550000            mov [addr_timer_inc_ms], 00h
 029E 550700            mov [addr_timer_flag], 00h
 02A1                   
 02A1           button_timer_routine:
 02A1 3C0E01                    cmp [addr_acc_mode],sec_mode
 02A4 A024                      jz label_sec_mode
 02A6           
 02A6 3C0E02                    cmp [addr_acc_mode],halfsec_mode
 02A9 A007                      jz label_halfsec_mode
 02AB           
 02AB           	label_tenthsec_mode:
 02AB           		;mov [addr_inc_ms], [addr_internal_inc_ms]
 02AB 5F0300                    mov [addr_inc_ms], [addr_timer_inc_ms]
 02AE 7D02D2                    ljmp check_ms
 02B1           
 02B1           	label_halfsec_mode: 
 02B1           ;		mov A, [addr_internal_inc_ms]
 02B1 5100                      mov A, [addr_timer_inc_ms]
 02B3 5C                        mov X, A
 02B4 3932                      cmp A, 32h
 02B6 B007                      jnz check_if_00
 02B8           ;               mov [addr_inc_ms], [addr_internal_inc_ms]
 02B8 5F0300                    mov [addr_inc_ms], [addr_timer_inc_ms]
 02BB 7D02D2                    ljmp check_ms
 02BE           	check_if_00:
 02BE 5B                        mov A, X
 02BF 3900                      cmp A, 00h
 02C1 B010                      jnz check_ms
 02C3           ;               mov [addr_inc_ms], [addr_internal_inc_ms]
 02C3 5F0300                    mov [addr_inc_ms], [addr_timer_inc_ms]
 02C6 7D02D2                    ljmp check_ms
 02C9                           
 02C9           	label_sec_mode: 
 02C9           ;		mov A, [addr_internal_inc_ms]					;copy over because you need to compare
 02C9 5100                      mov A, [addr_timer_inc_ms]
 02CB 3900                      cmp A, 00h
 02CD B004                      jnz check_ms                                                                    ;keep display value as is
 02CF                           ;if it is 00 
 02CF           ;               mov [addr_inc_ms], [addr_internal_inc_ms]               ;update value to be displayed
 02CF 5F0300                    mov [addr_inc_ms], [addr_timer_inc_ms]
 02D2                           ;ljmp check_ms
 02D2                           
 02D2           
 02D2           	check_ms:
 02D2           ;		mov A, [addr_internal_inc_ms] 	;
 02D2 5100                      mov A, [addr_timer_inc_ms]      ;
 02D4 3964                      cmp A, 64h              ;compare to 100
 02D6 B006                      jnz display_ms
 02D8                           
 02D8           	reset_ms:
 02D8           ;		mov [addr_internal_inc_ms], 00h
 02D8 550000                    mov [addr_timer_inc_ms], 00h
 02DB 7604                      inc [addr_inc_s]                ;increment seconds
 02DD                           
 02DD           	display_ms:
 02DD 5000                      mov A, 00h
 02DF 5709                      mov X, 09h
 02E1 7C0000                    lcall LCD_Position
 02E4 5103                      mov A, [addr_inc_ms]
 02E6 7C0000                    lcall LCD_PrHexByte
 02E9                           
 02E9           	check_sec:	
 02E9 5104                      mov A, [addr_inc_s]     ;move [251] to A as to not mess up the actual number in [251] during compare
 02EB 393C                      cmp A, 3Ch              ;compare with 60
 02ED                                                           ;need to check CF : if it's not set than [251] is larger than 60
 02ED B006                      jnz display_sec
 02EF           
 02EF           	reset_sec:
 02EF 550400                    mov [addr_inc_s],00h
 02F2 7605                      inc [addr_inc_m]                ;increment minutes
 02F4                           
 02F4           	display_sec:
 02F4 5000                  mov A, 00h
 02F6 5706                      mov X, 06h
 02F8 7C0000                    lcall LCD_Position
 02FB 5104                      mov A, [addr_inc_s]
 02FD 7C0000                    lcall LCD_PrHexByte
 0300                           
 0300                           
 0300           	check_min:
 0300 5105                      mov A, [addr_inc_m]     ;move [251] to A as to not mess up the actual number in [251] during compare
 0302 393C                      cmp A, 3Ch              ;compare with 60
 0304                                                           ;need to check CF : if it's not set than [251] is larger than 60
 0304 B006                      jnz display_min
 0306           
 0306           	reset_min:
 0306 550400                    mov [addr_inc_s],00h
 0309 7606                      inc [addr_inc_h]
 030B           
 030B           	display_min:
 030B 5000                  mov A, 00h
 030D 5703                      mov X, 03h
 030F 7C0000                    lcall LCD_Position
 0312 5105                      mov A, [addr_inc_m]
 0314 7C0000                    lcall LCD_PrHexByte
 0317                           
 0317           	check_hour:
 0317 5106                      mov A, [addr_inc_h]
 0319 3918                      cmp A, 18h              ;compare with 24
 031B B004                      jnz display_hour
 031D                           
 031D           	reset_hour:
 031D 550600                    mov [addr_inc_h], 00h
 0320                           
 0320           	display_hour:
 0320 5000                      mov A, 00h
 0322 5700                      mov X, 00h
 0324 7C0000                    lcall LCD_Position
 0327 5106                      mov A, [addr_inc_h]
 0329 7C0000                    lcall LCD_PrHexByte
 032C 7D00D4            ljmp loop
 032F                   
 032F           check_but_stop:
 032F 3C0D03            cmp [addr_shrt_p], 03h
 0332 B02A              jnz before_check_but_end
 0334           ;       lcall Save_Time
 0334 3C5901            cmp [flag_val], 01h
 0337 A022              jz saved
 0339 555901            mov [flag_val], 01h
 033C           ;       mov [count_saved], 00h                  ;back to initialized value
 033C           ;       mov [save_time_index], 00
 033C           
 033C           ;save_and_count:
 033C 5106                      mov A, [addr_inc_h]
 033E                           ;mov A, FFh
 033E 3F12                      mvi [save_time_index], A
 0340 5105                      mov A, [addr_inc_m]
 0342                           ;mov A, EEh
 0342 3F12                      mvi [save_time_index], A
 0344 5104                      mov A, [addr_inc_s]
 0346                           ;mov A, DDh
 0346 3F12                      mvi [save_time_index], A
 0348 5103                      mov A, [addr_inc_ms]
 034A                           ;mov A, CCh
 034A 3F12                      mvi [save_time_index], A
 034C                           
 034C 7610                      inc [count_saved]
 034E                           
 034E 5001              mov A, 01h
 0350 5709              mov X, 09h
 0352 7C0000            lcall LCD_Position
 0355 5110              mov A, [count_saved]
 0357 7C0000            lcall LCD_PrHexByte
 035A                   
 035A                   
 035A                   ;inc [addr_shrt_p]
 035A           saved:
 035A           ;	mov [flag_val], 00h
 035A 7D00D4            ljmp loop
 035D                   ;stop timer
 035D           
 035D                   
 035D           before_check_but_end:
 035D 3C0D04            cmp [addr_shrt_p], 04h
 0360 B055              jnz check_but_end
 0362                   
 0362 555900            mov [flag_val], 00h
 0365                   
 0365           ;       mov A, 00h
 0365           ;       mov X, 00h
 0365           ;       lcall LCD_Position
 0365           ;       mov A, >DEBUG_MODE
 0365           ;       mov X, <DEBUG_MODE
 0365           ;       lcall LCD_PrCString
 0365           ;       
 0365           ;       mov A, 00h
 0365           ;       mov X, 0Ch
 0365           ;       lcall LCD_Position
 0365           ;       mov A, reg[MVW_PP]
 0365           ;       lcall LCD_PrHexByte
 0365           ;       ljmp loop
 0365           ;       
 0365           
 0365 554000            mov [pg6_reference], 00h
 0368                   
 0368 3E40              mvi A, [pg6_reference]
 036A 530B              mov [read_addr_inc_h], A
 036C 3E40              mvi A, [pg6_reference]
 036E 530A              mov [read_addr_inc_m], A
 0370 3E40              mvi A, [pg6_reference]
 0372 5309              mov [read_addr_inc_s], A
 0374 3E40              mvi A, [pg6_reference]
 0376 5308              mov [read_addr_inc_ms], A
 0378           
 0378 5000              mov A, 00h
 037A 5700              mov X, 00h
 037C 7C0000            lcall LCD_Position
 037F 510B              mov A, [read_addr_inc_h]
 0381 7C0000            lcall LCD_PrHexByte
 0384                   
 0384 5000              mov A, 00h
 0386 5703              mov X, 03h
 0388 7C0000            lcall LCD_Position
 038B 510A              mov A, [read_addr_inc_m]
 038D 7C0000            lcall LCD_PrHexByte
 0390                   
 0390 5000              mov A, 00h
 0392 5706              mov X, 06h
 0394 7C0000            lcall LCD_Position
 0397 5109              mov A, [read_addr_inc_s]
 0399 7C0000            lcall LCD_PrHexByte
 039C                   
 039C 5000              mov A, 00h
 039E 5709              mov X, 09h
 03A0 7C0000            lcall LCD_Position
 03A3 5108              mov A, [read_addr_inc_ms]
 03A5 7C0000            lcall LCD_PrHexByte     
 03A8                   
 03A8 5000              mov A, 00h
 03AA 570C              mov X, 0Ch
 03AC 7C0000            lcall LCD_Position
 03AF 5064              mov A, >SAVE
 03B1 5764              mov X, <SAVE
 03B3 7C0000            lcall LCD_PrCString
 03B6                   
 03B6           check_but_end:
 03B6 3C0D05            cmp [addr_shrt_p], 05h
 03B9 CD1A              jc loop                         ;make sure SP presses is less than 5 in button mode
 03BB 550D00            mov [addr_shrt_p], 00h
 03BE                   
 03BE 7D00D4            ljmp loop
 03C1                   
 03C1           ;---------------------END BUTTON MODE----------------------------------------
 03C1                   
 03C1           ;---------------------START SOUND MODE---------------------------------------
 03C1           Sound_m:
 03C1 3C0D00            cmp [addr_shrt_p], 00h
 03C4 B012              jnz start_sound_check
 03C6 5000              mov A, 00h
 03C8 5700              mov X, 00h
 03CA 7C0000            lcall LCD_Position
 03CD 5020              mov A, >SOUND_MODE
 03CF 5720              mov X, <SOUND_MODE
 03D1 7C0000            lcall LCD_PrCString
 03D4 7D00D4            ljmp loop
 03D7                   
 03D7           start_sound_check:
 03D7 3C0D01            cmp [addr_shrt_p], 01h
 03DA B021              jnz give_time_for_sound_to_occur_for_start
 03DC                   
 03DC 550300            mov [addr_inc_ms], 00h
 03DF 550400            mov [addr_inc_s], 00h
 03E2 550500            mov [addr_inc_m], 00h
 03E5 550600            mov [addr_inc_h], 00h
 03E8 550701            mov [addr_timer_flag], 01h                      ;new count is starting
 03EB                   
 03EB 5000              mov A, 00h
 03ED 5700              mov X, 00h
 03EF 7C0000            lcall LCD_Position
 03F2 50CB              mov A, >CLEAR_TIME
 03F4 57CB              mov X, <CLEAR_TIME
 03F6 7C0000            lcall LCD_PrCString
 03F9 7D00D4            ljmp loop
 03FC                   
 03FC           give_time_for_sound_to_occur_for_start:	
 03FC           	;clear iresult_total
 03FC 3C0D02            cmp [addr_shrt_p], 02h
 03FF B08B              jnz run_timer                   ;this may just exit without short button press
 0401                   
 0401                   ;disable button press to start timer
 0401 41E0DF        and   reg[INT_MSK0], ~INT_MSK0_GPIO              ; disable specified interrupt enable bit
 0404                   
 0404 551600            mov [iResult_Total+3], 00h
 0407 551500            mov [iResult_Total+2], 00h
 040A 551400            mov [iResult_Total+1], 00h
 040D 551300            mov [iResult_Total+0], 00h
 0410                   
 0410 551E00            mov [iResult_count+3], 00h
 0413 551D00            mov [iResult_count+2], 00h
 0416 551C00            mov [iResult_count+1], 00h
 0419 551B00            mov [iResult_count+0], 00h
 041C                   
 041C 550200            mov [addr_adc_inc_ms],00h       ;reset our little timer - not being used by any routine
 041F           wait_2_ADC:                              ; Poll until data is complete
 041F 7C0000        lcall  DUALADC_1_fIsDataAvailable
 0422 AFFC          jz    wait_2_ADC
 0424 70FE          and   F, ~FLAG_GLOBAL_IE
 0426           
 0426 7C0000        lcall  DUALADC_1_iGetData1        ; Get ADC1 Data (X=MSB A=LSB)
 0429 7101          or    F, FLAG_GLOBAL_IE
 042B           
 042B                   ; Reset flag
 042B 7C0000            lcall  DUALADC_1_ClearFlag 
 042E                   ;add the received iResult to total results
 042E 70FB              and F, FBh
 0430                   
 0430 0416              add     [iResult_Total+3], A    ;save LSB
 0432 5B                mov A, X
 0433 0C15              adc [iResult_Total+2], A        ;save MSB
 0435 0E1400            adc [iResult_Total+1], 00h
 0438 0E1300            adc [iResult_Total+0], 00h
 043B                   
 043B 761E              inc [iResult_count+3]
 043D 0E1D00            adc [iResult_count+2],00h
 0440 0E1C00            adc [iResult_count+1],00h
 0443 0E1B00            adc [iResult_count+0],00h
 0446                   
 0446                   ;cmp [addr_adc_inc_ms], 28h
 0446 3C0205            cmp [addr_adc_inc_ms], 05h;alex changed
 0449 BFD5              jnz wait_2_ADC
 044B                   
 044B 5F2313            mov [dOpr1+0], [iResult_Total+0]
 044E 5F2414            mov [dOpr1+1], [iResult_Total+1]
 0451 5F2515            mov [dOpr1+2], [iResult_Total+2]
 0454 5F2616            mov [dOpr1+3], [iResult_Total+3]
 0457                   
 0457 5F1F1B            mov [dOpr2+0], [iResult_count+0]
 045A 5F201C            mov [dOpr2+1], [iResult_count+1]
 045D 5F211D            mov [dOpr2+2], [iResult_count+2]
 0460 5F221E            mov [dOpr2+3], [iResult_count+3]
 0463                   
 0463 7C09A8            lcall divide_32_routine
 0466 5F1A2A            mov [iResult1+3], [dRes+3]
 0469 5F1929            mov [iResult1+2], [dRes+2]
 046C 5F1828            mov [iResult1+1], [dRes+1]
 046F 5F1727            mov [iResult1+0], [dRes+0]
 0472                   
 0472           compare_to_threshold:
 0472 5119              mov A, [iResult1+2]                             ;holds MSB of of result part that we care about (aka lower two bytes)
 0474 3A2B          cmp A, [threshold_value+0]          ;holds MSB of threshold
 0476 A006              jz check_LSB_of_sound                   ;if they are both zero than check LSB
 0478 D00D              jnc start_sound_timer           ;if there was no carry, than incoming MSB is greater than threshold MSB = SOUND!
 047A 7D00D4            ljmp loop                                       ;if there was a carry, than threshold MSB is greater than incoming, so incoming isn't high enough
 047D                                                                                   ;if not check if timing is running and continue running it/not running and continue not running it
 047D                   
 047D           check_LSB_of_sound:	
 047D 511A              mov A, [iResult1+3]                             
 047F 3A2C              cmp A, [threshold_value+1]
 0481 D004              jnc start_sound_timer                                   ;result is more than threshold
 0483                   ;ljmp check_run_timer                                                   ;if not check if timing is running and continue running it/not running and continue not running it
 0483 7D00D4            ljmp loop
 0486           
 0486           
 0486           start_sound_timer:
 0486           
 0486 760D              inc [addr_shrt_p]
 0488 7D00D4            ljmp loop
 048B           
 048B           run_timer:
 048B 3C0D03            cmp [addr_shrt_p], 03h
 048E B09F              jnz dont_run_timer
 0490                   
 0490                   ;re-enable button press
 0490 43E020        or    reg[INT_MSK0], INT_MSK0_GPIO               ; enable specified interrupt enable bit
 0493           
 0493 5D04              mov A, reg[PRT1DR]
 0495 31FF              xor A, FFh
 0497 6004              mov reg[PRT1DR], A
 0499                   
 0499 3C0701            cmp [addr_timer_flag], 01h
 049C B007              jnz sound_timer_routine
 049E                   ;else restart timer
 049E 550000            mov [addr_timer_inc_ms], 00h
 04A1 550700            mov [addr_timer_flag], 00h
 04A4           
 04A4           
 04A4           sound_timer_routine:
 04A4           	
 04A4 7C09CE            lcall Sound_mode_generic_timer
 04A7                   
 04A7           give_time_for_sound_to_occur_for_stop:	
 04A7           
 04A7           	
 04A7 551600            mov [iResult_Total+3], 00h
 04AA 551500            mov [iResult_Total+2], 00h
 04AD 551400            mov [iResult_Total+1], 00h
 04B0 551300            mov [iResult_Total+0], 00h
 04B3                   
 04B3 551E00            mov [iResult_count+3], 00h
 04B6 551D00            mov [iResult_count+2], 00h
 04B9 551C00            mov [iResult_count+1], 00h
 04BC 551B00            mov [iResult_count+0], 00h
 04BF                   
 04BF 550200            mov [addr_adc_inc_ms],00h       ;reset our little timer - not being used by any routine
 04C2           wait_2_ADC_stop:                              ; Poll until data is complete
 04C2 7C0000        lcall  DUALADC_1_fIsDataAvailable
 04C5 AFFC          jz    wait_2_ADC_stop
 04C7 70FE          and   F, ~FLAG_GLOBAL_IE
 04C9           
 04C9 7C0000        lcall  DUALADC_1_iGetData1        ; Get ADC1 Data (X=MSB A=LSB)
 04CC 7101          or    F, FLAG_GLOBAL_IE
 04CE           
 04CE                   ; Reset flag
 04CE 7C0000            lcall  DUALADC_1_ClearFlag 
 04D1                   ;add the received iResult to total results
 04D1 70FB              and F, FBh
 04D3                   
 04D3 0416              add     [iResult_Total+3], A    ;save LSB
 04D5 5B                mov A, X
 04D6 0C15              adc [iResult_Total+2], A        ;save MSB
 04D8 0E1400            adc [iResult_Total+1], 00h
 04DB 0E1300            adc [iResult_Total+0], 00h
 04DE                   
 04DE 761E              inc [iResult_count+3]
 04E0 0E1D00            adc [iResult_count+2],00h
 04E3 0E1C00            adc [iResult_count+1],00h
 04E6 0E1B00            adc [iResult_count+0],00h
 04E9                   
 04E9                   ;cmp [addr_adc_inc_ms], 28h
 04E9 3C0205            cmp [addr_adc_inc_ms], 05h;alex changed
 04EC BF32              jnz wait_2_ADC
 04EE                   
 04EE 5F2313            mov [dOpr1+0], [iResult_Total+0]
 04F1 5F2414            mov [dOpr1+1], [iResult_Total+1]
 04F4 5F2515            mov [dOpr1+2], [iResult_Total+2]
 04F7 5F2616            mov [dOpr1+3], [iResult_Total+3]
 04FA                   
 04FA 5F1F1B            mov [dOpr2+0], [iResult_count+0]
 04FD 5F201C            mov [dOpr2+1], [iResult_count+1]
 0500 5F211D            mov [dOpr2+2], [iResult_count+2]
 0503 5F221E            mov [dOpr2+3], [iResult_count+3]
 0506                   
 0506 7C09A8            lcall divide_32_routine
 0509 5F1A2A            mov [iResult1+3], [dRes+3]
 050C 5F1929            mov [iResult1+2], [dRes+2]
 050F 5F1828            mov [iResult1+1], [dRes+1]
 0512 5F1727            mov [iResult1+0], [dRes+0]
 0515                   
 0515           compare_to_threshold_stop:
 0515 5119              mov A, [iResult1+2]                             ;holds MSB of of result part that we care about (aka lower two bytes)
 0517 3A2B          cmp A, [threshold_value+0]          ;holds MSB of threshold
 0519 A006              jz check_LSB_of_sound_stop                      ;if they are both zero than check LSB
 051B D00D              jnc stop_the_sound_timer                        ;if there was no carry, than incoming MSB is greater than threshold MSB = SOUND!
 051D 7D00D4            ljmp loop                               ;if there was a carry, than threshold MSB is greater than incoming, so incoming isn't high enough
 0520                                                                                   ;if not check if timing is running and continue running it/not running and continue not running it
 0520                   
 0520           check_LSB_of_sound_stop:	
 0520 511A              mov A, [iResult1+3]                             
 0522 3A2C              cmp A, [threshold_value+1]
 0524 D004              jnc stop_the_sound_timer                                        ;result is more than threshold
 0526                   ;ljmp check_run_timer                                                   ;if not check if timing is running and continue running it/not running and continue not running it
 0526 7D00D4            ljmp loop       
 0529           
 0529           stop_the_sound_timer:
 0529 760D              inc [addr_shrt_p]                       ;shrt_p should be 04h
 052B 7D00D4            ljmp loop
 052E           
 052E           dont_run_timer:
 052E 3C0D04            cmp [addr_shrt_p], 04h
 0531 B02A              jnz before_check_but_end_sound
 0533                   ;save time here
 0533                   
 0533 3C5901            cmp [flag_val], 01h
 0536 A022              jz saved_sound
 0538 555901            mov [flag_val], 01h
 053B                   
 053B 5106              mov A, [addr_inc_h]
 053D                   ;mov A, FFh
 053D 3F12              mvi [save_time_index], A
 053F 5105              mov A, [addr_inc_m]
 0541                   ;mov A, EEh
 0541 3F12              mvi [save_time_index], A
 0543 5104              mov A, [addr_inc_s]
 0545                   ;mov A, DDh
 0545 3F12              mvi [save_time_index], A
 0547 5103              mov A, [addr_inc_ms]
 0549                   ;mov A, CCh
 0549 3F12              mvi [save_time_index], A
 054B                   
 054B 7610              inc [count_saved]
 054D                   
 054D 5001              mov A, 01h
 054F 5709              mov X, 09h
 0551 7C0000            lcall LCD_Position
 0554 5110              mov A, [count_saved]
 0556 7C0000            lcall LCD_PrHexByte
 0559                   
 0559           saved_sound:
 0559           	
 0559 7D00D4            ljmp loop
 055C                   
 055C           before_check_but_end_sound:
 055C           	
 055C 3C0D04            cmp [addr_shrt_p], 04h
 055F B055              jnz end_sound_check
 0561                   
 0561 555900            mov [flag_val], 00h
 0564                   
 0564 554000            mov [pg6_reference], 00h
 0567                   
 0567 3E40              mvi A, [pg6_reference]
 0569 530B              mov [read_addr_inc_h], A
 056B 3E40              mvi A, [pg6_reference]
 056D 530A              mov [read_addr_inc_m], A
 056F 3E40              mvi A, [pg6_reference]
 0571 5309              mov [read_addr_inc_s], A
 0573 3E40              mvi A, [pg6_reference]
 0575 5308              mov [read_addr_inc_ms], A
 0577           
 0577 5000              mov A, 00h
 0579 5700              mov X, 00h
 057B 7C0000            lcall LCD_Position
 057E 510B              mov A, [read_addr_inc_h]
 0580 7C0000            lcall LCD_PrHexByte
 0583                   
 0583 5000              mov A, 00h
 0585 5703              mov X, 03h
 0587 7C0000            lcall LCD_Position
 058A 510A              mov A, [read_addr_inc_m]
 058C 7C0000            lcall LCD_PrHexByte
 058F                   
 058F 5000              mov A, 00h
 0591 5706              mov X, 06h
 0593 7C0000            lcall LCD_Position
 0596 5109              mov A, [read_addr_inc_s]
 0598 7C0000            lcall LCD_PrHexByte
 059B                   
 059B 5000              mov A, 00h
 059D 5709              mov X, 09h
 059F 7C0000            lcall LCD_Position
 05A2 5108              mov A, [read_addr_inc_ms]
 05A4 7C0000            lcall LCD_PrHexByte     
 05A7                   
 05A7 5000              mov A, 00h
 05A9 570C              mov X, 0Ch
 05AB 7C0000            lcall LCD_Position
 05AE 5064              mov A, >SAVE
 05B0 5764              mov X, <SAVE
 05B2 7C0000            lcall LCD_PrCString
 05B5           
 05B5                   
 05B5           end_sound_check:
 05B5 3C0D05            cmp [addr_shrt_p], 05h  
 05B8 CB1B              jc loop                         ;make sure SP presses is less than 5 in button mode
 05BA 550D00            mov [addr_shrt_p], 00h
 05BD           
 05BD           
 05BD 7D00D4            ljmp loop
 05C0           ;---------------------END SOUND MODE-----------------------------------------
 05C0                   
 05C0           ;---------------------START MEMORY MODE--------------------------------------
 05C0           
 05C0           Mem_Display:
 05C0 3C0D00            cmp [addr_shrt_p], 00h
 05C3 B012              jnz here_1
 05C5 5000              mov A, 00h
 05C7 5700              mov X, 00h
 05C9 7C0000            lcall LCD_Position
 05CC 50DC              mov A, >MEMORY_MODE
 05CE 57DC              mov X, <MEMORY_MODE
 05D0 7C0000            lcall LCD_PrCString
 05D3 7D00D4            ljmp loop
 05D6                   
 05D6           	here_1:
 05D6 62D406            mov reg[MVR_PP], 6                      ;reading from memory page 6
 05D9                   
 05D9 554600            mov [sum_ms], 00h
 05DC 554400            mov [sum_sec_LSB], 00h
 05DF 554500            mov [sum_sec_MSB], 00h
 05E2 554200            mov [sum_min_LSB], 00h
 05E5 554300            mov [sum_min_MSB], 00h
 05E8 554100            mov [sum_hr], 00h
 05EB                   
 05EB 555000            mov [avg_ms], 00h
 05EE 554900            mov [avg_sec], 00h
 05F1 554800            mov [avg_min], 00h
 05F4 554700            mov [avg_hr], 00h
 05F7                   
 05F7 555400            mov [max_ms], 00h
 05FA 555300            mov [max_sec], 00h
 05FD 555200            mov [max_min], 00h
 0600 555100            mov [max_hr], 00h
 0603                   
 0603 555800            mov [min_ms], 00h
 0606 555700            mov [min_sec], 00h
 0609 555600            mov [min_min], 00h
 060C 555500            mov [min_hr], 00h
 060F                   
 060F           ;       mov [pg6_reference], 00h
 060F           
 060F 3C0D01            cmp [addr_shrt_p], 01h          ;maximum/longest mode
 0612 B0B1              jnz shortest_time
 0614                   
 0614 570B              mov X, 11
 0616 554000            mov [pg6_reference], 00         ;bringing the position at pg6 at the starting position
 0619 7D0634            ljmp next
 061C                   
 061C           next_A:
 061C 064003            add [pg6_reference], 3
 061F 70FB              and F, FBh
 0621 7D0634            ljmp next
 0624           next_B:
 0624 064002            add [pg6_reference], 2
 0627 70FB              and F, FBh
 0629 7D0634            ljmp next
 062C           next_C:
 062C 064001            add [pg6_reference], 1
 062F 70FB              and F, FBh
 0631 7D0634            ljmp next
 0634                   
 0634           next:
 0634 79                dec X
 0635 A04D              jz end_max
 0637 3E40              mvi A, [pg6_reference]
 0639 3A51              cmp A, [max_hr]
 063B A014              jz check_min_max
 063D CFDE              jc next_A
 063F 5351              mov [max_hr], A
 0641 3E40              mvi A, [pg6_reference]
 0643 5352              mov [max_min], A
 0645 3E40              mvi A, [pg6_reference]
 0647 5353              mov [max_sec], A
 0649 3E40              mvi A, [pg6_reference]
 064B 5354              mov [max_ms], A
 064D 7D0634            ljmp next
 0650           check_min_max:
 0650 3E40              mvi A, [pg6_reference]
 0652 3A52              cmp A, [max_min]
 0654 A010              jz check_sec_max
 0656 CFCD              jc next_B
 0658 5352              mov [max_min], A
 065A 3E40              mvi A, [pg6_reference]
 065C 5353              mov [max_sec], A
 065E 3E40              mvi A, [pg6_reference]
 0660 5354              mov [max_ms], A
 0662 7D0634            ljmp next
 0665           check_sec_max:
 0665 3E40              mvi A, [pg6_reference]
 0667 3A53              cmp A, [max_sec]
 0669 A00C              jz check_ms_max
 066B CFC0              jc next_C
 066D 5353              mov [max_sec], A
 066F 3E40              mvi A, [pg6_reference]
 0671 5354              mov [max_ms], A
 0673 7D0634            ljmp next
 0676           check_ms_max:
 0676 3E40              mvi A, [pg6_reference]
 0678 3A54              cmp A, [max_ms]
 067A AFB9              jz next
 067C CFB7              jc next
 067E 5354              mov [max_ms], A
 0680 7D0634            ljmp next
 0683           
 0683           end_max:
 0683           
 0683           ;	mov A, 01h
 0683           ;	mov X, 00h
 0683           ;	lcall LCD_Position
 0683           ;	mov A, >CLEAN_LCD
 0683           ;	mov X, <CLEAN_LCD
 0683           ;	lcall LCD_PrCString
 0683           	
 0683 5001              mov A, 01h
 0685 5700              mov X, 00h
 0687 7C0000            lcall LCD_Position
 068A 5151              mov A, [max_hr]
 068C 7C0000            lcall LCD_PrHexByte
 068F                   
 068F 5001              mov A, 01h
 0691 5703              mov X, 03h
 0693 7C0000            lcall LCD_Position
 0696 5152              mov A, [max_min]
 0698 7C0000            lcall LCD_PrHexByte
 069B                   
 069B 5001              mov A, 01h
 069D 5706              mov X, 06h
 069F 7C0000            lcall LCD_Position
 06A2 5153              mov A, [max_sec]
 06A4 7C0000            lcall LCD_PrHexByte
 06A7                   
 06A7 5001              mov A, 01h
 06A9 5709              mov X, 09h
 06AB 7C0000            lcall LCD_Position
 06AE 5154              mov A, [max_ms]
 06B0 7C0000            lcall LCD_PrHexByte
 06B3                   
 06B3           ;       mov A, 01h
 06B3           ;       mov X, 00h
 06B3           ;       lcall LCD_Position
 06B3           ;       mov A, >CLEAN_LCD
 06B3           ;       mov X, <CLEAN_LCD
 06B3           ;       lcall LCD_PrCString
 06B3           
 06B3 5000              mov A, 00h
 06B5 5700              mov X, 00h
 06B7 7C0000            lcall LCD_Position
 06BA 5094              mov A, >MAXIMUM
 06BC 5794              mov X, <MAXIMUM
 06BE 7C0000            lcall LCD_PrCString
 06C1                   
 06C1 7D00D4            ljmp loop
 06C4                   
 06C4           shortest_time:
 06C4 3C0D02            cmp [addr_shrt_p], 02h
 06C7 B0BE              jnz average
 06C9                   
 06C9 554000            mov [pg6_reference], 00
 06CC 570A              mov X, 10
 06CE 3E40              mvi A, [pg6_reference]
 06D0 5355              mov [min_hr], A
 06D2 3E40              mvi A, [pg6_reference]
 06D4 5356              mov [min_min], A
 06D6 3E40              mvi A, [pg6_reference]
 06D8 5357              mov [min_sec], A
 06DA 3E40              mvi A, [pg6_reference]
 06DC 5358              mov [min_ms], A
 06DE 7D06F6            ljmp next_values
 06E1                   
 06E1           min_loop:
 06E1           next_1:
 06E1 064003            add [pg6_reference], 3
 06E4 70FB              and F, FBh
 06E6 7D06F6            ljmp next_values
 06E9           next_2:
 06E9 064002            add [pg6_reference], 2
 06EC 70FB              and F, FBh
 06EE 7D06F6            ljmp next_values
 06F1           next_3:
 06F1 064001            add [pg6_reference], 1
 06F4 70FB              and F, FBh
 06F6           next_values:
 06F6 79                dec X
 06F7 A04D              jz end_min
 06F9 3E40              mvi A, [pg6_reference]
 06FB 3A55              cmp A, [min_hr]
 06FD A014              jz check_min_min
 06FF DFE1              jnc next_1
 0701 5355              mov [min_hr], A
 0703 3E40              mvi A, [pg6_reference]
 0705 5356              mov [min_min], A
 0707 3E40              mvi A, [pg6_reference]
 0709 5357              mov [min_sec], A
 070B 3E40              mvi A, [pg6_reference]
 070D 5358              mov [min_ms], A
 070F 7D06F6            ljmp next_values
 0712           check_min_min:
 0712 3E40              mvi A, [pg6_reference]
 0714 3A56              cmp A, [min_min]
 0716 A010              jz check_sec_min
 0718 DFD0              jnc next_2
 071A 5356              mov [min_min], A
 071C 3E40              mvi A, [pg6_reference]
 071E 5357              mov [min_sec], A
 0720 3E40              mvi A, [pg6_reference]
 0722 5358              mov [min_ms], A
 0724 7D06E1            ljmp next_1
 0727           check_sec_min:
 0727 3E40              mvi A, [pg6_reference]
 0729 3A57              cmp A, [min_sec]
 072B A00C              jz check_ms_min
 072D DFC3              jnc next_3
 072F 5357              mov [min_sec], A
 0731 3E40              mvi A, [pg6_reference]
 0733 5358              mov [min_ms], A
 0735 7D06E1            ljmp next_1
 0738           check_ms_min:
 0738 3E40              mvi A, [pg6_reference]
 073A 3A58              cmp A, [min_ms]
 073C AFB9              jz next_values
 073E DFB7              jnc next_values
 0740 5358              mov [min_ms], A
 0742 7D06F6            ljmp next_values
 0745                   
 0745           end_min:
 0745           ;	mov A, 01h
 0745           ;	mov X, 00h
 0745           ;	lcall LCD_Position
 0745           ;	mov A, >CLEAN_LCD
 0745           ;	mov X, <CLEAN_LCD
 0745           ;	lcall LCD_PrCString
 0745           	
 0745 5001              mov A, 01h
 0747 5700              mov X, 00h
 0749 7C0000            lcall LCD_Position
 074C 5155              mov A, [min_hr]
 074E 7C0000            lcall LCD_PrHexByte
 0751                   
 0751 5001              mov A, 01h
 0753 5703              mov X, 03h
 0755 7C0000            lcall LCD_Position
 0758 5156              mov A, [min_min]
 075A 7C0000            lcall LCD_PrHexByte
 075D                   
 075D 5001              mov A, 01h
 075F 5706              mov X, 06h
 0761 7C0000            lcall LCD_Position
 0764 5157              mov A, [min_sec]
 0766 7C0000            lcall LCD_PrHexByte
 0769                   
 0769 5001              mov A, 01h
 076B 5709              mov X, 09h
 076D 7C0000            lcall LCD_Position
 0770 5158              mov A, [min_ms]
 0772 7C0000            lcall LCD_PrHexByte
 0775                   
 0775           ;       mov A, 00h
 0775           ;       mov X, 00h
 0775           ;       lcall LCD_Position
 0775           ;       mov A, >CLEAN_LCD
 0775           ;       mov X, <CLEAN_LCD
 0775           ;       lcall LCD_PrCString
 0775                   
 0775 5000              mov A, 00h
 0777 5700              mov X, 00h
 0779 7C0000            lcall LCD_Position
 077C 5083              mov A, >MINIMUM
 077E 5783              mov X, <MINIMUM
 0780 7C0000            lcall LCD_PrCString
 0783                   
 0783 7D00D4            ljmp loop
 0786           average:
 0786 3C0D03            cmp [addr_shrt_p],03h
 0789 B212              jnz end_memory_mode
 078B                   
 078B                   ;Computing sum here
 078B                   
 078B 55620A            mov [input_count],0Ah   ;This will enable us to add 4 sets of "time" values. This can be changed as per the requirement.
 078E 556404            mov [counting_adds],04h         ;since there will be 4 additions to finish adding two "times" we will set a counter for that.
 0791 556391            mov [counter_sum],91h
 0794 55A7D0            mov [counter_input],D0h
 0797 55DD03            mov [DDh],03h
 079A                   
 079A           read_inputs:
 079A 3EDD              mvi A, [DDh]
 079C 3FA7              mvi [counter_input], A
 079E 7ADD              dec [DDh]
 07A0 7ADD              dec [DDh]
 07A2 3EDD              mvi A, [DDh]
 07A4 3FA7              mvi [counter_input], A
 07A6 7ADD              dec [DDh]
 07A8 7ADD              dec [DDh]
 07AA 3EDD              mvi A, [DDh]
 07AC 3FA7              mvi [counter_input], A
 07AE 7ADD              dec [DDh]
 07B0 7ADD              dec [DDh]
 07B2 3EDD              mvi A, [DDh]
 07B4 3FA7              mvi [counter_input], A
 07B6 7ADD              dec [DDh]
 07B8 06DD07            add [DDh],07h
 07BB 7A62              dec [input_count]
 07BD 3C6200            cmp [input_count],00h
 07C0 BFD9              jnz read_inputs
 07C2                   
 07C2 5000              mov A,00h
 07C4 3F63              mvi [counter_sum],A
 07C6 3F63              mvi [counter_sum],A
 07C8 3F63              mvi [counter_sum],A
 07CA 3F63              mvi [counter_sum],A
 07CC                   
 07CC                   ;register counter_sum will point to register 90h so that counter_sum can be implemented in MVI
 07CC                   ;load the first set of inputs into register that hold sum (90h,91h,92h)
 07CC                   
 07CC                   
 07CC 55620A            mov [input_count],0Ah           
 07CF 55A7D0            mov [counter_input],D0h
 07D2           compute_sum:
 07D2 556404            mov [counting_adds],04h
 07D5 556391            mov [counter_sum],91h
 07D8           add_values:
 07D8           	;read value from the 1st set of inputs
 07D8 3EA7              mvi A,[counter_input]
 07DA 5365              mov [operand_2],A
 07DC                   ;move value in 90h to add to corresponding ms value 
 07DC 3E63              mvi A,[counter_sum]
 07DE 0265              add A,[operand_2]
 07E0 393C              cmp A,3Ch       ;compare each value with 60 so that when it exceeds 60, add 1 to next value in the sequence.
 07E2 D016              jnc add_one     ;if A is >= 3C increment the value in the sequence by 1
 07E4                   ;move the sum into 90h register which is designated to hold ms values
 07E4 7A63              dec [counter_sum]
 07E6 3F63              mvi [counter_sum],A
 07E8 7A64              dec [counting_adds]
 07EA 3C6400            cmp [counting_adds],00  ;compare if all 4 values are added. 
 07ED BFEA              jnz add_values
 07EF 7A62              dec [input_count]               ;this counter keeps track of how many sets of values have been added.
 07F1 3C6200            cmp [input_count],00
 07F4 BFDD              jnz compute_sum         ;if they are added then start adding new set of values to the existing sum.
 07F6 7D081A            ljmp _avg_cal
 07F9                   
 07F9                   ;incrementing the next value by 1
 07F9           add_one:
 07F9 113C              sub A,3Ch       ;get the value to be written into 90h after subtracting the carry value 
 07FB 7A63              dec [counter_sum]
 07FD 3F63              mvi [counter_sum],A 
 07FF 3E63              mvi A,[counter_sum]     ;read value in 91h so that carry value can be added to it
 0801 0101              add A,1         ;add carry value
 0803 7A63              dec [counter_sum]               
 0805 3F63              mvi [counter_sum],A     ;write back the value to 91h after adding carry.
 0807 7A63              dec [counter_sum]       
 0809 7A64              dec [counting_adds]
 080B 3C6400            cmp [counting_adds],00  ;compare if all 4 values are added. 
 080E BFC9              jnz add_values
 0810 7A62              dec [input_count]               ;this counter keeps track of how many sets of values have been added.
 0812 3C6200            cmp [input_count],00
 0815 BFBC              jnz compute_sum         ;if they are added then start adding new set of values to the existing sum.
 0817 7D081A            ljmp _avg_cal
 081A           
 081A                   ;Computing average here
 081A                   
 081A           _avg_cal:
 081A 55620A            mov [input_count],0Ah
 081D 557200            mov [72h],00h
 0820 62D006            mov reg[CUR_PP], 06h
 0823 5F1094            mov [10h], [94h]                        ;ram_2[10h]=value in 93h which is the sum of hours
 0826 62D000            mov reg[CUR_PP], 00h            ;set Current Page Pointer back to 0
 0829 55EB10            mov [EBh], 10h                          ;initialize MVI read pointer to 10h
 082C 3EEB              mvi A, [EBh]                            ;read the value in 93h to A
 082E 558600            mov [86h],00h
 0831 5577B0            mov [result_avg],B0h
 0834 551100            mov [quotient_val], 00h
 0837                   
 0837           compute_avg_hr:
 0837 3A62              cmp A,[input_count]
 0839 D00A              jnc find_q_hr
 083B 5385              mov [85h],A                                     ;85h holds the remainder
 083D 5111              mov A,[quotient_val]
 083F 3F77              mvi [result_avg],A      ;register 83h holds the quotient
 0841 7D084B            ljmp compute_avg_min
 0844           
 0844           find_q_hr:
 0844 1262              sub A,[input_count]
 0846 7611              inc [quotient_val]
 0848 7D0837            ljmp compute_avg_hr
 084B                   
 084B           compute_avg_min:
 084B 55720A            mov [72h],0Ah
 084E 556100            mov [61h],00h
 0851 556800            mov [68h],00h
 0854 5000              mov A,00h
 0856                   
 0856           Com_rem:
 0856 551100            mov [quotient_val],00h
 0859 557506            mov [75h], 06h
 085C                   
 085C           compute_prd:
 085C 0285              add A,[85h]
 085E 7A75              dec [75h]
 0860 3C7500            cmp [75h],00h
 0863 BFF8              jnz compute_prd
 0865                   
 0865           compute_rem:
 0865 3A62              cmp A,[input_count]
 0867 D018              jnc find_q1
 0869 5386              mov [86h],A                     ;86h holds the remainder
 086B 5F6811            mov [68h],[quotient_val]                ;holds the quotient
 086E 5168              mov A,[68h]
 0870 0461              add [61h],A
 0872 5000              mov A,00h
 0874 0286              add A,[86h]                     ;add remainder to A and repeat the operation for "value in [input_count]" times
 0876 7A72              dec [72h]
 0878 3C7200            cmp [72h],00h
 087B BFDA              jnz Com_rem
 087D 7D0887            ljmp add_tonext
 0880           
 0880           find_q1:
 0880 1262              sub A,[input_count]
 0882 7611              inc [quotient_val]
 0884 7D0865            ljmp compute_rem
 0887                   
 0887           add_tonext:
 0887 62D006            mov reg[CUR_PP], 06h            ;set Current Page Pointer to 2
 088A 5F1093            mov [10h], [93h]                                
 088D 62D000            mov reg[CUR_PP], 00h
 0890           
 0890 55EB10            mov [EBh], 10h          ;initialize MVI read pointer to 10h
 0893 3EEB              mvi A, [EBh]            ;read the value in 92h into A
 0895 0286              add A,[86h]
 0897 551100            mov [quotient_val],00h
 089A                   
 089A           compute_avg:
 089A 3A62              cmp A,[input_count]
 089C D00C              jnc find_q_min
 089E 5385              mov [85h],A                                     ;85h holds the remainder
 08A0 5111              mov A,[quotient_val]
 08A2 0261              add A,[61h]
 08A4 3F77              mvi [result_avg],A                      ;register 81h holds the quotient
 08A6 7D08B0            ljmp compute_avg_sec
 08A9           
 08A9           find_q_min:
 08A9 1262              sub A,[input_count]
 08AB 7611              inc [quotient_val]
 08AD 7D089A            ljmp compute_avg
 08B0                   
 08B0           compute_avg_sec:
 08B0 55720A            mov [72h],0Ah
 08B3 556100            mov [61h],00h
 08B6 556800            mov [68h],00h
 08B9 5000              mov A,00h
 08BB                   
 08BB           Com_rem_sec:
 08BB 551100            mov [quotient_val],00h
 08BE 557506            mov [75h],06h   
 08C1                   
 08C1           compute_prd_sec:
 08C1 0285              add A,[85h]
 08C3 7A75              dec [75h]
 08C5 3C7500            cmp [75h],00h
 08C8 BFF8              jnz compute_prd_sec
 08CA                   
 08CA           compute_rem_sec:
 08CA 3A62              cmp A,[input_count]
 08CC D018              jnc find_q1_sec
 08CE 5386              mov [86h],A                     ;86h holds the remainder
 08D0 5F6811            mov [68h],[quotient_val]                ;holds the quotient
 08D3 5168              mov A,[68h]
 08D5 0461              add [61h],A
 08D7 5000              mov A,00h
 08D9 0286              add A,[86h]                     ;add remainder to A and repeat the operation for "value in [input_count]" times
 08DB 7A72              dec [72h]
 08DD 3C7200            cmp [72h],00h
 08E0 BFDA              jnz Com_rem_sec
 08E2 7D08EC            ljmp add_tonext_sec
 08E5           
 08E5           find_q1_sec:
 08E5 1262              sub A,[input_count]
 08E7 7611              inc [quotient_val]
 08E9 7D08CA            ljmp compute_rem_sec
 08EC                   
 08EC           add_tonext_sec:
 08EC 62D006            mov reg[CUR_PP], 06h            ;set Current Page Pointer to 2
 08EF 5F1092            mov [10h], [92h]                                
 08F2 62D000            mov reg[CUR_PP], 00h
 08F5           
 08F5 55EB10            mov [EBh], 10h          ;initialize MVI read pointer to 10h
 08F8 3EEB              mvi A, [EBh]            ;read the value in 92h into A
 08FA 0286              add A,[86h]
 08FC 551100            mov [quotient_val],00h
 08FF                   
 08FF           compute_avg_sec1:
 08FF 3A62              cmp A,[input_count]
 0901 D00C              jnc find_q_sec
 0903 5385              mov [85h],A                                     ;85h holds the remainder
 0905 5111              mov A,[quotient_val]
 0907 0261              add A,[61h]
 0909 3F77              mvi [result_avg],A                                      ;register 81h holds the quotient
 090B 7D0915            ljmp add_tonext_msec
 090E           
 090E           find_q_sec:
 090E 1262              sub A,[input_count]
 0910 7611              inc [quotient_val]
 0912 7D08FF            ljmp compute_avg_sec1
 0915                   
 0915           add_tonext_msec:
 0915 62D006            mov reg[CUR_PP], 06h            ;set Current Page Pointer to 2
 0918 5FB391            mov [B3h], [91h]                                
 091B 62D000            mov reg[CUR_PP], 00h    
 091E                   
 091E           display_avg:
 091E 55A7B0            mov [counter_input],B0h
 0921 3EA7              mvi A,[counter_input]
 0923 53C0              mov [C0h],A
 0925 3EA7              mvi A,[counter_input]
 0927 53C1              mov [C1h],A
 0929 3EA7              mvi A,[counter_input]
 092B 53C2              mov [C2h],A
 092D 3EA7              mvi A,[counter_input]
 092F 53C3              mov [C3h],A
 0931                   
 0931                   ;Display
 0931 7C0000            lcall   LCD_Start       ; Initialize LCD
 0934 5000              mov    A,00h           ; Set cursor position at row = 0
 0936 5700              mov    X,00h           ; col = 5
 0938 7C0000            lcall   LCD_Position
 093B 507B              mov    A, >STRING3      ; Higher byte
 093D 577B              mov        X, <STRING3
 093F 7C0000        lcall  LCD_PrCString   
 0942           
 0942 5001              mov    A,01h           ; Set cursor position at row = 0
 0944 5700              mov    X,00h           ; col = 5
 0946 7C0000            lcall   LCD_Position
 0949 51C0              mov    A,[C0h]          ; Higher byte
 094B 7C0000        lcall   LCD_PrHexByte     
 094E                   
 094E 5001              mov    A,01h           ; Set cursor position at row = 0
 0950 5702              mov    X,02h           ; col = 5
 0952 7C0000            lcall   LCD_Position
 0955 5077              mov    A, >THE_STRING20         ; Higher byte
 0957 5777              mov        X, <THE_STRING20
 0959 7C0000        lcall  LCD_PrCString          
 095C                   
 095C 5001              mov    A,01h           ; Set cursor position at row = 0
 095E 5703              mov    X,03h           ; col = 5
 0960 7C0000            lcall   LCD_Position
 0963 51C1              mov    A,[C1h]          ; Lower byte
 0965 7C0000            lcall   LCD_PrHexByte  
 0968                   
 0968 5001              mov    A,01h           ; Set cursor position at row = 0
 096A 5705              mov    X,05h           ; col = 5
 096C 7C0000            lcall   LCD_Position
 096F 5077              mov    A, >THE_STRING20         ; Higher byte
 0971 5777              mov        X, <THE_STRING20
 0973 7C0000        lcall   LCD_PrCString          
 0976                   
 0976 5001              mov    A,01h           ; Set cursor position at row = 0
 0978 5706              mov    X,06h           ; col = 5
 097A 7C0000            lcall   LCD_Position
 097D 51C2              mov    A,[C2h]          ; Load pointer to ROM string
 097F 7C0000            lcall   LCD_PrHexByte   
 0982                   
 0982 5001              mov    A,01h           ; Set cursor position at row = 0
 0984 5708              mov    X,08h           ; col = 5
 0986 7C0000            lcall   LCD_Position
 0989 5079              mov    A, >THE_STRING21         ; Higher byte
 098B 5779              mov        X, <THE_STRING21
 098D 7C0000        lcall   LCD_PrCString          
 0990                   
 0990 5001              mov    A,01h           ; Set cursor position at row = 0
 0992 5709              mov    X,09h           ; col = 5
 0994 7C0000            lcall   LCD_Position
 0997 51C3              mov    A,[C3h]          ; Load pointer to ROM string
 0999 7C0000            lcall   LCD_PrHexByte  
 099C           
 099C           end_memory_mode:
 099C 3C0D04            cmp [addr_shrt_p], 04h
 099F 550D00            mov [addr_shrt_p], 00h
 09A2 7D00D4            ljmp loop
 09A5           
 09A5           
 09A5           ;---------------------END MEMORY MODE----------------------------------------
 09A5                   
 09A5           .terminate:
 09A5 7D09A5        ljmp .terminate
 09A8                   
 09A8           ;---------------------END OF MAIN CODE----------------------------------------
 09A8           ;-----------------------------------------------------------------------------
 09A8           
 09A8           divide_32_routine:	
 09A8 10                push X ; preserve the X register if necessary 
 09A9 5027              mov A, >dRes ; push the address of result variable 
 09AB 08                push A 
 09AC 5027              mov A, <dRes 
 09AE 08                push A 
 09AF 511F              mov A, [dOpr2+0] ; push the second parameter dOpr2 
 09B1 08                push A 
 09B2 5120              mov A, [dOpr2+1] 
 09B4 08                push A 
 09B5 5121              mov A, [dOpr2+2] 
 09B7 08                push A 
 09B8 5122              mov A, [dOpr2+3] 
 09BA 08                push A 
 09BB 5123              mov A, [dOpr1+0] ; push the first parameter dOpr1 
 09BD 08                push A 
 09BE 5124              mov A, [dOpr1+1] 
 09C0 08                push A 
 09C1 5125              mov A, [dOpr1+2] 
 09C3 08                push A 
 09C4 5126              mov A, [dOpr1+3] 
 09C6 08                push A 
 09C7 7C0000            lcall divu_32x32_32 ; do the application 
 09CA 38F6              add SP, 246 ; pop the stack 
 09CC 20                pop X ; restore the X register if necessary
 09CD 7F        ret     
 09CE           
 09CE           
 09CE           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 09CE           ;alex charan
 09CE           Sound_mode_generic_timer:
 09CE           ;check_run_timer:
 09CE           
 09CE           	;lcall Display_Time_LCD
 09CE           	;ljmp loop
 09CE           
 09CE 3C0E01                    cmp [addr_acc_mode],sec_mode
 09D1 A024                      jz Sound_label_sec_mode
 09D3           
 09D3 3C0E02                    cmp [addr_acc_mode],halfsec_mode
 09D6 A007                      jz Sound_label_halfsec_mode
 09D8           
 09D8           	Sound_label_tenthsec_mode:
 09D8           		;mov [addr_inc_ms], [addr_internal_inc_ms]
 09D8 5F0300                    mov [addr_inc_ms], [addr_timer_inc_ms]
 09DB 7D09FF                    ljmp Sound_check_ms
 09DE           
 09DE           	Sound_label_halfsec_mode: 
 09DE           ;		mov A, [addr_internal_inc_ms]
 09DE 5100                      mov A, [addr_timer_inc_ms]
 09E0 5C                        mov X, A
 09E1 3932                      cmp A, 32h
 09E3 B007                      jnz Sound_check_if_00
 09E5           ;               mov [addr_inc_ms], [addr_internal_inc_ms]
 09E5 5F0300                    mov [addr_inc_ms], [addr_timer_inc_ms]
 09E8 7D09FF                    ljmp Sound_check_ms
 09EB           	Sound_check_if_00:
 09EB 5B                        mov A, X
 09EC 3900                      cmp A, 00h
 09EE B010                      jnz Sound_check_ms
 09F0           ;               mov [addr_inc_ms], [addr_internal_inc_ms]
 09F0 5F0300                    mov [addr_inc_ms], [addr_timer_inc_ms]
 09F3 7D09FF                    ljmp Sound_check_ms
 09F6                           
 09F6           	Sound_label_sec_mode: 
 09F6           ;		mov A, [addr_internal_inc_ms]					;copy over because you need to compare
 09F6 5100                      mov A, [addr_timer_inc_ms]
 09F8 3900                      cmp A, 00h
 09FA B004                      jnz Sound_check_ms                                                                      ;keep display value as is
 09FC                           ;if it is 00 
 09FC           ;               mov [addr_inc_ms], [addr_internal_inc_ms]               ;update value to be displayed
 09FC 5F0300                    mov [addr_inc_ms], [addr_timer_inc_ms]
 09FF                           ;ljmp Sound_check_ms
 09FF                           
 09FF           
 09FF           	Sound_check_ms:
 09FF           ;		mov A, [addr_internal_inc_ms] 	;
 09FF 5100                      mov A, [addr_timer_inc_ms]      ;
 0A01 3964                      cmp A, 64h              ;compare to 100
 0A03 B006                      jnz Sound_display_ms
 0A05                           
 0A05           	Sound_reset_ms:
 0A05           ;		mov [addr_internal_inc_ms], 00h
 0A05 550000                    mov [addr_timer_inc_ms], 00h
 0A08 7604                      inc [addr_inc_s]                ;increment seconds
 0A0A                           
 0A0A           	Sound_display_ms:
 0A0A 5000                      mov A, 00h
 0A0C 5709                      mov X, 09h
 0A0E 7C0000                    lcall LCD_Position
 0A11 5103                      mov A, [addr_inc_ms]
 0A13 7C0000                    lcall LCD_PrHexByte
 0A16                           
 0A16           	Sound_check_sec:	
 0A16 5104                      mov A, [addr_inc_s]     ;move [251] to A as to not mess up the actual number in [251] during compare
 0A18 393C                      cmp A, 3Ch              ;compare with 60
 0A1A                                                           ;need to check CF : if it's not set than [251] is larger than 60
 0A1A B006                      jnz Sound_display_sec
 0A1C           
 0A1C           	Sound_reset_sec:
 0A1C 550400                    mov [addr_inc_s],00h
 0A1F 7605                      inc [addr_inc_m]                ;increment minutes
 0A21                           
 0A21           	Sound_display_sec:
 0A21 5000                  mov A, 00h
 0A23 5706                      mov X, 06h
 0A25 7C0000                    lcall LCD_Position
 0A28 5104                      mov A, [addr_inc_s]
 0A2A 7C0000                    lcall LCD_PrHexByte
 0A2D                           
 0A2D                           
 0A2D           	Sound_check_min:
 0A2D 5105                      mov A, [addr_inc_m]     ;move [251] to A as to not mess up the actual number in [251] during compare
 0A2F 393C                      cmp A, 3Ch              ;compare with 60
 0A31                                                           ;need to check CF : if it's not set than [251] is larger than 60
 0A31 B006                      jnz Sound_display_min
 0A33           
 0A33           	Sound_reset_min:
 0A33 550400                    mov [addr_inc_s],00h
 0A36 7606                      inc [addr_inc_h]
 0A38           
 0A38           	Sound_display_min:
 0A38 5000                  mov A, 00h
 0A3A 5703                      mov X, 03h
 0A3C 7C0000                    lcall LCD_Position
 0A3F 5105                      mov A, [addr_inc_m]
 0A41 7C0000                    lcall LCD_PrHexByte
 0A44                           
 0A44           	Sound_check_hour:
 0A44 5106                      mov A, [addr_inc_h]
 0A46 3918                      cmp A, 18h              ;compare with 24
 0A48 B004                      jnz Sound_display_hour
 0A4A                           
 0A4A           	Sound_reset_hour:
 0A4A 550600                    mov [addr_inc_h], 00h
 0A4D                           
 0A4D           	Sound_display_hour:
 0A4D 5000                      mov A, 00h
 0A4F 5700                      mov X, 00h
 0A51 7C0000                    lcall LCD_Position
 0A54 5106                      mov A, [addr_inc_h]
 0A56 7C0000                    lcall LCD_PrHexByte
 0A59 7F        ret
 0A5A           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0A5A           
 0A5A           
 0A5A           
 0A5A           ;-----------------------------------------------------------------------------
 0A5A           ;---------------------ROUTINE lcallS-------------------------------------------
 0A5A           
 0A5A           
 0A5A           ;---------------------END OF ROUTINE lcallS------------------------------------
 0A5A           ;-----------------------------------------------------------------------------
 0A5A           
 0A5A           
 0A5A           
 0A5A           .LITERAL 
 0A5A           THE_STRNG:
 0A5A 45767279546E67206973204177736D65 ds "EvryTng is Awsme"
 0A6A 00        db 00h
 0A6B           .ENDLITERAL 
 0A6B           
 0A6B           .LITERAL 
 0A6B           TENTHSEC_MODE:
 0A6B 4143433A2054454E5448202020202020 ds "ACC: TENTH      "
 0A7B 00        db 00h
 0A7C           .ENDLITERAL 
 0A7C           
 0A7C           .LITERAL 
 0A7C           HALFSEC_MODE:
 0A7C 4143433A2048414C462020202020 ds "ACC: HALF     "
 0A8A 00        db 00h
 0A8B           .ENDLITERAL 
 0A8B           
 0A8B           .LITERAL 
 0A8B           SEC_MODE:
 0A8B 4143433A2053454320202020202020 ds "ACC: SEC       "
 0A9A 00        db 00h
 0A9B           .ENDLITERAL 
 0A9B           
 0A9B           .LITERAL 
 0A9B           ACCURACY_MODE:
 0A9B 4143435552414359204D4F444520 ds "ACCURACY MODE "
 0AA9 00        db 00h
 0AAA           .ENDLITERAL
 0AAA           
 0AAA           .LITERAL 
 0AAA           BUTTON_MODE:
 0AAA 425554544F4E204D4F444520202020 ds "BUTTON MODE    "
 0AB9 00        db 00h
 0ABA           .ENDLITERAL
 0ABA           
 0ABA           .LITERAL 
 0ABA           DEBUG_MODE:
 0ABA 4445425547204D4F4445202020202020 ds "DEBUG MODE      "
 0ACA 00        db 00h
 0ACB           .ENDLITERAL
 0ACB           
 0ACB           .LITERAL 
 0ACB           CLEAR_TIME:
 0ACB 30303A30303A30303A30302020202020 ds "00:00:00:00     "
 0ADB 00        db 00h
 0ADC           .ENDLITERAL
 0ADC           
 0ADC           
 0ADC           .LITERAL 
 0ADC           MEMORY_MODE:
 0ADC 4D454D4F5259204D4F44452020202020 ds "MEMORY MODE     "
 0AEC 00        db 00h
 0AED           .ENDLITERAL
 0AED           
 0AED           .LITERAL 
 0AED           THRESHOLD_MODE:
 0AED 5448524553484F4C44204D4F44452020 ds "THRESHOLD MODE  "
 0AFD 00        db 00h
 0AFE           .ENDLITERAL
 0AFE           
 0AFE           
 0AFE           .LITERAL 
 0AFE           CALC_THRESH_MODE:
 0AFE 43414C43205448524553483A20202020 ds "CALC THRESH:    "
 0B0E 00        db 00h
 0B0F           .ENDLITERAL
 0B0F           
 0B0F           .LITERAL 
 0B0F           WHISTLE_MODE:
 0B0F 57484953544C453A2020202020202020 ds "WHISTLE:        "
 0B1F 00        db 00h
 0B20           .ENDLITERAL
 0B20           
 0B20           .LITERAL 
 0B20           SOUND_MODE:
 0B20 534F554E44204D4F4445202020202020 ds "SOUND MODE      "
 0B30 00        db 00h
 0B31           .ENDLITERAL
 0B31           
 0B31           .LITERAL 
 0B31           SOUND_TIMER:
 0B31 535441525420532054494D4552202020 ds "START S TIMER   "
 0B41 00        db 00h
 0B42           .ENDLITERAL
 0B42           
 0B42           .LITERAL 
 0B42           STOP_SOUND_TIMER:
 0B42 53544F5020532054494D455220202020 ds "STOP S TIMER    "
 0B52 00        db 00h
 0B53           .ENDLITERAL
 0B53           
 0B53           .LITERAL 
 0B53           CLEAN_LCD:
 0B53 20202020202020202020202020202020 ds "                "
 0B63 00        db 00h
 0B64           .ENDLITERAL
 0B64           
 0B64           
 0B64           .LITERAL 
 0B64           SAVE:
 0B64 53415645  ds "SAVE"
 0B68 00        db 00h
 0B69           .ENDLITERAL 
 0B69           
 0B69           .LITERAL 
 0B69           THREE_SPACE:
 0B69 202020    ds "   "
 0B6C 00        db 00h
 0B6D           .ENDLITERAL 
 0B6D           
 0B6D           .LITERAL 
 0B6D           NINE_SPACE:
 0B6D 202020202020202020 ds "         "
 0B76 00        db 00h
 0B77           .ENDLITERAL 
 0B77           
 0B77           .LITERAL 
 0B77           THE_STRING20:
 0B77 3A        ds ":"
 0B78 00        db 00h
 0B79           .ENDLITERAL 
 0B79           
 0B79           .LITERAL 
 0B79           THE_STRING21:
 0B79 2E        ds "."
 0B7A 00        db 00h
 0B7B           .ENDLITERAL 
 0B7B           
 0B7B           .LITERAL 
 0B7B           STRING3:
 0B7B 41564552414745 ds "AVERAGE"
 0B82 00        db 00h
 0B83           .ENDLITERAL 
 0B83           
 0B83           .LITERAL 
 0B83           MINIMUM:
 0B83 4D494E494D554D202020202020202020 ds "MINIMUM         "
 0B93 00        db 00h
 0B94           .ENDLITERAL 
 0B94           
 0B94           .LITERAL 
 0B94           MAXIMUM:
 0B94 4D4158494D554D20202020202020202020 ds "MAXIMUM          "
 0BA5 00        db 00h
 0BA6           .ENDLITERAL 
