;;*****************************************************************************
;;*****************************************************************************
;;  FILENAME: Timer16_secINT.asm
;;   Version: 2.6, Updated on 2015/3/4 at 22:27:47
;;  Generated by PSoC Designer 5.4.3191
;;
;;  DESCRIPTION: Timer16 Interrupt Service Routine
;;-----------------------------------------------------------------------------
;;  Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
;;*****************************************************************************
;;*****************************************************************************

include "m8c.inc"
include "memory.inc"
include "Timer16_sec.inc"


;-----------------------------------------------
;  Global Symbols
;-----------------------------------------------
export  _Timer16_sec_ISR


AREA InterruptRAM (RAM,REL,CON)

;@PSoC_UserCode_INIT@ (Do not change this line.)
;---------------------------------------------------
; Insert your custom declarations below this banner
;---------------------------------------------------

;------------------------
; Includes
;------------------------

	
;------------------------
;  Constant Definitions
;------------------------


;------------------------
; Variable Allocation
;------------------------


;---------------------------------------------------
; Insert your custom declarations above this banner
;---------------------------------------------------
;@PSoC_UserCode_END@ (Do not change this line.)


AREA UserModules (ROM, REL)

;-----------------------------------------------------------------------------
;  FUNCTION NAME: _Timer16_sec_ISR
;
;  DESCRIPTION: Unless modified, this implements only a null handler stub.
;
;-----------------------------------------------------------------------------
;

_Timer16_sec_ISR:

   ;@PSoC_UserCode_BODY@ (Do not change this line.)
   ;---------------------------------------------------
   ; Insert your custom assembly code below this banner
   ;---------------------------------------------------
   ;   NOTE: interrupt service routines must preserve
   ;   the values of the A and X CPU registers.  
   	push A
	push X


    ;toggle LEDs
	mov A, reg[PRT1DR]
	xor A, FFh 										;don't toggle LED 0
	mov reg[PRT1DR], A
	
   	;present numbr of interrupt on LCD
check_sec:	
	mov A, [251]	;move [251] to A as to not mess up the actual number in [251] during compare
	cmp A, 3Ch		;compare with 60
					;need to check CF : if it's not set than [251] is larger than 60
	jz reset_sec	;[251] == 60
	inc [251]
	jmp display_sec

reset_sec:
	mov [251],00h
	inc [252]		;increment minutes
	
display_sec:
    mov A, 00h
	mov X, 00h
	call LCD_Position
	mov A, [251]
	call LCD_PrHexByte
	
	
check_min:
	mov A, [252]	;move [251] to A as to not mess up the actual number in [251] during compare
	cmp A, 3Ch		;compare with 60
					;need to check CF : if it's not set than [251] is larger than 60
	jz reset_min	;[251] == 60
	;inc [252]
	jmp display_min

reset_min:
	mov [252],00h

	
display_min:
    mov A, 01h
	mov X, 00h
	call LCD_Position
	mov A, [252]
	call LCD_PrHexByte
	
    pop A
	pop X
   
   ;---------------------------------------------------
   ; Insert your custom assembly code above this banner
   ;---------------------------------------------------
   
   ;---------------------------------------------------
   ; Insert a lcall to a C function below this banner
   ; and un-comment the lines between these banners
   ;---------------------------------------------------
   
   ;PRESERVE_CPU_CONTEXT
   ;lcall _My_C_Function
   ;RESTORE_CPU_CONTEXT
   
   ;---------------------------------------------------
   ; Insert a lcall to a C function above this banner
   ; and un-comment the lines between these banners
   ;---------------------------------------------------
   ;@PSoC_UserCode_END@ (Do not change this line.)

   reti


; end of file Timer16_secINT.asm
