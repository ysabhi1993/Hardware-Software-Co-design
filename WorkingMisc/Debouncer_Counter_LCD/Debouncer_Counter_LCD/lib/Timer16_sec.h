//*****************************************************************************
//*****************************************************************************
//  FILENAME: Timer16_sec.h
//   Version: 2.6, Updated on 2015/3/4 at 22:27:47
//  Generated by PSoC Designer 5.4.3191
//
//  DESCRIPTION: Timer16 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef Timer16_sec_INCLUDE
#define Timer16_sec_INCLUDE

#include <m8c.h>

#pragma fastcall16 Timer16_sec_EnableInt
#pragma fastcall16 Timer16_sec_DisableInt
#pragma fastcall16 Timer16_sec_Start
#pragma fastcall16 Timer16_sec_Stop
#pragma fastcall16 Timer16_sec_wReadTimer                // Read  DR0
#pragma fastcall16 Timer16_sec_wReadTimerSaveCV          // Read  DR0      
#pragma fastcall16 Timer16_sec_WritePeriod               // Write DR1
#pragma fastcall16 Timer16_sec_wReadCompareValue         // Read  DR2
#pragma fastcall16 Timer16_sec_WriteCompareValue         // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 wTimer16_sec_ReadCounter              // Read  DR0 "Obsolete"
#pragma fastcall16 wTimer16_sec_CaptureCounter           // Read  DR0 "Obsolete"
#pragma fastcall16 wTimer16_sec_ReadTimer                // Read  DR0 (Deprecated)
#pragma fastcall16 wTimer16_sec_ReadTimerSaveCV          // Read  DR0 (Deprecated)
#pragma fastcall16 wTimer16_sec_ReadCompareValue         // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the Timer16_sec API.
//-------------------------------------------------

extern void Timer16_sec_EnableInt(void);                           // Proxy 1
extern void Timer16_sec_DisableInt(void);                          // Proxy 1
extern void Timer16_sec_Start(void);                               // Proxy 1
extern void Timer16_sec_Stop(void);                                // Proxy 1
extern WORD Timer16_sec_wReadTimer(void);                          // Proxy 1
extern WORD Timer16_sec_wReadTimerSaveCV(void);                    // Proxy 2
extern void Timer16_sec_WritePeriod(WORD wPeriod);                 // Proxy 1
extern WORD Timer16_sec_wReadCompareValue(void);                   // Proxy 1
extern void Timer16_sec_WriteCompareValue(WORD wCompareValue);     // Proxy 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern WORD wTimer16_sec_ReadCompareValue(void);       // Deprecated
extern WORD wTimer16_sec_ReadTimerSaveCV(void);        // Deprecated
extern WORD wTimer16_sec_ReadCounter(void);            // Obsolete
extern WORD wTimer16_sec_ReadTimer(void);              // Deprecated
extern WORD wTimer16_sec_CaptureCounter(void);         // Obsolete


//--------------------------------------------------
// Constants for Timer16_sec API's.
//--------------------------------------------------

#define Timer16_sec_CONTROL_REG_START_BIT      ( 0x01 )
#define Timer16_sec_INT_REG_ADDR               ( 0x0e1 )
#define Timer16_sec_INT_MASK                   ( 0x02 )


//--------------------------------------------------
// Constants for Timer16_sec user defined values
//--------------------------------------------------

#define Timer16_sec_PERIOD                     ( 0x16e )
#define Timer16_sec_COMPARE_VALUE              ( 0x0 )


//-------------------------------------------------
// Register Addresses for Timer16_sec
//-------------------------------------------------

#pragma ioport  Timer16_sec_COUNTER_LSB_REG:    0x020      //Count register LSB
BYTE            Timer16_sec_COUNTER_LSB_REG;
#pragma ioport  Timer16_sec_COUNTER_MSB_REG:    0x024      //Count register MSB
BYTE            Timer16_sec_COUNTER_MSB_REG;
#pragma ioport  Timer16_sec_PERIOD_LSB_REG: 0x021          //Period register LSB
BYTE            Timer16_sec_PERIOD_LSB_REG;
#pragma ioport  Timer16_sec_PERIOD_MSB_REG: 0x025          //Period register MSB
BYTE            Timer16_sec_PERIOD_MSB_REG;
#pragma ioport  Timer16_sec_COMPARE_LSB_REG:    0x022      //Compare register LSB
BYTE            Timer16_sec_COMPARE_LSB_REG;
#pragma ioport  Timer16_sec_COMPARE_MSB_REG:    0x026      //Compare register MSB
BYTE            Timer16_sec_COMPARE_MSB_REG;
#pragma ioport  Timer16_sec_CONTROL_LSB_REG:    0x023      //Control register LSB
BYTE            Timer16_sec_CONTROL_LSB_REG;
#pragma ioport  Timer16_sec_CONTROL_MSB_REG:    0x027      //Control register MSB
BYTE            Timer16_sec_CONTROL_MSB_REG;
#pragma ioport  Timer16_sec_FUNC_LSB_REG:   0x120          //Function register LSB
BYTE            Timer16_sec_FUNC_LSB_REG;
#pragma ioport  Timer16_sec_FUNC_MSB_REG:   0x124          //Function register MSB
BYTE            Timer16_sec_FUNC_MSB_REG;
#pragma ioport  Timer16_sec_INPUT_LSB_REG:  0x121          //Input register LSB
BYTE            Timer16_sec_INPUT_LSB_REG;
#pragma ioport  Timer16_sec_INPUT_MSB_REG:  0x125          //Input register MSB
BYTE            Timer16_sec_INPUT_MSB_REG;
#pragma ioport  Timer16_sec_OUTPUT_LSB_REG: 0x122          //Output register LSB
BYTE            Timer16_sec_OUTPUT_LSB_REG;
#pragma ioport  Timer16_sec_OUTPUT_MSB_REG: 0x126          //Output register MSB
BYTE            Timer16_sec_OUTPUT_MSB_REG;
#pragma ioport  Timer16_sec_INT_REG:       0x0e1           //Interrupt Mask Register
BYTE            Timer16_sec_INT_REG;


//-------------------------------------------------
// Timer16_sec Macro 'Functions'
//-------------------------------------------------

#define Timer16_sec_Start_M \
   ( Timer16_sec_CONTROL_LSB_REG |=  Timer16_sec_CONTROL_REG_START_BIT )

#define Timer16_sec_Stop_M  \
   ( Timer16_sec_CONTROL_LSB_REG &= ~Timer16_sec_CONTROL_REG_START_BIT )

#define Timer16_sec_EnableInt_M   \
   M8C_EnableIntMask(  Timer16_sec_INT_REG, Timer16_sec_INT_MASK )

#define Timer16_sec_DisableInt_M  \
   M8C_DisableIntMask( Timer16_sec_INT_REG, Timer16_sec_INT_MASK )

#endif
// end of file Timer16_sec.h
